
// line 1 "src/rl/momentum/http/HttpParser.rl"
package momentum.http;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.Queue;
import clojure.lang.AFn;
import momentum.buffer.Buffer;

/**
 * TODO:
 *   - Improve the handling of Connection header values
 *   - Handle full URIs in the request line
 *   - Possibly handle quotes in URIs (old Mozilla bug)
 */
public final class HttpParser extends AFn {
  public enum MessageType {
    REQUEST,
    RESPONSE
  }

  public static final byte SP = (byte) 0x20; // Space
  public static final byte HT = (byte) 0x09; // Horizontal tab
  public static final String SLASH = new String("/").intern();
  public static final String UTF_8 = new String("UTF-8").intern();
  public static final String EMPTY_STRING = new String("").intern();
  public static final byte[] EMPTY_BUFFER = new byte[0];
  public static final Buffer SPACE = Buffer.wrap(new byte[] { SP });

  public static final int MAX_BUFFERED = 4096;

  // Map of hexadecimal chars to their numeric value
  public static final byte[] HEX_MAP = new byte [] {
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1,
    -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
  };

  /*
   * Listing out all the HTTP methods that we care about
   */

  // basic
  public static final String MTH_HEAD    = "HEAD".intern();
  public static final String MTH_GET     = "GET".intern();
  public static final String MTH_POST    = "POST".intern();
  public static final String MTH_PUT     = "PUT".intern();
  public static final String MTH_DELETE  = "DELETE".intern();
  public static final String MTH_CONNECT = "CONNECT".intern();
  public static final String MTH_OPTIONS = "OPTIONS".intern();
  public static final String MTH_TRACE   = "TRACE".intern();

  // webdav
  public static final String MTH_COPY      = "COPY".intern();
  public static final String MTH_LOCK      = "LOCK".intern();
  public static final String MTH_MKCOL     = "MKCOL".intern();
  public static final String MTH_MOVE      = "MOVE".intern();
  public static final String MTH_PROPFIND  = "PROPFIND".intern();
  public static final String MTH_PROPPATCH = "PROPPATCH".intern();
  public static final String MTH_UNLOCK    = "UNLOCK".intern();

  // subversion
  public static final String MTH_REPORT     = "REPORT".intern();
  public static final String MTH_MKACTIVITY = "MKACTIVITY".intern();
  public static final String MTH_CHECKOUT   = "CHECKOUT".intern();
  public static final String MTH_MERGE      = "MERGE".intern();

  // upnp
  public static final String MTH_MSEARCH     = "MSEARCH".intern();
  public static final String MTH_NOTIFY      = "NOTIFY".intern();
  public static final String MTH_SUBSCRIBE   = "SUBSCRIBE".intern();
  public static final String MTH_UNSUBSCRIBE = "UNSUBSCRIBE".intern();

  // RFC-5789
  public static final String MTH_PATCH = "PATCH".intern();

  // Listing out all of the headers that we are going to use
  public static final String HDR_ACCEPT                    = "accept".intern();
  public static final String HDR_ACCEPT_CHARSET            = "accept-charset".intern();
  public static final String HDR_ACCEPT_ENCODING           = "accept-encoding".intern();
  public static final String HDR_ACCEPT_LANGUAGE           = "accept-language".intern();
  public static final String HDR_ACCEPT_RANGES             = "accept-ranges".intern();
  public static final String HDR_AGE                       = "age".intern();
  public static final String HDR_ALLOW                     = "allow".intern();
  public static final String HDR_AUTHORIZATION             = "authorization".intern();
  public static final String HDR_CACHE_CONTROL             = "cache-control".intern();
  public static final String HDR_CONNECTION                = "connection".intern();
  public static final String HDR_CONTENT_ENCODING          = "content-encoding".intern();
  public static final String HDR_CONTENT_LANGUAGE          = "content-language".intern();
  public static final String HDR_CONTENT_LENGTH            = "content-length".intern();
  public static final String HDR_CONTENT_LOCATION          = "content-location".intern();
  public static final String HDR_CONTENT_MD5               = "content-md5".intern();
  public static final String HDR_CONTENT_DISPOSITION       = "content-disposition".intern();
  public static final String HDR_CONTENT_RANGE             = "content-range".intern();
  public static final String HDR_CONTENT_TYPE              = "content-type".intern();
  public static final String HDR_COOKIE                    = "cookie".intern();
  public static final String HDR_DATE                      = "date".intern();
  public static final String HDR_DNT                       = "dnt".intern();
  public static final String HDR_ETAG                      = "etag".intern();
  public static final String HDR_EXPECT                    = "expect".intern();
  public static final String HDR_EXPIRES                   = "expires".intern();
  public static final String HDR_FROM                      = "from".intern();
  public static final String HDR_HOST                      = "host".intern();
  public static final String HDR_IF_MATCH                  = "if-match".intern();
  public static final String HDR_IF_MODIFIED_SINCE         = "if-modified-since".intern();
  public static final String HDR_IF_NONE_MATCH             = "if-none-match".intern();
  public static final String HDR_IF_RANGE                  = "if-range".intern();
  public static final String HDR_IF_UNMODIFIED_SINCE       = "if-unmodified-since".intern();
  public static final String HDR_KEEP_ALIVE                = "keep-alive".intern();
  public static final String HDR_LAST_MODIFIED             = "last-modified".intern();
  public static final String HDR_LINK                      = "link".intern();
  public static final String HDR_LOCATION                  = "location".intern();
  public static final String HDR_MAX_FORWARDS              = "max-forwards".intern();
  public static final String HDR_P3P                       = "p3p".intern();
  public static final String HDR_PRAGMA                    = "pragma".intern();
  public static final String HDR_PROXY_AUTHENTICATE        = "proxy-authenticate".intern();
  public static final String HDR_PROXY_AUTHORIZATION       = "proxy-authorization".intern();
  public static final String HDR_RANGE                     = "range".intern();
  public static final String HDR_REFERER                   = "referer".intern();
  public static final String HDR_REFRESH                   = "refresh".intern();
  public static final String HDR_RETRY_AFTER               = "retry-after".intern();
  public static final String HDR_SERVER                    = "server".intern();
  public static final String HDR_SET_COOKIE                = "set-cookie".intern();
  public static final String HDR_STRICT_TRANSPORT_SECURITY = "strict-transport-security".intern();
  public static final String HDR_TE                        = "te".intern();
  public static final String HDR_TRAILER                   = "trailer".intern();
  public static final String HDR_TRANSFER_ENCODING         = "transfer-encoding".intern();
  public static final String HDR_UPGRADE                   = "upgrade".intern();
  public static final String HDR_USER_AGENT                = "user-agent".intern();
  public static final String HDR_VARY                      = "vary".intern();
  public static final String HDR_VIA                       = "via".intern();
  public static final String HDR_WARNING                   = "warning".intern();
  public static final String HDR_WWW_AUTHENTICATE          = "www-authenticate".intern();
  public static final String HDR_X_CONTENT_TYPE_OPTIONS    = "x-content-type-options".intern();
  public static final String HDR_X_DO_NOT_TRACK            = "x-do-not-track".intern();
  public static final String HDR_X_FORWARDED_FOR           = "x-forwarded-for".intern();
  public static final String HDR_X_FORWARDED_PROTO         = "x-forwarded-proto".intern();
  public static final String HDR_X_FRAME_OPTIONS           = "x-frame-options".intern();
  public static final String HDR_X_POWERED_BY              = "x-powered-by".intern();
  public static final String HDR_X_REQUESTED_WITH          = "x-requested-with".intern();
  public static final String HDR_X_XSS_PROTECTION          = "x-xss-protection".intern();

  public static final String VAL_100_CONTINUE = "100-continue".intern();
  public static final String VAL_CHUNKED      = "chunked".intern();
  public static final String VAL_CLOSE        = "close".intern();
  public static final String VAL_UPGRADE      = "upgrade".intern();

  public static boolean isWhiteSpace(byte b) {
    return b == SP || b == HT;
  }

  
// line 572 "src/rl/momentum/http/HttpParser.rl"


  public static final long ALMOST_MAX_LONG     = Long.MAX_VALUE / 10;
  public static final long ALMOST_MAX_LONG_HEX = Long.MAX_VALUE / 16;

  public static final int  MAX_HEADER_SIZE = 100 * 1024;
  public static final int  PARSING_HEAD    = 1 << 0;
  public static final int  IDENTITY_BODY   = 1 << 1;
  public static final int  CHUNKED_BODY    = 1 << 2;
  public static final int  CONN_CLOSE      = 1 << 3;
  public static final int  KEEP_ALIVE      = 1 << 4;
  public static final int  UPGRADE         = 1 << 5;
  public static final int  EXPECT_CONTINUE = 1 << 6;
  public static final int  ERROR           = 1 << 7;

  
// line 177 "src/jvm/momentum/http/HttpParser.java"
private static byte[] init__http_actions_0()
{
	return new byte [] {
	    0,    1,  105,    1,  106,    1,  107,    1,  108,    1,  109,    1,
	  111,    1,  113,    1,  114,    1,  115,    2,    0,  114,    2,    1,
	  114,    2,    2,  114,    2,    3,  114,    2,    4,  114,    2,    5,
	  114,    2,    6,  114,    2,    7,  114,    2,    8,  114,    2,    9,
	  114,    2,   10,  114,    2,   11,  114,    2,   12,  114,    2,   13,
	  114,    2,   14,  114,    2,   15,  114,    2,   16,  114,    2,   17,
	  114,    2,   18,  114,    2,   19,  114,    2,   20,  114,    2,   21,
	  114,    2,   22,  114,    2,   23,  114,    2,   24,  114,    2,   25,
	  114,    2,   90,  114,    2,   91,  114,    2,   92,  114,    2,   93,
	  114,    2,   94,  114,    2,   95,  114,    2,   96,  114,    2,   97,
	  114,    2,   97,  115,    2,  103,  114,    2,  104,  114,    2,  110,
	  111,    2,  112,  115,    2,  117,  114,    2,  118,  114,    2,  119,
	  114,    2,  120,  114,    2,  121,  114,    3,    0,  104,  114,    3,
	    0,  116,  114,    3,    1,  104,  114,    3,    1,  116,  114,    3,
	   26,  117,  114,    3,   27,  117,  114,    3,   28,  117,  114,    3,
	   29,  117,  114,    3,   30,  117,  114,    3,   31,  117,  114,    3,
	   32,  117,  114,    3,   33,  117,  114,    3,   34,  117,  114,    3,
	   35,  117,  114,    3,   36,  117,  114,    3,   37,  117,  114,    3,
	   38,  117,  114,    3,   39,  117,  114,    3,   40,  117,  114,    3,
	   41,  117,  114,    3,   42,  117,  114,    3,   43,  117,  114,    3,
	   44,  117,  114,    3,   45,  117,  114,    3,   46,  117,  114,    3,
	   47,  117,  114,    3,   48,  117,  114,    3,   49,  117,  114,    3,
	   50,  117,  114,    3,   51,  117,  114,    3,   52,  117,  114,    3,
	   53,  117,  114,    3,   54,  117,  114,    3,   55,  117,  114,    3,
	   56,  117,  114,    3,   57,  117,  114,    3,   58,  117,  114,    3,
	   59,  117,  114,    3,   60,  117,  114,    3,   61,  117,  114,    3,
	   62,  117,  114,    3,   63,  117,  114,    3,   64,  117,  114,    3,
	   65,  117,  114,    3,   66,  117,  114,    3,   67,  117,  114,    3,
	   68,  117,  114,    3,   69,  117,  114,    3,   70,  117,  114,    3,
	   71,  117,  114,    3,   72,  117,  114,    3,   73,  117,  114,    3,
	   74,  117,  114,    3,   75,  117,  114,    3,   76,  117,  114,    3,
	   77,  117,  114,    3,   78,  117,  114,    3,   79,  117,  114,    3,
	   80,  117,  114,    3,   81,  117,  114,    3,   82,  117,  114,    3,
	   83,  117,  114,    3,   84,  117,  114,    3,   85,  117,  114,    3,
	   86,  117,  114,    3,   87,  117,  114,    3,   88,  117,  114,    3,
	   89,  117,  114,    3,   96,  118,  114,    3,   97,  118,  114,    3,
	   98,  119,  114,    3,   99,  119,  114,    3,  100,  119,  114,    3,
	  101,  119,  114,    3,  102,  119,  114,    3,  103,   91,  114,    3,
	  119,  120,  114,    3,  121,  104,  114,    3,  121,  116,  114,    4,
	   98,  119,  120,  114,    4,   99,  119,  120,  114,    4,  100,  119,
	  120,  114,    4,  101,  119,  120,  114,    4,  102,  119,  120,  114,
	    4,  118,  119,  120,  114,    5,   97,  118,  119,  120,  114
	};
}

private static final byte _http_actions[] = init__http_actions_0();


private static byte[] init__http_cond_offsets_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    2,    2
	};
}

private static final byte _http_cond_offsets[] = init__http_cond_offsets_0();


private static byte[] init__http_cond_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    1,    0,    0
	};
}

private static final byte _http_cond_lengths[] = init__http_cond_lengths_0();


private static int[] init__http_cond_keys_0()
{
	return new int [] {
	    0,65535,    0,65535,    0
	};
}

private static final int _http_cond_keys[] = init__http_cond_keys_0();


private static byte[] init__http_cond_spaces_0()
{
	return new byte [] {
	    0,    0,    0
	};
}

private static final byte _http_cond_spaces[] = init__http_cond_spaces_0();


private static short[] init__http_key_offsets_0()
{
	return new short [] {
	    0,    0,   16,   32,   33,   35,   36,   37,   38,   39,   40,   41,
	   42,   46,   52,  104,  105,  106,  107,  108,  109,  110,  111,  112,
	  113,  116,  117,  118,  119,  121,  123,  124,  126,  129,  131,  134,
	  137,  139,  141,  144,  196,  197,  214,  217,  224,  278,  303,  322,
	  341,  360,  379,  397,  422,  441,  460,  479,  498,  517,  536,  553,
	  572,  591,  610,  629,  648,  667,  686,  703,  722,  741,  760,  779,
	  798,  817,  836,  853,  872,  891,  910,  929,  948,  965,  984, 1001,
	 1020, 1039, 1058, 1075, 1094, 1113, 1132, 1151, 1170, 1189, 1208, 1227,
	 1246, 1265, 1284, 1301, 1322, 1341, 1360, 1379, 1397, 1416, 1435, 1454,
	 1473, 1492, 1511, 1530, 1547, 1568, 1589, 1608, 1627, 1646, 1665, 1684,
	 1703, 1720, 1723, 1734, 1735, 1742, 1749, 1758, 1767, 1776, 1785, 1792,
	 1801, 1810, 1819, 1828, 1837, 1846, 1853, 1872, 1891, 1910, 1928, 1957,
	 1976, 1995, 2014, 2033, 2052, 2071, 2090, 2109, 2128, 2147, 2164, 2183,
	 2202, 2221, 2240, 2259, 2278, 2297, 2314, 2337, 2356, 2375, 2394, 2413,
	 2432, 2451, 2468, 2487, 2506, 2525, 2544, 2561, 2564, 2573, 2582, 2601,
	 2620, 2639, 2658, 2677, 2696, 2713, 2732, 2750, 2767, 2786, 2805, 2824,
	 2843, 2860, 2879, 2898, 2917, 2934, 2953, 2972, 2991, 3008, 3029, 3048,
	 3067, 3084, 3103, 3120, 3141, 3160, 3179, 3196, 3215, 3236, 3255, 3274,
	 3291, 3294, 3302, 3310, 3318, 3326, 3335, 3344, 3353, 3362, 3371, 3380,
	 3389, 3398, 3405, 3424, 3443, 3462, 3479, 3498, 3517, 3536, 3553, 3572,
	 3591, 3610, 3627, 3646, 3664, 3689, 3710, 3729, 3748, 3767, 3784, 3803,
	 3822, 3841, 3860, 3879, 3898, 3916, 3935, 3954, 3973, 3992, 4011, 4028,
	 4047, 4066, 4085, 4103, 4122, 4141, 4160, 4179, 4198, 4215, 4234, 4253,
	 4272, 4291, 4308, 4327, 4346, 4365, 4384, 4403, 4422, 4441, 4460, 4479,
	 4497, 4516, 4535, 4554, 4573, 4592, 4609, 4628, 4647, 4666, 4684, 4703,
	 4722, 4741, 4760, 4779, 4796, 4819, 4838, 4857, 4875, 4894, 4913, 4932,
	 4951, 4970, 4989, 5008, 5027, 5044, 5063, 5082, 5099, 5118, 5137, 5156,
	 5175, 5194, 5213, 5230, 5249, 5268, 5286, 5305, 5324, 5343, 5362, 5381,
	 5400, 5419, 5438, 5455, 5475, 5494, 5511, 5532, 5551, 5570, 5589, 5606,
	 5625, 5644, 5662, 5681, 5700, 5719, 5738, 5759, 5778, 5797, 5816, 5835,
	 5854, 5873, 5892, 5909, 5928, 5947, 5966, 5985, 6004, 6023, 6042, 6061,
	 6078, 6099, 6118, 6137, 6156, 6173, 6194, 6215, 6234, 6253, 6272, 6289,
	 6308, 6327, 6346, 6363, 6382, 6401, 6419, 6438, 6457, 6476, 6495, 6514,
	 6531, 6552, 6573, 6592, 6611, 6630, 6647, 6665, 6684, 6703, 6722, 6741,
	 6760, 6779, 6796, 6815, 6834, 6853, 6872, 6890, 6909, 6928, 6947, 6966,
	 6985, 7004, 7023, 7042, 7061, 7079, 7098, 7117, 7136, 7155, 7174, 7193,
	 7212, 7231, 7248, 7269, 7286, 7305, 7326, 7345, 7364, 7383, 7400, 7419,
	 7438, 7457, 7476, 7494, 7513, 7532, 7551, 7570, 7589, 7608, 7627, 7646,
	 7663, 7666, 7675, 7684, 7693, 7702, 7711, 7720, 7729, 7736, 7757, 7776,
	 7795, 7814, 7833, 7852, 7869, 7888, 7907, 7925, 7944, 7963, 7982, 8001,
	 8020, 8037, 8058, 8077, 8096, 8113, 8132, 8149, 8170, 8189, 8208, 8227,
	 8246, 8265, 8282, 8301, 8319, 8338, 8357, 8376, 8395, 8414, 8433, 8452,
	 8471, 8490, 8509, 8528, 8547, 8564, 8582, 8611, 8630, 8649, 8668, 8687,
	 8706, 8725, 8743, 8762, 8781, 8800, 8819, 8837, 8856, 8875, 8894, 8913,
	 8932, 8951, 8970, 8987, 9006, 9024, 9043, 9062, 9081, 9099, 9118, 9137,
	 9156, 9175, 9194, 9211, 9232, 9251, 9270, 9289, 9308, 9327, 9346, 9365,
	 9383, 9404, 9423, 9442, 9459, 9478, 9497, 9516, 9535, 9552, 9571, 9590,
	 9609, 9627, 9646, 9665, 9684, 9703, 9722, 9741, 9760, 9777, 9796, 9815,
	 9834, 9853, 9872, 9891, 9909, 9928, 9947, 9964, 9983,10002,10021,10040,
	10059,10078,10097,10116,10134,10153,10172,10191,10210,10227,10246,10265,
	10283,10302,10321,10340,10359,10378,10397,10416,10435,10454,10473,10490,
	10491,10496,10497,10498,10499,10500,10504,10505,10506,10507,10508,10510,
	10511,10512,10513,10514,10515,10516,10517,10518,10519,10520,10521,10522,
	10523,10524,10525,10526,10527,10528,10529,10530,10531,10532,10533,10534,
	10535,10536,10537,10538,10539,10540,10541,10542,10543,10547,10548,10549,
	10550,10551,10552,10553,10554,10555,10556,10558,10559,10560,10561,10562,
	10563,10564,10565,10566,10567,10568,10569,10570,10571,10572,10573,10574,
	10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586,
	10587,10588,10589,10590,10592,10593,10594,10595,10596,10597,10598,10599,
	10600,10601,10602,10603,10604,10605,10607,10608,10611,10613,10615,10617,
	10618,10620,10623,10625,10629,10631,10632,10633,10634,10635,10636,10637,
	10638,10645,10652,10661,10665,10672,10682,10687,10688,10693,10698,10699,
	10700,10705,10706,10707,10712,10728,10728,10730,10730
	};
}

private static final short _http_key_offsets[] = init__http_key_offsets_0();


private static int[] init__http_trans_keys_0()
{
	return new int [] {
	   10,   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,
	   83,   84,   85,  104,   10,   13,   67,   68,   71,   72,   76,   77,
	   78,   79,   80,   82,   83,   84,   85,  104,   10,   72,   79,   69,
	   67,   75,   79,   85,   84,   32,   32,  127,    0,   31,   10,   13,
	   32,  127,    0,   31,   10,   13,   34,   44,   47,   65,   67,   68,
	   69,   70,   72,   73,   75,   76,   77,   80,   82,   83,   84,   85,
	   86,   87,   88,   97,   99,  100,  101,  102,  104,  105,  107,  108,
	  109,  112,  114,  115,  116,  117,  118,  119,  120,  123,  125,  127,
	    0,   32,   40,   41,   58,   64,   91,   93,   69,   76,   69,   84,
	   69,   32,   69,   84,   32,   69,   84,  116,   65,   68,   32,   84,
	  116,   80,  112,   47,   48,   57,   46,   48,   57,   48,   57,   32,
	   48,   57,   32,   48,   57,   48,   57,   48,   57,   10,   13,   32,
	   10,   13,   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,
	   75,   76,   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,
	   99,  100,  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,
	  116,  117,  118,  119,  120,  123,  125,  127,    0,   32,   40,   41,
	   58,   64,   91,   93,   10,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   58,    9,   10,   13,   32,  127,    0,   31,    9,   10,   13,   32,
	   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,   76,
	   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,  100,
	  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,  117,
	  118,  119,  120,  123,  125,  127,    0,   31,   40,   41,   58,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   71,   76,   85,
	   99,  103,  108,  117,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   69,   76,   82,   99,
	  101,  108,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,
	  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   90,  122,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,   79,  110,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,   84,  110,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   58,    9,   10,   13,   32,   67,
	   85,   99,  117,  127,    0,   31,   10,    9,   10,   13,   32,  127,
	    0,   31,    9,   10,   13,   32,  127,    0,   31,    9,   10,   13,
	   32,   76,  108,  127,    0,   31,    9,   10,   13,   32,   79,  111,
	  127,    0,   31,    9,   10,   13,   32,   83,  115,  127,    0,   31,
	    9,   10,   13,   32,   69,  101,  127,    0,   31,    9,   10,   13,
	   32,  127,    0,   31,    9,   10,   13,   32,   80,  112,  127,    0,
	   31,    9,   10,   13,   32,   71,  103,  127,    0,   31,    9,   10,
	   13,   32,   82,  114,  127,    0,   31,    9,   10,   13,   32,   65,
	   97,  127,    0,   31,    9,   10,   13,   32,   68,  100,  127,    0,
	   31,    9,   10,   13,   32,   69,  101,  127,    0,   31,    9,   10,
	   13,   32,  127,    0,   31,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,   69,   76,   77,   82,   84,  100,  101,  108,  109,
	  114,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   69,   79,   97,  101,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,
	  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   58,    9,   10,   13,   32,
	  127,    0,   31,   48,   57,    9,   10,   13,   32,  127,    0,   31,
	   48,   57,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   53,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   78,   97,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,   88,  116,  120,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,   73,  101,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   58,    9,   10,   13,   32,   49,  127,
	    0,   31,    9,   10,   13,   32,   48,  127,    0,   31,    9,   10,
	   13,   32,   48,  127,    0,   31,    9,   10,   13,   32,   45,  127,
	    0,   31,    9,   10,   13,   32,   67,   99,  127,    0,   31,    9,
	   10,   13,   32,   79,  111,  127,    0,   31,    9,   10,   13,   32,
	   78,  110,  127,    0,   31,    9,   10,   13,   32,   84,  116,  127,
	    0,   31,    9,   10,   13,   32,   73,  105,  127,    0,   31,    9,
	   10,   13,   32,   78,  110,  127,    0,   31,    9,   10,   13,   32,
	   85,  117,  127,    0,   31,    9,   10,   13,   32,   69,  101,  127,
	    0,   31,    9,   10,   13,   32,  127,    0,   31,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,   78,
	   82,   85,  109,  110,  114,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   86,  118,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   73,   79,   97,  105,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   75,  107,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   88,
	  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   51,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   79,   97,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   88,  120,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,
	  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,   79,  101,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   90,  122,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   69,   97,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,
	   84,  102,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,   82,  101,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,   84,  101,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,   84,  114,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   86,  118,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,   82,  101,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,   78,  105,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   76,  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,   10,
	   13,   32,   67,   99,  127,    0,   31,    9,   10,   13,   32,   72,
	  104,  127,    0,   31,    9,   10,   13,   32,   85,  117,  127,    0,
	   31,    9,   10,   13,   32,   78,  110,  127,    0,   31,    9,   10,
	   13,   32,   75,  107,  127,    0,   31,    9,   10,   13,   32,   69,
	  101,  127,    0,   31,    9,   10,   13,   32,   68,  100,  127,    0,
	   31,    9,   10,   13,   32,  127,    0,   31,    9,   32,   34,   44,
	   47,   58,   80,   83,  112,  115,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   73,   97,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   87,   97,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40
	};
};
private static int[] init__http_trans_keys_1()
{
	return new int [] {
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   68,   70,   80,
	   82,   88,   99,  100,  102,  112,  114,  120,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,   82,  111,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,   80,  102,  112,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   66,   98,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   81,  113,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,   10,   10,   13,  127,    0,   31,   79,   67,   75,   32,
	   69,   75,   79,   83,   82,   71,   69,   32,   65,   67,   67,   84,
	   73,   86,   73,   84,   89,   32,   79,   76,   32,   86,   69,   32,
	   69,   65,   82,   67,   72,   32,   79,   84,   73,   70,   89,   32,
	   80,   84,   73,   79,   78,   83,   32,   65,   79,   82,   85,   84,
	   67,   72,   32,   83,   84,   32,   79,   80,   70,   80,   73,   78,
	   68,   32,   65,   84,   67,   72,   32,   84,   32,   69,   80,   79,
	   82,   84,   32,   85,   66,   83,   67,   82,   73,   66,   69,   32,
	   82,   65,   67,   69,   32,   78,   76,   83,   79,   67,   75,   32,
	   85,   66,   83,   67,   82,   73,   66,   69,   32,   84,  116,   10,
	   32,   72,  104,   84,  116,   84,  116,   80,  112,   47,   48,   57,
	   46,   48,   57,   48,   57,   10,   13,   48,   57,   78,   80,   78,
	   69,   67,   84,   32,   89,   32,   48,   49,   57,   65,   70,   97,
	  102,   48,   49,   57,   65,   70,   97,  102,   10,   13,   59,   48,
	   57,   65,   70,   97,  102,65546,65549,131072,196607,   48,   49,   57,
	   65,   70,   97,  102,   10,   13,   48,   59,   49,   57,   65,   70,
	   97,  102,   10,   13,  127,    0,   31,   10,   10,   13,  127,    0,
	   31,   10,   13,  127,    0,   31,   10,   10,   10,   13,  127,    0,
	   31,   10,   10,   10,   13,  127,    0,   31,   10,   13,   67,   68,
	   71,   72,   76,   77,   78,   79,   80,   82,   83,   84,   85,  104,
	131072,196607,    0
	};
}

private static final int [] combine__http_trans_keys() {
	int [] combined = new int [ 10731 ];
	System.arraycopy ( init__http_trans_keys_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_trans_keys_1(), 0, combined, 8184, 2547 );
	return combined;
}
private static final int [] _http_trans_keys = combine__http_trans_keys();
private static byte[] init__http_single_lengths_0()
{
	return new byte [] {
	    0,   16,   16,    1,    2,    1,    1,    1,    1,    1,    1,    1,
	    2,    4,   44,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    3,    1,    1,    1,    2,    2,    1,    0,    1,    0,    1,    1,
	    0,    0,    3,   44,    1,    9,    3,    5,   46,   17,   11,   11,
	   11,   11,   10,   17,   11,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   11,    9,   11,   11,   11,   11,   11,    9,   11,    9,   11,
	   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,    9,   13,   11,   11,   11,   10,   11,   11,   11,   11,
	   11,   11,   11,    9,   13,   13,   11,   11,   11,   11,   11,   11,
	    9,    3,    9,    1,    5,    5,    7,    7,    7,    7,    5,    7,
	    7,    7,    7,    7,    7,    5,   11,   11,   11,   10,   21,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,
	   11,   11,   11,   11,   11,    9,   15,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,    9,    3,    5,    5,   11,   11,
	   11,   11,   11,   11,    9,   11,   10,    9,   11,   11,   11,   11,
	    9,   11,   11,   11,    9,   11,   11,   11,    9,   13,   11,   11,
	    9,   11,    9,   13,   11,   11,    9,   11,   13,   11,   11,    9,
	    3,    6,    6,    6,    6,    7,    7,    7,    7,    7,    7,    7,
	    7,    5,   11,   11,   11,    9,   11,   11,   11,    9,   11,   11,
	   11,    9,   11,   10,   17,   13,   11,   11,   11,    9,   11,   11,
	   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   10,   11,   11,   11,   11,   11,    9,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,   11,   11,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   10,   11,   11,
	   11,   11,   11,    9,   15,   11,   11,   10,   11,   11,   11,   11,
	   11,   11,   11,   11,    9,   11,   11,    9,   11,   11,   11,   11,
	   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,   11,   11,
	   11,   11,    9,   12,   11,    9,   13,   11,   11,   11,    9,   11,
	   11,   10,   11,   11,   11,   11,   13,   11,   11,   11,   11,   11,
	   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,   11,    9,
	   13,   11,   11,   11,    9,   13,   13,   11,   11,   11,    9,   11,
	   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,   11,    9,
	   13,   13,   11,   11,   11,    9,   10,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,
	   11,    9,   13,    9,   11,   13,   11,   11,   11,    9,   11,   11,
	   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,    9,
	    3,    7,    7,    7,    7,    7,    7,    7,    5,   13,   11,   11,
	   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,   11,
	    9,   13,   11,   11,    9,   11,    9,   13,   11,   11,   11,   11,
	   11,    9,   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,    9,   10,   21,   11,   11,   11,   11,   11,
	   11,   10,   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	   11,   11,    9,   11,   10,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,    9,   13,   11,   11,   11,   11,   11,   11,   11,   10,
	   13,   11,   11,    9,   11,   11,   11,   11,    9,   11,   11,   11,
	   10,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,
	   11,   11,   11,   10,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   11,   11,   10,   11,   11,   11,   11,    9,   11,   11,   10,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,    9,    1,
	    3,    1,    1,    1,    1,    4,    1,    1,    1,    1,    2,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    4,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    2,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    2,    1,    3,    2,    2,    2,    1,
	    0,    1,    0,    2,    2,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    3,    2,    1,    4,    3,    1,    3,    3,    1,    1,
	    3,    1,    1,    3,   16,    0,    0,    0,    0
	};
}

private static final byte _http_single_lengths[] = init__http_single_lengths_0();


private static byte[] init__http_range_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    4,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,
	    1,    1,    0,    4,    0,    4,    0,    1,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    0,    1,    0,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    0,    2,    2,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    0,    1,    1,    1,    1,    1,    1,    1,    1,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    0,
	    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,    0,
	    3,    3,    3,    1,    3,    3,    1,    0,    1,    1,    0,    0,
	    1,    0,    0,    1,    0,    0,    1,    0,    0
	};
}

private static final byte _http_range_lengths[] = init__http_range_lengths_0();


private static short[] init__http_index_offsets_0()
{
	return new short [] {
	    0,    0,   17,   34,   36,   39,   41,   43,   45,   47,   49,   51,
	   53,   57,   63,  112,  114,  116,  118,  120,  122,  124,  126,  128,
	  130,  134,  136,  138,  140,  143,  146,  148,  150,  153,  155,  158,
	  161,  163,  165,  169,  218,  220,  234,  238,  245,  296,  318,  334,
	  350,  366,  382,  397,  419,  435,  451,  467,  483,  499,  515,  529,
	  545,  561,  577,  593,  609,  625,  641,  655,  671,  687,  703,  719,
	  735,  751,  767,  781,  797,  813,  829,  845,  861,  875,  891,  905,
	  921,  937,  953,  967,  983,  999, 1015, 1031, 1047, 1063, 1079, 1095,
	 1111, 1127, 1143, 1157, 1175, 1191, 1207, 1223, 1238, 1254, 1270, 1286,
	 1302, 1318, 1334, 1350, 1364, 1382, 1400, 1416, 1432, 1448, 1464, 1480,
	 1496, 1510, 1514, 1525, 1527, 1534, 1541, 1550, 1559, 1568, 1577, 1584,
	 1593, 1602, 1611, 1620, 1629, 1638, 1645, 1661, 1677, 1693, 1708, 1734,
	 1750, 1766, 1782, 1798, 1814, 1830, 1846, 1862, 1878, 1894, 1908, 1924,
	 1940, 1956, 1972, 1988, 2004, 2020, 2034, 2054, 2070, 2086, 2102, 2118,
	 2134, 2150, 2164, 2180, 2196, 2212, 2228, 2242, 2246, 2254, 2262, 2278,
	 2294, 2310, 2326, 2342, 2358, 2372, 2388, 2403, 2417, 2433, 2449, 2465,
	 2481, 2495, 2511, 2527, 2543, 2557, 2573, 2589, 2605, 2619, 2637, 2653,
	 2669, 2683, 2699, 2713, 2731, 2747, 2763, 2777, 2793, 2811, 2827, 2843,
	 2857, 2861, 2869, 2877, 2885, 2893, 2902, 2911, 2920, 2929, 2938, 2947,
	 2956, 2965, 2972, 2988, 3004, 3020, 3034, 3050, 3066, 3082, 3096, 3112,
	 3128, 3144, 3158, 3174, 3189, 3211, 3229, 3245, 3261, 3277, 3291, 3307,
	 3323, 3339, 3355, 3371, 3387, 3402, 3418, 3434, 3450, 3466, 3482, 3496,
	 3512, 3528, 3544, 3559, 3575, 3591, 3607, 3623, 3639, 3653, 3669, 3685,
	 3701, 3717, 3731, 3747, 3763, 3779, 3795, 3811, 3827, 3843, 3859, 3875,
	 3890, 3906, 3922, 3938, 3954, 3970, 3984, 4000, 4016, 4032, 4047, 4063,
	 4079, 4095, 4111, 4127, 4141, 4161, 4177, 4193, 4208, 4224, 4240, 4256,
	 4272, 4288, 4304, 4320, 4336, 4350, 4366, 4382, 4396, 4412, 4428, 4444,
	 4460, 4476, 4492, 4506, 4522, 4538, 4553, 4569, 4585, 4601, 4617, 4633,
	 4649, 4665, 4681, 4695, 4712, 4728, 4742, 4760, 4776, 4792, 4808, 4822,
	 4838, 4854, 4869, 4885, 4901, 4917, 4933, 4951, 4967, 4983, 4999, 5015,
	 5031, 5047, 5063, 5077, 5093, 5109, 5125, 5141, 5157, 5173, 5189, 5205,
	 5219, 5237, 5253, 5269, 5285, 5299, 5317, 5335, 5351, 5367, 5383, 5397,
	 5413, 5429, 5445, 5459, 5475, 5491, 5506, 5522, 5538, 5554, 5570, 5586,
	 5600, 5618, 5636, 5652, 5668, 5684, 5698, 5713, 5729, 5745, 5761, 5777,
	 5793, 5809, 5823, 5839, 5855, 5871, 5887, 5902, 5918, 5934, 5950, 5966,
	 5982, 5998, 6014, 6030, 6046, 6061, 6077, 6093, 6109, 6125, 6141, 6157,
	 6173, 6189, 6203, 6221, 6235, 6251, 6269, 6285, 6301, 6317, 6331, 6347,
	 6363, 6379, 6395, 6410, 6426, 6442, 6458, 6474, 6490, 6506, 6522, 6538,
	 6552, 6556, 6565, 6574, 6583, 6592, 6601, 6610, 6619, 6626, 6644, 6660,
	 6676, 6692, 6708, 6724, 6738, 6754, 6770, 6785, 6801, 6817, 6833, 6849,
	 6865, 6879, 6897, 6913, 6929, 6943, 6959, 6973, 6991, 7007, 7023, 7039,
	 7055, 7071, 7085, 7101, 7116, 7132, 7148, 7164, 7180, 7196, 7212, 7228,
	 7244, 7260, 7276, 7292, 7308, 7322, 7337, 7363, 7379, 7395, 7411, 7427,
	 7443, 7459, 7474, 7490, 7506, 7522, 7538, 7553, 7569, 7585, 7601, 7617,
	 7633, 7649, 7665, 7679, 7695, 7710, 7726, 7742, 7758, 7773, 7789, 7805,
	 7821, 7837, 7853, 7867, 7885, 7901, 7917, 7933, 7949, 7965, 7981, 7997,
	 8012, 8030, 8046, 8062, 8076, 8092, 8108, 8124, 8140, 8154, 8170, 8186,
	 8202, 8217, 8233, 8249, 8265, 8281, 8297, 8313, 8329, 8343, 8359, 8375,
	 8391, 8407, 8423, 8439, 8454, 8470, 8486, 8500, 8516, 8532, 8548, 8564,
	 8580, 8596, 8612, 8628, 8643, 8659, 8675, 8691, 8707, 8721, 8737, 8753,
	 8768, 8784, 8800, 8816, 8832, 8848, 8864, 8880, 8896, 8912, 8928, 8942,
	 8944, 8949, 8951, 8953, 8955, 8957, 8962, 8964, 8966, 8968, 8970, 8973,
	 8975, 8977, 8979, 8981, 8983, 8985, 8987, 8989, 8991, 8993, 8995, 8997,
	 8999, 9001, 9003, 9005, 9007, 9009, 9011, 9013, 9015, 9017, 9019, 9021,
	 9023, 9025, 9027, 9029, 9031, 9033, 9035, 9037, 9039, 9044, 9046, 9048,
	 9050, 9052, 9054, 9056, 9058, 9060, 9062, 9065, 9067, 9069, 9071, 9073,
	 9075, 9077, 9079, 9081, 9083, 9085, 9087, 9089, 9091, 9093, 9095, 9097,
	 9099, 9101, 9103, 9105, 9107, 9109, 9111, 9113, 9115, 9117, 9119, 9121,
	 9123, 9125, 9127, 9129, 9132, 9134, 9136, 9138, 9140, 9142, 9144, 9146,
	 9148, 9150, 9152, 9154, 9156, 9158, 9161, 9163, 9167, 9170, 9173, 9176,
	 9178, 9180, 9183, 9185, 9189, 9192, 9194, 9196, 9198, 9200, 9202, 9204,
	 9206, 9211, 9216, 9223, 9227, 9232, 9240, 9245, 9247, 9252, 9257, 9259,
	 9261, 9266, 9268, 9270, 9275, 9292, 9293, 9295, 9296
	};
}

private static final short _http_index_offsets[] = init__http_index_offsets_0();


private static short[] init__http_indicies_0()
{
	return new short [] {
	    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
	   13,   14,   15,   16,    0,   17,   18,   19,   20,   21,   22,   23,
	   24,   25,   26,   27,   28,   29,   30,   31,   32,    0,   17,    0,
	   33,   34,    0,   35,    0,   36,    0,   37,    0,   38,    0,   39,
	    0,   40,    0,   41,    0,   42,    0,    0,   43,   44,   45,   46,
	    0,    0,   47,   48,   49,    0,    0,    0,   51,   52,   53,   54,
	   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
	   67,   68,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,
	   61,   62,   63,   64,   65,   66,   67,   68,    0,    0,    0,    0,
	    0,    0,    0,   50,   69,    0,   70,    0,   71,    0,   72,    0,
	   73,    0,   74,    0,   75,    0,   76,    0,   77,    0,   78,   79,
	   79,    0,   80,    0,   81,    0,   82,    0,   83,   83,    0,   84,
	   84,    0,   85,    0,   86,    0,   87,   86,    0,   88,    0,   89,
	   88,    0,   89,   90,    0,   91,    0,   92,    0,   93,   94,   95,
	    0,   96,   97,    0,    0,    0,   99,  100,  101,  102,  103,  104,
	  105,  106,  107,  108,  109,  110,  111,  112,  113,  114,  115,  116,
	   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
	  111,  112,  113,  114,  115,  116,    0,    0,    0,    0,    0,    0,
	    0,   98,  117,    0,  118,  118,    0,    0,    0,  120,    0,    0,
	    0,    0,    0,    0,    0,  119,  121,  121,  122,    0,  122,  123,
	  124,  122,    0,    0,  125,  122,  126,  127,  122,    0,    0,    0,
	  129,  130,  131,  132,  133,  134,  135,  136,  137,  138,  139,  140,
	  141,  142,  143,  144,  145,  146,  129,  130,  131,  132,  133,  134,
	  135,  136,  137,  138,  139,  140,  141,  142,  143,  144,  145,  146,
	    0,    0,    0,    0,    0,    0,    0,  128,  118,  118,    0,    0,
	    0,  120,  147,  148,  149,  150,  147,  148,  149,  150,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  151,  151,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  152,  152,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  153,  153,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  154,  154,    0,    0,    0,    0,    0,    0,    0,  119,  155,  155,
	    0,    0,  156,    0,  157,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  158,  159,  160,  161,  158,
	  159,  160,  161,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  162,  162,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  163,  163,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  164,  164,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  165,  165,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  166,  166,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  167,  167,    0,    0,    0,    0,    0,    0,    0,  119,  168,
	  168,    0,    0,    0,  169,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  170,  170,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  171,
	  171,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  172,  172,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  173,  173,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  174,
	  174,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  175,  175,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  176,  176,    0,    0,    0,
	    0,    0,    0,    0,  119,  177,  177,    0,    0,    0,  178,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  179,  179,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  180,  180,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  181,  181,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  182,  182,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  183,  183,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  184,  184,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  185,  185,    0,    0,    0,    0,    0,    0,    0,  119,  186,
	  186,    0,    0,    0,  187,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  188,  188,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  189,
	  189,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  190,  190,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  191,  191,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  192,
	  192,    0,    0,    0,    0,    0,    0,    0,  119,  193,  193,    0,
	    0,    0,  194,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  195,  195,    0,    0,    0,    0,    0,
	    0,    0,  119,  196,  196,    0,    0,    0,  197,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  198,
	  198,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  199,  199,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  200,  200,    0,    0,    0,
	    0,    0,    0,    0,  119,  201,  201,    0,    0,    0,  202,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  203,  203,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  204,  204,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  205,  205,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  206,  206,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  207,  207,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  208,  208,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  209,  209,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  210,  210,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  211,  211,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  212,  212,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  213,  213,    0,    0,    0,    0,    0,
	    0,    0,  119,  214,  214,    0,    0,    0,  215,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  216,
	  217,  216,  217,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  218,  218,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  219,  219,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  220,  220,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,  221,    0,  120,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  222,  222,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  223,  223,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  224,  224,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  225,  225,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  226,  226,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  227,  227,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  228,  228,    0,    0,
	    0,    0,    0,    0,    0,  119,  229,  229,    0,    0,    0,  230,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  231,  232,  231,  232,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  233,  234,  233,  234,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  235,  235,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  236,  236,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  237,  237,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  238,  238,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  239,  239,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  240,  240,
	    0,    0,    0,    0,    0,    0,    0,  119,  241,  241,    0,    0,
	    0,  242,    0,    0,    0,    0,    0,    0,    0,  119,  243,  243,
	  244,    0,  244,  123,  124,  244,  245,  246,  245,  246,    0,    0,
	  125,  247,    0,  248,  249,  250,  248,    0,    0,  251,  252,  253,
	  254,  252,    0,    0,  251,  248,  249,  250,  248,  255,  255,    0,
	    0,  251,  248,  249,  250,  248,  256,  256,    0,    0,  251,  248,
	  249,  250,  248,  257,  257,    0,    0,  251,  248,  249,  250,  248,
	  258,  258,    0,    0,  251,  259,  260,  261,  259,    0,    0,  251,
	  248,  249,  250,  248,  262,  262,    0,    0,  251,  248,  249,  250,
	  248,  263,  263,    0,    0,  251,  248,  249,  250,  248,  264,  264,
	    0,    0,  251,  248,  249,  250,  248,  265,  265,    0,    0,  251,
	  248,  249,  250,  248,  266,  266,    0,    0,  251,  248,  249,  250,
	  248,  267,  267,    0,    0,  251,  268,  269,  270,  268,    0,    0,
	  251,  118,  118,    0,    0,    0,  120,  271,  271,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  272,
	  272,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  273,  273,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,  274,    0,  120,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  275,  276,
	  277,  278,  279,  280,  275,  276,  277,  278,  279,  280,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  281,  281,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  282,  282,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  283,  283,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  284,  284,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  285,  285,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  286,  286,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  287,  287,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  288,  288,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  289,  289,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  290,  290,    0,    0,    0,    0,    0,    0,    0,  119,  291,  291,
	    0,    0,    0,  292,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  293,  293,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  294,  294,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  295,  295,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  296,  296,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  297,  297,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  298,  298,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  299,  299,    0,    0,    0,    0,
	    0,    0,    0,  119,  300,  300,    0,    0,    0,  301,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  302,  303,  304,  302,  303,  304,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  305,  305,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  306,  306,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  307,  307,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  308,  308,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  309,  309,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  310,  310,    0,    0,    0,    0,    0,    0,
	    0,  119,  311,  311,    0,    0,    0,  312,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  313,  313,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  314,  314,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  315,  315,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  316,  316,
	    0,    0,    0,    0,    0,    0,    0,  119,  317,  317,    0,    0,
	    0,  318,    0,    0,    0,    0,    0,    0,    0,  119,  319,  319,
	  320,    0,  320,  322,  323,  320,  321,  321,  325,  324,  326,  327,
	  328,  326,  321,  321,  330,  329,  118,  118,    0,    0,    0,  120,
	  331,  331,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  332,  332,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  333,  333,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  334,  334,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  335,  335,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  336,  336,    0,    0,
	    0,    0,    0,    0,    0,  119,  337,  337,    0,    0,    0,  338,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  339,  339,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  340,  120,    0,    0,    0,    0,    0,
	    0,    0,  119,  341,  341,    0,    0,    0,  342,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  343,
	  343,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  344,  344,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  345,  345,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  346,
	  346,    0,    0,    0,    0,    0,    0,    0,  119,  347,  347,    0,
	    0,    0,  348,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  349,  349,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  350,  350,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  351,  351,    0,    0,    0,    0,    0,    0,    0,  119,  352,
	  352,    0,    0,    0,  353,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  354,  354,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  355,
	  355,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  356,  356,    0,    0,    0,    0,    0,    0,    0,
	  119,  357,  357,    0,    0,    0,  358,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  359,  360,  359,
	  360,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  361,  361,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  362,  362,    0,    0,    0,
	    0,    0,    0,    0,  119,  363,  363,    0,    0,    0,  364,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  365,  365,    0,    0,    0,    0,    0,    0,    0,  119,  366,
	  366,    0,    0,    0,  367,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  368,  369,  368,  369,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  370,  370,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  371,  371,    0,    0,    0,    0,    0,
	    0,    0,  119,  372,  372,    0,    0,    0,  373,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  374,
	  374,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  375,  376,  375,  376,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  377,  377,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  378,  378,    0,    0,    0,    0,    0,    0,    0,  119,  379,
	  379,    0,    0,    0,  380,    0,    0,    0,    0,    0,    0,    0,
	  119,  381,  381,  382,    0,  382,  123,  124,  382,  383,    0,    0,
	  125,  248,  249,  250,  248,  384,    0,    0,  251,  248,  249,  250,
	  248,  385,    0,    0,  251,  248,  249,  250,  248,  386,    0,    0,
	  251,  248,  249,  250,  248,  387,  387,    0,    0,  251,  248,  249,
	  250,  248,  388,  388,    0,    0,  251,  248,  249,  250,  248,  389,
	  389,    0,    0,  251,  248,  249,  250,  248,  390,  390,    0,    0,
	  251,  248,  249,  250,  248,  391,  391,    0,    0,  251,  248,  249,
	  250,  248,  392,  392,    0,    0,  251,  248,  249,  250,  248,  393,
	  393,    0,    0,  251,  248,  249,  250,  248,  394,  394,    0,    0,
	  251,  395,  396,  397,  395,    0,    0,  251,  118,  118,    0,    0,
	    0,  120,  398,  398,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  399,  399,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  400,  400,
	    0,    0,    0,    0,    0,    0,    0,  119,  401,  401,    0,    0,
	    0,  402,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  403,  403,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  404,  404,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  405,  405,    0,    0,    0,    0,    0,    0,    0,  119,  406,  406,
	    0,    0,    0,  407,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  408,  408,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  409,  409,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  410,  410,    0,    0,    0,    0,    0,    0,    0,  119,
	  411,  411,    0,    0,    0,  412,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  413,  413,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  414,    0,
	  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  415,  416,  417,  418,  415,  416,  417,  418,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  419,  420,  419,  420,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  421,  421,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  422,
	  422,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  423,  423,    0,    0,    0,    0,    0,    0,    0,
	  119,  424,  424,    0,    0,    0,  425,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  426,  426,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  427,  427,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  428,  428,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  429,  429,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  430,  430,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  431,  431,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,  432,    0,  120,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  433,  433,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  434,  434,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  435,  435,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  436,  436,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  437,  437,    0,    0,    0,    0,    0,    0,
	    0,  119,  438,  438,    0,    0,    0,  439,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  440,  440,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  441,  441,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  442,  442,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,  443,    0,  120,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  444,  444,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  445,  445,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  446,  446,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  447,  447,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  448,  448,    0,    0,    0,    0,    0,
	    0,    0,  119,  449,  449,    0,    0,    0,  450,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  451,
	  451,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  452,  452,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  453,  453,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  454,
	  454,    0,    0,    0,    0,    0,    0,    0,  119,  455,  455,    0,
	    0,    0,  456,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  457,  457,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  458,  458,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  459,  459,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  460,  460,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  461,  461,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  462,  462,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  463,  463,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  464,  464,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  465,  465,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,  466,    0,  120,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  467,  467,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  468,  468,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  469,  469,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  470,  470,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  471,  471,    0,    0,    0,    0,    0,    0,    0,  119,  472,  472,
	    0,    0,    0,  473,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  474,  474,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  475,  475,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  476,  476,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,  477,    0,  120,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  478,  478,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  479,  479,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  480,  480,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  481,  481,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  482,  482,    0,    0,    0,    0,    0,    0,    0,  119,  483,
	  483,    0,    0,    0,  484,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  485,  486,  487,  485,  486,
	  487,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  488,  488,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  489,  489,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,  490,    0,  120,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  491,  491,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  492,  492,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  493,  493,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  494,  494,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  495,  495,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  496,  496,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  497,  497,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  498,  498,    0,    0,    0,    0,
	    0,    0,    0,  119,  499,  499,    0,    0,    0,  500,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  501,  501,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  502,  502,    0,    0,    0,    0,    0,    0,
	    0,  119,  503,  503,    0,    0,    0,  504,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  505,  505,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  506,  506,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  507,  507,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  508,  508,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  509,  509,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  510,  510,    0,    0,    0,    0,
	    0,    0,    0,  119,  511,  511,    0,    0,    0,  512,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  513,  513,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  514,  514,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,  515,    0,  120,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  516,
	  516,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  517,  517,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  518,  518,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  519,
	  519,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  520,  520,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  521,  521,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  522,
	  522,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  523,  523,    0,    0,    0,    0,    0,    0,    0,
	  119,  524,  524,    0,    0,    0,  525,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  526,  120,  527,  527,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  528,  528,    0,    0,    0,    0,    0,    0,    0,  119,
	  529,  529,    0,    0,    0,  530,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  531,  532,  531,  532,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  533,  533,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  534,  534,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  535,  535,
	    0,    0,    0,    0,    0,    0,    0,  119,  536,  536,    0,    0,
	    0,  537,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  538,  538,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  539,  539,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  540,    0,
	  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  541,  541,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  542,  542,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  543,
	  543,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  544,  544,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  545,  546,  545,  546,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  547,  547,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  548,  548,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  549,  549,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  550,  550,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  551,  551,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  552,  552,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  553,  553,    0,    0,    0,    0,    0,    0,    0,  119,  554,
	  554,    0,    0,    0,  555,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  556,  556,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  557,
	  557,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  558,  558,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  559,  559,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  560,
	  560,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  561,  561,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  562,  562,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  563,
	  563,    0,    0,    0,    0,    0,    0,    0,  119,  564,  564,    0,
	    0,    0,  565,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  566,  567,  566,  567,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  568,
	  568,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  569,  569,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  570,  570,    0,    0,    0,
	    0,    0,    0,    0,  119,  571,  571,    0,    0,    0,  572,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  573,  574,  573,  574,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  575,  576,  575,  576,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  577,  577,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  578,  578,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  579,  579,    0,
	    0,    0,    0,    0,    0,    0,  119,  580,  580,    0,    0,    0,
	  581,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  582,  582,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  583,  583,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  584,
	  584,    0,    0,    0,    0,    0,    0,    0,  119,  585,  585,    0,
	    0,    0,  586,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  587,  587,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  588,  588,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  589,
	    0,  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  590,  590,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  591,  591,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  592,  592,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  593,  593,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  594,  594,    0,    0,
	    0,    0,    0,    0,    0,  119,  595,  595,    0,    0,    0,  596,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  597,  598,  597,  598,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  599,  600,  599,  600,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  601,  601,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  602,  602,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  603,  603,
	    0,    0,    0,    0,    0,    0,    0,  119,  604,  604,    0,    0,
	    0,  605,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,  606,    0,  120,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  607,  607,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  608,
	  608,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  609,  609,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  610,  610,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  611,
	  611,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  612,  612,    0,    0,    0,    0,    0,    0,    0,
	  119,  613,  613,    0,    0,    0,  614,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  615,  615,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  616,  616,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  617,  617,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  618,  618,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  619,
	    0,  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  620,  620,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  621,  621,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  622,  622,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  623,  623,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  624,  624,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  625,  625,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  626,  626,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  627,  627,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  628,  628,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,  629,    0,  120,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  630,  630,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  631,
	  631,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  632,  632,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  633,  633,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  634,
	  634,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  635,  635,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  636,  636,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  637,
	  637,    0,    0,    0,    0,    0,    0,    0,  119,  638,  638,    0,
	    0,    0,  639,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  640,  641,  640,  641,    0,    0,    0,
	    0,    0,    0,    0,  119,  642,  642,    0,    0,    0,  643,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  644,  644,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  645,  646,  645,  646,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  647,
	  647,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  648,  648,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  649,  649,    0,    0,    0,
	    0,    0,    0,    0,  119,  650,  650,    0,    0,    0,  651,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  652,  652,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  653,  653,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  654,  654,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  655,  655,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,  656,    0,  120,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  657,  657,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  658,  658,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  659,  659,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  660,  660,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  661,  661,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  662,  662,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  663,  663,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  664,  664,    0,    0,    0,    0,    0,    0,    0,  119,  665,  665,
	    0,    0,    0,  666,    0,    0,    0,    0,    0,    0,    0,  119,
	  667,  667,  668,    0,  668,  123,  124,  668,  669,  669,    0,    0,
	  125,  248,  249,  250,  248,  670,  670,    0,    0,  251,  248,  249,
	  250,  248,  671,  671,    0,    0,  251,  248,  249,  250,  248,  672,
	  672,    0,    0,  251,  248,  249,  250,  248,  673,  673,    0,    0,
	  251,  248,  249,  250,  248,  674,  674,    0,    0,  251,  248,  249,
	  250,  248,  675,  675,    0,    0,  251,  676,  677,  678,  676,    0,
	    0,  251,  118,  118,    0,    0,    0,  120,  679,  680,  679,  680,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  681,  681,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  682,  682,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  683,  683,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  684,  684,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  685,  685,    0,    0,    0,    0,
	    0,    0,    0,  119,  686,  686,    0,    0,    0,  687,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  688,  688,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  689,  689,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,  690,    0,  120,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  691,
	  691,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  692,  692,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  693,  693,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  694,
	  694,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  695,  695,    0,    0,    0,    0,    0,    0,    0,
	  119,  696,  696,    0,    0,    0,  697,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  698,  699,  698,
	  699,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  700,  700,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  701,  701,    0,    0,    0,
	    0,    0,    0,    0,  119,  702,  702,    0,    0,    0,  703,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  704,  704,    0,    0,    0,    0,    0,    0,    0,  119,  705,
	  705,    0,    0,    0,  706,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  707,  708,  707,  708,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  709,  709,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  710,  710,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  711,  711,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  712,  712,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  713,  713,    0,    0,    0,    0,    0,
	    0,    0,  119,  714,  714,    0,    0,    0,  715,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  716,
	  716,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,  717,    0,  120,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  718,  718,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  719,  719,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  720,  720,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  721,  721,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  722,  722,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  723,  723,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  724,  724,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  725,  725,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  726,  726,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  727,  727,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  728,  728,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  729,  729,    0,    0,    0,    0,    0,    0,    0,  119,
	  730,  730,    0,    0,    0,  731,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,  732,    0,  120,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  733,
	  734,  735,  736,  737,  738,  733,  734,  735,  736,  737,  738,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  739,  739,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  740,  740,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  741,  741,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  742,  742,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  743,  743,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  744,  744,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  745,
	    0,  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  746,  746,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  747,  747,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  748,  748,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  749,  749,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,  750,    0,  120,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  751,
	  751,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  752,  752,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  753,  753,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  754,
	  754,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  755,  755,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  756,  756,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  757,
	  757,    0,    0,    0,    0,    0,    0,    0,  119,  758,  758,    0,
	    0,    0,  759,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  760,  760,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,  761,    0,  120,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  762,  762,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  763,  763,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  764,  764,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  765,    0,
	  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  766,  766,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  767,  767,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  768,
	  768,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  769,  769,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  770,  770,    0,    0,    0,
	    0,    0,    0,    0,  119,  771,  771,    0,    0,    0,  772,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  773,  774,  773,  774,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  775,  775,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  776,
	  776,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  777,  777,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  778,  778,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  779,
	  779,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  780,  780,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  781,  781,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,  782,    0,  120,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  783,  784,  783,  784,    0,    0,    0,    0,    0,    0,
	    0,  119,  118,  118,    0,    0,    0,  120,  785,  785,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  786,  786,    0,    0,    0,    0,    0,    0,    0,  119,  787,  787,
	    0,    0,    0,  788,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  789,  789,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  790,  790,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  791,  791,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  792,  792,    0,    0,    0,    0,
	    0,    0,    0,  119,  793,  793,    0,    0,    0,  794,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  795,  795,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  796,  796,    0,    0,    0,    0,    0,    0
	};
};
private static short[] init__http_indicies_1()
{
	return new short [] {
	    0,  119,  118,  118,    0,    0,    0,  120,  797,  797,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,  798,    0,
	  120,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  799,  799,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  800,  800,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  801,
	  801,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  802,  802,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  803,  803,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  804,
	  804,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  805,  805,    0,    0,    0,    0,    0,    0,    0,
	  119,  806,  806,    0,    0,    0,  807,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  808,  808,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  809,  809,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  810,  810,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  811,  811,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  812,  812,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  813,  813,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,  814,    0,  120,    0,    0,
	    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,
	  815,  815,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,
	    0,    0,    0,  120,  816,  816,    0,    0,    0,    0,    0,    0,
	    0,  119,  817,  817,    0,    0,    0,  818,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  819,  819,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  820,  820,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  821,  821,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  822,  822,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  823,  823,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  824,  824,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  825,  825,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  826,  826,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,  827,    0,  120,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  828,  828,    0,
	    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,    0,
	  120,  829,  829,    0,    0,    0,    0,    0,    0,    0,  119,  118,
	  118,    0,    0,    0,  120,  830,  830,    0,    0,    0,    0,    0,
	    0,    0,  119,  118,  118,    0,    0,    0,  120,  831,  831,    0,
	    0,    0,    0,    0,    0,    0,  119,  832,  832,    0,    0,    0,
	  833,    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,
	    0,    0,  120,  834,  834,    0,    0,    0,    0,    0,    0,    0,
	  119,  118,  118,    0,    0,    0,  120,  835,  835,    0,    0,    0,
	    0,    0,    0,    0,  119,  118,  118,    0,    0,  836,    0,  120,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  837,  837,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  838,  838,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  839,  839,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  840,  840,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  841,  841,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  842,  842,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  843,  843,    0,    0,    0,    0,    0,    0,    0,  119,
	  118,  118,    0,    0,    0,  120,  844,  844,    0,    0,    0,    0,
	    0,    0,    0,  119,  118,  118,    0,    0,    0,  120,  845,  845,
	    0,    0,    0,    0,    0,    0,    0,  119,  118,  118,    0,    0,
	    0,  120,  846,  846,    0,    0,    0,    0,    0,    0,    0,  119,
	  847,  847,    0,    0,    0,  848,    0,    0,    0,    0,    0,    0,
	    0,  119,   93,    0,   93,   94,    0,    0,   95,  849,    0,  850,
	    0,  851,    0,  852,    0,  853,  854,  855,  856,    0,  857,    0,
	  858,    0,  859,    0,  860,    0,  861,  862,    0,  863,    0,  864,
	    0,  865,    0,  866,    0,  867,    0,  868,    0,  869,    0,  870,
	    0,  871,    0,  872,    0,  873,    0,  874,    0,  875,    0,  876,
	    0,  877,    0,  878,    0,  879,    0,  880,    0,  881,    0,  882,
	    0,  883,    0,  884,    0,  885,    0,  886,    0,  887,    0,  888,
	    0,  889,    0,  890,    0,  891,    0,  892,    0,  893,    0,  894,
	    0,  895,    0,  896,  897,  898,  899,    0,  900,    0,  901,    0,
	  902,    0,  903,    0,  904,    0,  905,    0,  906,    0,  907,    0,
	  908,    0,  909,  910,    0,  911,    0,  912,    0,  913,    0,  914,
	    0,  915,    0,  916,    0,  917,    0,  918,    0,  919,    0,  920,
	    0,  921,    0,  922,    0,  923,    0,  924,    0,  925,    0,  926,
	    0,  927,    0,  928,    0,  929,    0,  930,    0,  931,    0,  932,
	    0,  933,    0,  934,    0,  935,    0,  936,    0,  937,    0,  938,
	    0,  939,    0,  940,    0,  941,    0,  942,    0,  943,  944,    0,
	  945,    0,  946,    0,  947,    0,  948,    0,  949,    0,  950,    0,
	  951,    0,  952,    0,  953,    0,  954,    0,  955,    0,  956,    0,
	  957,    0,   79,   79,    0,  958,    0,  959,  960,  960,    0,  961,
	  961,    0,  962,  962,    0,  963,  963,    0,  964,    0,  965,    0,
	  966,  965,    0,  967,    0,  958,  968,  967,    0,  969,  970,    0,
	  971,    0,  972,    0,  973,    0,  974,    0,  975,    0,  976,    0,
	  977,    0,  979,  980,  980,  980,  978,  981,  982,  982,  982,  978,
	  983,  984,  985,  982,  982,  982,  978,  986,  987,  988,    0,  989,
	  980,  980,  980,  978,  990,  991,  992,  993,  982,  982,  982,  978,
	  994,  995,    0,    0,  996,  997,    0,  998,  999,    0,    0, 1000,
	  997, 1001,    0,    0, 1000,  998,    0,  990,    0,  990,  991,    0,
	    0,  993,  986,    0,  983,    0,  983,  984,    0,    0,  985,    1,
	    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
	   14,   15,   16,    0,    0, 1002,    0, 1003, 1004,    0
	};
}

private static final short [] combine__http_indicies() {
	short [] combined = new short [ 9298 ];
	System.arraycopy ( init__http_indicies_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_indicies_1(), 0, combined, 8184, 1114 );
	return combined;
}
private static final short [] _http_indicies = combine__http_indicies();
private static short[] init__http_trans_targs_0()
{
	return new short [] {
	    0,    2,    3,    4,   15,   21,   24,  613,  617,  643,  649,  656,
	  678,  684,  693,  698,  713,    2,    3,    4,   15,   21,   24,  613,
	  617,  643,  649,  656,  678,  684,  693,  698,  713,    5,  724,    6,
	    7,    8,    9,   10,   11,   12,   12,   13,   14,  714,  715,   13,
	  748,   40,   41,   45,   99,  201,  207,  234,  238,  242,  294,  304,
	  327,  339,  372,  396,  434,  465,  481,  487,  509,   16,   17,   18,
	   19,   20,   12,   22,   23,   12,   25,   28,   26,   27,   12,   29,
	   30,   31,   32,   33,   34,   35,   36,   37,   38,   39,  611,  612,
	  748,   40,   41,   45,   99,  201,  207,  234,  238,  242,  294,  304,
	  327,  339,  372,  396,  434,  465,  481,  487,  509,  748,   42,   41,
	   43,   42,   43,   44,  123,  124,  748,   40,   41,   45,   99,  201,
	  207,  234,  238,  242,  294,  304,  327,  339,  372,  396,  434,  465,
	  481,  487,  509,   46,   81,   83,   87,   47,   48,   49,   50,   42,
	   51,   43,   52,   59,   67,   75,   53,   54,   55,   56,   57,   58,
	   42,   43,   60,   61,   62,   63,   64,   65,   66,   42,   43,   68,
	   69,   70,   71,   72,   73,   74,   42,   43,   76,   77,   78,   79,
	   80,   42,   43,   82,   42,   43,   84,   85,   86,   42,   43,   88,
	   89,   90,   91,   92,   93,   94,   95,   96,   97,   98,   42,   43,
	  100,  112,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
	  111,   42,   43,  113,  197,  114,  138,  115,  116,  117,  118,  119,
	  120,  121,  122,  121,  122,  126,  131,   44,  125,   44,  123,  124,
	  125,   44,  123,  127,  128,  129,  130,  125,   44,  123,  132,  133,
	  134,  135,  136,  137,  125,   44,  123,  139,  140,  141,  142,  143,
	  154,  162,  185,  188,  193,  144,  145,  146,  147,  148,  149,  150,
	  151,  152,  153,   42,   43,  155,  156,  157,  158,  159,  160,  161,
	   42,   43,  163,  170,  178,  164,  165,  166,  167,  168,  169,   42,
	   43,  171,  172,  173,  174,  175,  176,  175,  176,    0,   44,  123,
	  124,  177,  125,   44,  123,  124,  177,  179,  180,  181,  182,  183,
	  184,   42,   43,  186,  187,   42,   43,  189,  190,  191,  192,   42,
	   43,  194,  195,  196,   42,   43,  198,  199,  200,   42,   43,  202,
	  205,  203,  204,   42,   43,  206,   42,   43,  208,  211,  209,  210,
	   42,   43,  212,  213,  230,  214,  215,  216,  217,  216,  217,  218,
	  219,  220,  221,  222,  223,  224,  225,  226,  227,  228,  229,  125,
	   44,  123,  231,  232,  233,   42,   43,  235,  236,  237,   42,   43,
	  239,  240,  241,   42,   43,  243,  244,  245,  263,  273,  278,  246,
	  250,  247,  248,  249,   42,   43,  251,  252,  253,  254,  255,  256,
	  257,  258,  259,  260,  261,  262,   42,   43,  264,  265,  266,  267,
	  268,  269,  270,  271,  272,   42,   43,  274,  275,  276,  277,   42,
	   43,  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
	  290,  291,  292,  293,   42,   43,  295,  296,  297,  298,  299,  300,
	  301,  302,  303,   42,   43,  305,  317,  320,  306,  307,  308,  309,
	  310,  311,  312,  313,  314,  315,  316,   42,   43,  318,  319,   42,
	   43,  321,  322,  323,  324,  325,  326,   42,   43,  328,  329,  330,
	  331,  332,  333,  334,  335,  336,  337,  338,   42,   43,  340,  342,
	  341,   42,   43,  343,  347,  344,  345,  346,   42,   43,  348,  349,
	  350,  351,  352,  353,  354,  355,  363,  356,  357,  358,  359,  360,
	  361,  362,   42,   43,  364,  365,  366,  367,  368,  369,  370,  371,
	   42,   43,  373,  377,  374,  375,  376,   42,   43,  378,  387,  379,
	  383,  380,  381,  382,   42,   43,  384,  385,  386,   42,   43,  388,
	  389,  390,  391,  392,  393,  394,  395,   42,   43,  397,  410,  398,
	  402,  399,  400,  401,   42,   43,  403,  404,  405,  406,  407,  408,
	  409,   42,   43,  411,  412,  413,  414,  415,  416,  417,  418,  419,
	  420,  421,  422,  423,  424,  425,  426,  427,  428,  429,  430,  431,
	  432,  433,   42,   43,  435,  436,   42,   43,  437,  438,  442,  439,
	  440,  441,   42,   43,  443,  444,  445,  446,  447,  448,  449,  450,
	  451,  452,  453,  454,  455,  456,  457,  456,  457,  458,  459,  460,
	  461,  462,  463,  464,  125,   44,  123,  466,  472,  467,  468,  469,
	  470,  471,   42,   43,  473,  474,  475,  476,  477,  478,  479,  480,
	   42,   43,  482,  485,  483,  484,   42,   43,  486,   42,   43,  488,
	  494,  489,  490,  491,  492,  493,   42,   43,  495,  496,  497,  498,
	  499,  500,  501,  502,  503,  504,  505,  506,  507,  508,   42,   43,
	  510,  511,  531,  543,  573,  583,  597,  512,  513,  514,  515,  516,
	  517,  518,  519,  520,  521,  522,  523,  524,  525,  526,  527,  528,
	  529,  530,   42,   43,  532,  533,  534,  535,  536,  537,  538,  539,
	  540,  541,  542,   42,   43,  544,  561,  545,  546,  547,  548,  549,
	  550,  551,  552,  553,  556,  554,  555,   42,   43,  557,  558,  559,
	  560,   42,   43,  562,  563,  564,  565,  566,  567,  568,  569,  570,
	  571,  572,   42,   43,  574,  575,  576,  577,  578,  579,  580,  581,
	  582,   42,   43,  584,  585,  586,  587,  588,  589,  590,  591,  592,
	  593,  594,  595,  596,   42,   43,  598,  599,  600,  601,  602,  603,
	  604,  605,  606,  607,  608,  609,  610,   42,   43,  614,  615,  616,
	   12,  618,  622,  634,  637,  619,  620,  621,   12,  623,  631,  624,
	  625,  626,  627,  628,  629,  630,   12,  632,  633,   12,  635,  636,
	   12,  638,  639,  640,  641,  642,   12,  644,  645,  646,  647,  648,
	   12,  650,  651,  652,  653,  654,  655,   12,  657,  661,  664,  676,
	  658,  659,  660,   12,  662,  663,   12,  665,  666,  667,  671,  668,
	  669,  670,   12,  672,  673,  674,  675,   12,  677,   12,  679,  680,
	  681,  682,  683,   12,  685,  686,  687,  688,  689,  690,  691,  692,
	   12,  694,  695,  696,  697,   12,  699,  700,  704,  701,  702,  703,
	   12,  705,  706,  707,  708,  709,  710,  711,  712,   12,   14,  715,
	  716,  717,  718,  719,  720,  721,  722,  723,  714,  725,  730,  726,
	  727,  728,  729,   12,  731,   12,    0,  733,  734,  733,  734,  735,
	  746,  747,  736,  745,  735,  737,  738,  743,  737,  744,  749,  739,
	  740,  749,  741,  742,  740,  739,  750,  751,  752
	};
}

private static final short _http_trans_targs[] = init__http_trans_targs_0();


private static short[] init__http_trans_actions_0()
{
	return new short [] {
	   17,  124,  124,  124,  124,  124,  451,  124,  124,  124,  124,  124,
	  124,  124,  124,  124,  451,   15,   15,   15,   15,   15,  100,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,  100,   15,   15,   15,
	   15,   15,   15,   15,   15,   76,   15,  109,  112,  112,  112,   15,
	  151,   19,  155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
	  155,  155,  155,  155,  155,  155,  155,  155,  155,   15,   15,   15,
	   15,   15,   37,   15,   15,   28,   15,   15,   15,   15,   25,   15,
	   15,   15,  103,   15,  106,   15,   97,   97,   97,   15,   15,   15,
	  159,   22,  163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
	  163,  163,  163,  163,  163,  163,  163,  163,  163,  127,  136,   15,
	  136,   15,   15,  492,  492,  139,  459,  148,  463,  463,  463,  463,
	  463,  463,  463,  463,  463,  463,  463,  463,  463,  463,  463,  463,
	  463,  463,  463,   15,   15,   15,   15,   15,   15,   15,   15,  167,
	   15,  167,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	  171,  171,   15,   15,   15,   15,   15,   15,   15,  175,  175,   15,
	   15,   15,   15,   15,   15,   15,  179,  179,   15,   15,   15,   15,
	   15,  183,  183,   15,  187,  187,   15,   15,   15,  191,  191,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,  195,  195,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  199,  199,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  203,  203,   15,   15,  139,  139,   15,  142,  455,  455,   15,
	   15,  145,  145,   15,   15,   15,   15,  439,  477,  477,   15,   15,
	   15,   15,   15,   15,  443,  482,  482,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,  227,  227,   15,   15,   15,   15,   15,   15,   15,
	  207,  207,   15,   15,   15,   15,   15,   15,   15,   15,   15,  211,
	  211,   15,   15,   15,   15,  215,  215,   15,   15,  121,  497,  497,
	  427,  423,  431,  467,  467,  118,  115,   15,   15,   15,   15,   15,
	   15,  219,  219,   15,   15,  223,  223,   15,   15,   15,   15,  231,
	  231,   15,   15,   15,  235,  235,   15,   15,   15,  239,  239,   15,
	   15,   15,   15,  243,  243,   15,  247,  247,   15,   15,   15,   15,
	  251,  251,   15,   15,   15,   15,   15,  255,  255,   15,   15,  139,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,  447,
	  487,  487,   15,   15,   15,  259,  259,   15,   15,   15,  263,  263,
	   15,   15,   15,  267,  267,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,  271,  271,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  275,  275,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,  279,  279,   15,   15,   15,   15,  283,
	  283,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,  287,  287,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,  291,  291,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,  295,  295,   15,   15,  299,
	  299,   15,   15,   15,   15,   15,   15,  303,  303,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,  307,  307,   15,   15,
	   15,  311,  311,   15,   15,   15,   15,   15,  315,  315,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  319,  319,   15,   15,   15,   15,   15,   15,   15,   15,
	  323,  323,   15,   15,   15,   15,   15,  327,  327,   15,   15,   15,
	   15,   15,   15,   15,  331,  331,   15,   15,   15,  335,  335,   15,
	   15,   15,   15,   15,   15,   15,   15,  339,  339,   15,   15,   15,
	   15,   15,   15,   15,  343,  343,   15,   15,   15,   15,   15,   15,
	   15,  347,  347,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  351,  351,   15,   15,  355,  355,   15,   15,   15,   15,
	   15,   15,  359,  359,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,  363,  363,   15,   15,  139,   15,   15,
	   15,   15,   15,   15,  435,  472,  472,   15,   15,   15,   15,   15,
	   15,   15,  367,  367,   15,   15,   15,   15,   15,   15,   15,   15,
	  371,  371,   15,   15,   15,   15,  375,  375,   15,  379,  379,   15,
	   15,   15,   15,   15,   15,   15,  383,  383,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,  387,  387,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  391,  391,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,  395,  395,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,  399,  399,   15,   15,   15,
	   15,  403,  403,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  407,  407,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  411,  411,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,  415,  415,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,  419,  419,   15,   15,   15,
	   52,   15,   15,   15,   15,   15,   15,   15,   79,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   73,   15,   15,   55,   15,   15,
	   58,   15,   15,   15,   15,   15,   82,   15,   15,   15,   15,   15,
	   85,   15,   15,   15,   15,   15,   15,   43,   15,   15,   15,   15,
	   15,   15,   15,   94,   15,   15,   31,   15,   15,   15,   15,   15,
	   15,   15,   61,   15,   15,   15,   15,   64,   15,   34,   15,   15,
	   15,   15,   15,   70,   15,   15,   15,   15,   15,   15,   15,   15,
	   88,   15,   15,   15,   15,   46,   15,   15,   15,   15,   15,   15,
	   67,   15,   15,   15,   15,   15,   15,   15,   15,   91,   15,   15,
	  100,   15,   15,   15,   15,  103,   15,  106,   15,   15,   15,   15,
	   15,   15,   15,   40,   15,   49,  133,  130,  130,   11,   11,    0,
	    0,    0,    0,    0,    5,  130,    0,    0,   11,    0,    9,    9,
	    9,    0,    0,    0,    0,    0,    1,    3,    7
	};
}

private static final short _http_trans_actions[] = init__http_trans_actions_0();


private static short[] init__http_to_state_actions_0()
{
	return new short [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,   13,    0,    0,    0
	};
}

private static final short _http_to_state_actions[] = init__http_to_state_actions_0();


private static short[] init__http_eof_actions_0()
{
	return new short [] {
	    0,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,  121,  121,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	  133,  133,  133,   17,  133,  133,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,    0,    0,    0,    0,    0
	};
}

private static final short _http_eof_actions[] = init__http_eof_actions_0();


static final int http_start = 1;
static final int http_first_final = 748;
static final int http_error = 0;

static final int http_en_chunked_body = 732;
static final int http_en_identity_body = 750;
static final int http_en_untracked_body = 751;
static final int http_en_upgraded = 752;
static final int http_en_main = 1;


// line 588 "src/rl/momentum/http/HttpParser.rl"

  /*
  * Variable used by ragel to represent the current state of the
  * parser. This must be an integer and it should persist across
  * invocations of the machine when the data is broken into blocks
  * that are processed independently. This variable may be modified
  * from outside the execution loop, but not from within.
  */
  private int cs;

  /*
  * Stores some miscellaneous parser state such as whether or not
  * the body is chunked or not, whether or not the connection is
  * keep alive or upgraded, etc...
  */
  private int flags;

  /*
  * The number of bytes read while parsing the HTTP message
  * head. This is to protect against a possible attack where
  * somebody sends unbounded HTTP message heads and causes out of
  * memory errors.
  */
  private int hread;

  /*
  * When starting to parse an HTTP message head, an object is
  * requested from the callback. This object should be the
  * structure that contains HTTP headers for the message being
  * processed.
  */
  private Object headers;

  /*
  * The HTTP protocol version used by the current message being
  * parsed. The major and minor numbers are broken up since they
  * will be moved into a clojure vector.
  */
  private short httpMajor;
  private short httpMinor;

  /*
  * Tracks whether the current parser instance is parsing an HTTP
  * request or an HTTP response. Even though the parser can be
  * reused to parse multiple messages, each message must be of the
  * same type. In other words, if the first message a parser
  * instance parses is an HTTP request, then all subsequent
  * messages parsed by the same instance must also be HTTP
  * requests.
  */
  final private MessageType type;

  /*
  * Tracks the HTTP method of the currently parsed request. If the
  * HTTP message being currently parsed is a response, then this
  * will be nil.
  */
  private String method;

  /*
  * The response status if the current message being parsed is a
  * response.
  */
  private short status;

  /*
   * Temporary buffer.
   */
  private Buffer tmpBuf = Buffer.allocate(1024);

  /*
   * Tracks the various message information
   */
  private int mark = -1;
  private int headerValueMark = -1;
  private int maybeHeaderValueEnd = -1;

  private URI    uri;
  private String headerName;

  /*
   * Track the content length of the HTTP message
   */
  private long contentLength;

  /*
   * Possibly aggregated body
   */
  private Buffer body;

  /*
   * A queue of the HTTP methods from the requests that generated the responses
   * being parsed.
   *
   * This is only used when parsing HTTP responses since when making a HEAD
   * request, a response will be returned containing information indicating
   * that there will be a response body but there will be no body. Before
   * parsing an HTTP response body, the parser will poll this queue. If the
   * value is HEAD (as an interned string), then the response body will be
   * skipped.
   */
  final private Queue<String> methodQueue;

  /*
   * The object that gets called on various parse events.
   */
  final private HttpParserCallback callback;

  public final static HttpParser request(HttpParserCallback callback) {
    return new HttpParser(MessageType.REQUEST, null, callback);
  }

  public final static HttpParser response(Queue<String> q, HttpParserCallback callback) {
    return new HttpParser(MessageType.RESPONSE, q, callback);
  }

  public HttpParser(MessageType type, Queue<String> q, HttpParserCallback callback) {
    
// line 2847 "src/jvm/momentum/http/HttpParser.java"
	{
	cs = http_start;
	}

// line 706 "src/rl/momentum/http/HttpParser.rl"

    this.type        = type;
    this.callback    = callback;
    this.methodQueue = q;

    reset();
  }

  public boolean isHttp11() {
    return httpMajor == 1 && httpMinor == 1;
  }

  public boolean isRequest() {
    return type == MessageType.REQUEST;
  }

  public boolean isResponse() {
    return type == MessageType.RESPONSE;
  }

  public boolean isParsingHead() {
    return ( flags & PARSING_HEAD ) == PARSING_HEAD;
  }

  public boolean hasBody() {
    // If parsing an HTTP request, whether the message has a body is simple.
    if (isRequest()) {
      return isIdentityBody() || isChunkedBody();
    }
    // If the response was requested via HEAD request, then there never is a
    // body.
    else if (method == MTH_HEAD) {
      return false;
    }
    // Certain HTTP response status never have a body.
    else if (status < 200 || status == 204 || status == 304) {
      return false;
    }
    // Otherwise, there should always be a response
    else {
      return true;
    }
  }

  public boolean isIdentityBody() {
    return ( flags & IDENTITY_BODY ) == IDENTITY_BODY;
  }

  public boolean isChunkedBody() {
    return ( flags & CHUNKED_BODY ) == CHUNKED_BODY;
  }

  public boolean isKeepAlive() {
    return ( flags & KEEP_ALIVE ) == KEEP_ALIVE;
  }

  public boolean isUpgrade() {
    return ( flags & UPGRADE ) == UPGRADE || method == MTH_CONNECT;
  }

  public boolean isExpectingContinue() {
    return ( flags & EXPECT_CONTINUE ) == EXPECT_CONTINUE;
  }

  public boolean isError() {
    return ( flags & ERROR ) == ERROR;
  }

  public String getMethod() {
    return method;
  }

  public short getHttpMajor() {
    return httpMajor;
  }

  public short getHttpMinor() {
    return httpMinor;
  }

  public String getPathInfo() {
    String pathInfo = uri.getPath();

    if (pathInfo == null) {
      return SLASH;
    }
    else if (pathInfo.equals(EMPTY_STRING)) {
      return SLASH;
    }

    return pathInfo;
  }

  public String getQueryString() {
    String qs = uri.getQuery();

    if (qs == null) {
      return EMPTY_STRING;
    }

    return qs;
  }

  public int execute(Buffer buf) throws Exception {
    // First make sure that the parser isn't in an error state
    if (isError()) {
      throw new HttpParserException("The parser is in an error state.");
    }

    // Setup ragel variables
    int p   = buf.position();
    int pe  = buf.limit();
    int eof = pe + 1;

    try {
      parseLoop: {
        
// line 823 "src/rl/momentum/http/HttpParser.rl"
        
// line 2972 "src/jvm/momentum/http/HttpParser.java"
	{
	int _klen;
	int _trans = 0;
	int _widec;
	int _acts;
	int _nacts;
	int _keys;
	int _goto_targ = 0;

	_goto: while (true) {
	switch ( _goto_targ ) {
	case 0:
	if ( p == pe ) {
		_goto_targ = 4;
		continue _goto;
	}
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
case 1:
	_widec = ( buf.getUnsigned(p));
	_keys = _http_cond_offsets[cs]*2
;	_klen = _http_cond_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys
;		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_cond_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_cond_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				switch ( _http_cond_spaces[_http_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = 65536 + (( buf.getUnsigned(p)) - 0);
		if ( 
// line 456 "src/rl/momentum/http/HttpParser.rl"

      contentLength > 0
     ) _widec += 65536;
		break;
	}
				}
				break;
			}
		}
	}

	_match: do {
	_keys = _http_key_offsets[cs];
	_trans = _http_index_offsets[cs];
	_klen = _http_single_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + _klen - 1;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 1;
			else if ( _widec > _http_trans_keys[_mid] )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				break _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _http_range_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_trans_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				break _match;
			}
		}
		_trans += _klen;
	}
	} while (false);

	_trans = _http_indicies[_trans];
	cs = _http_trans_targs[_trans];

	if ( _http_trans_actions[_trans] != 0 ) {
		_acts = _http_trans_actions[_trans];
		_nacts = (int) _http_actions[_acts++];
		while ( _nacts-- > 0 )
	{
			switch ( _http_actions[_acts++] )
			{
	case 0:
// line 159 "src/rl/momentum/http/HttpParser.rl"
	{
      if (type != MessageType.REQUEST) {
        throw new HttpParserException("Expecting HTTP response but got request");
      }
    }
	break;
	case 1:
// line 165 "src/rl/momentum/http/HttpParser.rl"
	{
      if (type != MessageType.RESPONSE) {
        throw new HttpParserException("Expecting HTTP request but got response");
      }

      method = methodQueue.poll();
    }
	break;
	case 2:
// line 173 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_HEAD;        }
	break;
	case 3:
// line 174 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_GET;         }
	break;
	case 4:
// line 175 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_POST;        }
	break;
	case 5:
// line 176 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_PUT;         }
	break;
	case 6:
// line 177 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_DELETE;      }
	break;
	case 7:
// line 178 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_CONNECT;     }
	break;
	case 8:
// line 179 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_OPTIONS;     }
	break;
	case 9:
// line 180 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_TRACE;       }
	break;
	case 10:
// line 181 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_COPY;        }
	break;
	case 11:
// line 182 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_LOCK;        }
	break;
	case 12:
// line 183 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_MKCOL;       }
	break;
	case 13:
// line 184 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_MOVE;        }
	break;
	case 14:
// line 185 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_PROPFIND;    }
	break;
	case 15:
// line 186 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_PROPPATCH;   }
	break;
	case 16:
// line 187 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_UNLOCK;      }
	break;
	case 17:
// line 188 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_REPORT;      }
	break;
	case 18:
// line 189 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_MKACTIVITY;  }
	break;
	case 19:
// line 190 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_CHECKOUT;    }
	break;
	case 20:
// line 191 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_MERGE;       }
	break;
	case 21:
// line 192 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_MSEARCH;     }
	break;
	case 22:
// line 193 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_NOTIFY;      }
	break;
	case 23:
// line 194 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_SUBSCRIBE;   }
	break;
	case 24:
// line 195 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_UNSUBSCRIBE; }
	break;
	case 25:
// line 196 "src/rl/momentum/http/HttpParser.rl"
	{ method = MTH_PATCH;       }
	break;
	case 26:
// line 198 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT);                    }
	break;
	case 27:
// line 199 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_CHARSET);            }
	break;
	case 28:
// line 200 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_ENCODING);           }
	break;
	case 29:
// line 201 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_LANGUAGE);           }
	break;
	case 30:
// line 202 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_RANGES);             }
	break;
	case 31:
// line 203 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_AGE);                       }
	break;
	case 32:
// line 204 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ALLOW);                     }
	break;
	case 33:
// line 205 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_AUTHORIZATION);             }
	break;
	case 34:
// line 206 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CACHE_CONTROL);             }
	break;
	case 35:
// line 207 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONNECTION);                }
	break;
	case 36:
// line 208 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_ENCODING);          }
	break;
	case 37:
// line 209 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LANGUAGE);          }
	break;
	case 38:
// line 210 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LENGTH);            }
	break;
	case 39:
// line 211 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LOCATION);          }
	break;
	case 40:
// line 212 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_MD5);               }
	break;
	case 41:
// line 213 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_DISPOSITION);       }
	break;
	case 42:
// line 214 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_RANGE);             }
	break;
	case 43:
// line 215 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_TYPE);              }
	break;
	case 44:
// line 216 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_COOKIE);                    }
	break;
	case 45:
// line 217 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_DATE);                      }
	break;
	case 46:
// line 218 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_DNT);                       }
	break;
	case 47:
// line 219 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_ETAG);                      }
	break;
	case 48:
// line 220 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPECT);                    }
	break;
	case 49:
// line 221 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPIRES);                   }
	break;
	case 50:
// line 222 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_FROM);                      }
	break;
	case 51:
// line 223 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_HOST);                      }
	break;
	case 52:
// line 224 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MATCH);                  }
	break;
	case 53:
// line 225 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MODIFIED_SINCE);         }
	break;
	case 54:
// line 226 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_NONE_MATCH);             }
	break;
	case 55:
// line 227 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_RANGE);                  }
	break;
	case 56:
// line 228 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_UNMODIFIED_SINCE);       }
	break;
	case 57:
// line 229 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_KEEP_ALIVE);                }
	break;
	case 58:
// line 230 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_LAST_MODIFIED);             }
	break;
	case 59:
// line 231 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_LINK);                      }
	break;
	case 60:
// line 232 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_LOCATION);                  }
	break;
	case 61:
// line 233 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_MAX_FORWARDS);              }
	break;
	case 62:
// line 234 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_P3P);                       }
	break;
	case 63:
// line 235 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_PRAGMA);                    }
	break;
	case 64:
// line 236 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHENTICATE);        }
	break;
	case 65:
// line 237 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHORIZATION);       }
	break;
	case 66:
// line 238 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_RANGE);                     }
	break;
	case 67:
// line 239 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_REFERER);                   }
	break;
	case 68:
// line 240 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_REFRESH);                   }
	break;
	case 69:
// line 241 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_RETRY_AFTER);               }
	break;
	case 70:
// line 242 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_SERVER);                    }
	break;
	case 71:
// line 243 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_SET_COOKIE);                }
	break;
	case 72:
// line 244 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_STRICT_TRANSPORT_SECURITY); }
	break;
	case 73:
// line 245 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_TE);                        }
	break;
	case 74:
// line 246 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_TRAILER);                   }
	break;
	case 75:
// line 247 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_TRANSFER_ENCODING);         }
	break;
	case 76:
// line 248 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_UPGRADE);                   }
	break;
	case 77:
// line 249 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_USER_AGENT);                }
	break;
	case 78:
// line 250 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_VARY);                      }
	break;
	case 79:
// line 251 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_VIA);                       }
	break;
	case 80:
// line 252 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_WARNING);                   }
	break;
	case 81:
// line 253 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_WWW_AUTHENTICATE);          }
	break;
	case 82:
// line 254 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_CONTENT_TYPE_OPTIONS);    }
	break;
	case 83:
// line 255 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_DO_NOT_TRACK);            }
	break;
	case 84:
// line 256 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_FOR);           }
	break;
	case 85:
// line 257 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_PROTO);         }
	break;
	case 86:
// line 258 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FRAME_OPTIONS);           }
	break;
	case 87:
// line 259 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_POWERED_BY);              }
	break;
	case 88:
// line 260 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_REQUESTED_WITH);          }
	break;
	case 89:
// line 261 "src/rl/momentum/http/HttpParser.rl"
	{ setHeaderName(HDR_X_XSS_PROTECTION);          }
	break;
	case 90:
// line 263 "src/rl/momentum/http/HttpParser.rl"
	{
      status *= 10;
      status += ( buf.getUnsigned(p)) - '0';
    }
	break;
	case 91:
// line 268 "src/rl/momentum/http/HttpParser.rl"
	{
      httpMinor = 0;
    }
	break;
	case 92:
// line 272 "src/rl/momentum/http/HttpParser.rl"
	{
      httpMajor *= 10;
      httpMajor += ( buf.getUnsigned(p)) - '0';

      if (httpMajor > 999) {
        throw new HttpParserException("The HTTP major version is invalid.");
      }
    }
	break;
	case 93:
// line 281 "src/rl/momentum/http/HttpParser.rl"
	{
      httpMinor *= 10;
      httpMinor += ( buf.getUnsigned(p)) - '0';

      if (httpMinor > 999) {
        throw new HttpParserException("The HTTP minor version is invalid.");
      }
    }
	break;
	case 94:
// line 290 "src/rl/momentum/http/HttpParser.rl"
	{
      mark = p;
    }
	break;
	case 95:
// line 294 "src/rl/momentum/http/HttpParser.rl"
	{
      String uriStr;

      if (tmpBuf.position() > 0) {
        tmpBuf.put(buf, mark, p - mark);
        tmpBuf.flip();

        uriStr = tmpBuf.toString(UTF_8);

        tmpBuf.clear();
      }
      else {
        uriStr = buf.toString(mark, p - mark, UTF_8);
      }

      try {
        uri = new URI(uriStr);
      }
      catch (URISyntaxException e) {
        throw new HttpParserException("The URI is not valid: " + uriStr);
      }

      mark = -1;
    }
	break;
	case 96:
// line 319 "src/rl/momentum/http/HttpParser.rl"
	{
      if (contentLength >= ALMOST_MAX_LONG) {
        throw new HttpParserException("The content-length is WAY too big");
      }

      contentLength *= 10;
      contentLength += ( buf.getUnsigned(p)) - '0';
    }
	break;
	case 97:
// line 328 "src/rl/momentum/http/HttpParser.rl"
	{
      // Hack to get Java to compile
      if (true) {
        throw new HttpParserException("The content-length is in an invalid format");
      }
    }
	break;
	case 98:
// line 335 "src/rl/momentum/http/HttpParser.rl"
	{
      if (isChunkedBody()) {
        throw new HttpParserException("The message head is invalid");
      }

      flags |= IDENTITY_BODY;

      headerName = null;
      headers = callback.header(headers, HDR_CONTENT_LENGTH, String.valueOf(contentLength));
    }
	break;
	case 99:
// line 346 "src/rl/momentum/http/HttpParser.rl"
	{
      if (isIdentityBody()) {
        throw new HttpParserException("The message head is invalid");
      }

      flags |= CHUNKED_BODY;

      headerName = null;
      headers = callback.header(headers, HDR_TRANSFER_ENCODING, VAL_CHUNKED);
    }
	break;
	case 100:
// line 357 "src/rl/momentum/http/HttpParser.rl"
	{
      flags |= CONN_CLOSE;

      headerName = null;
      headers = callback.header(headers, HDR_CONNECTION, VAL_CLOSE);
    }
	break;
	case 101:
// line 364 "src/rl/momentum/http/HttpParser.rl"
	{
      flags |= UPGRADE;

      headerName = null;
      headers = callback.header(headers, HDR_CONNECTION, VAL_UPGRADE);
    }
	break;
	case 102:
// line 371 "src/rl/momentum/http/HttpParser.rl"
	{
      if (isHttp11()) {
        flags |= EXPECT_CONTINUE;
      }

      headerName = null;
      headers = callback.header(headers, HDR_EXPECT, VAL_100_CONTINUE);
    }
	break;
	case 103:
// line 380 "src/rl/momentum/http/HttpParser.rl"
	{
      reset();

      flags  |= PARSING_HEAD;
      headers = callback.blankHeaders();
    }
	break;
	case 104:
// line 387 "src/rl/momentum/http/HttpParser.rl"
	{
      // Not parsing the HTTP message head anymore
      flags ^= PARSING_HEAD;

      Buffer b = null;

      if (isUpgrade()) {
        cs = 752;
      }
      else if (hasBody()) {
        if (isIdentityBody()) {
          int remaining = buf.limit() - p;
          int toRead;

          // If the remaining content length is present in the
          // buffer, just include it in the callback.
          if (remaining > contentLength && !isExpectingContinue()) {
            toRead = (int) contentLength;

            ++p;

            b = slice(buf, p, p + toRead);
            p += toRead - 1;
            contentLength = 0;
          }
          // If the entire body is less than a set maximum (default 4kb), just
          // allocate a new buffer and copy the chunks into it.
          //
          // TODO: Just use tmpBuf
          else if (contentLength <= MAX_BUFFERED && !isExpectingContinue()) {
            body   = Buffer.allocate((int) contentLength);
            toRead = remaining - 1;

            if (remaining > 1) {
              ++p;

              body.put(buf, p, toRead);

              contentLength -= toRead;
              p += toRead - 1;
            }

            cs = 750;
          }
          else {
            cs = 750;
          }
        }
        else if (isChunkedBody()) {
          cs = 732;
        }
        else {
          cs = 751;
        }
      }

      if (body == null) {
        if (isRequest()) {
          callback.request(this, headers, b);
        }
        else {
          callback.response(this, status, headers, b);
        }

        // Unset references to allow the GC to reclaim the memory
        resetHeadState();
      }
    }
	break;
	case 105:
// line 460 "src/rl/momentum/http/HttpParser.rl"
	{
      int toRead = min(contentLength, buf.limit() - p);

      if (toRead > 0) {
        contentLength -= toRead;

        if (body != null) {
          body.put(buf, p, toRead);

          p += toRead - 1;

          if (contentLength == 0) {
            body.flip();

            if (isRequest()) {
              callback.request(this, headers, body);
            }
            else {
              callback.response(this, status, headers, body);
            }

            body = null;
            resetHeadState();

            cs = 1;
          }
        }
        else {
          callback.body(this, slice(buf, p, p + toRead));

          p += toRead - 1;

          if (contentLength == 0) {
            callback.body(this, null);
            cs = 1;
          }
        }
      }
    }
	break;
	case 106:
// line 500 "src/rl/momentum/http/HttpParser.rl"
	{
      int toRead = buf.limit() - p;

      if (toRead > 0) {
        callback.body(this, slice(buf, p, p + toRead));
        p += toRead - 1;
      }
    }
	break;
	case 107:
// line 509 "src/rl/momentum/http/HttpParser.rl"
	{
      int toRead = min(contentLength, buf.limit() - p);

      if (toRead > 0) {
        contentLength -= toRead;

        callback.body(this, slice(buf, p, p + toRead));

        p += toRead - 1;
      }
    }
	break;
	case 108:
// line 521 "src/rl/momentum/http/HttpParser.rl"
	{
      int remaining = buf.limit() - p;

      if (remaining > 0) {
        callback.message(this, slice(buf, p, buf.limit()));
        break parseLoop;
      }
    }
	break;
	case 109:
// line 530 "src/rl/momentum/http/HttpParser.rl"
	{
      callback.body(this, null);
    }
	break;
	case 110:
// line 534 "src/rl/momentum/http/HttpParser.rl"
	{
      contentLength = 0;
    }
	break;
	case 111:
// line 538 "src/rl/momentum/http/HttpParser.rl"
	{
      if (contentLength >= ALMOST_MAX_LONG_HEX) {
        throw new HttpParserException("The content-length is WAY too big");
      }

      contentLength *= 16;
      contentLength += HEX_MAP[( buf.getUnsigned(p))];
    }
	break;
	case 112:
// line 547 "src/rl/momentum/http/HttpParser.rl"
	{
      if (true) {
        throw new HttpParserException("Invalid chunk size");
      }
    }
	break;
	case 114:
// line 557 "src/rl/momentum/http/HttpParser.rl"
	{
      if (++hread > MAX_HEADER_SIZE) {
        throw new HttpParserException("The HTTP message head is too large");
      }
    }
	break;
	case 115:
// line 563 "src/rl/momentum/http/HttpParser.rl"
	{
      if (true) {
        String msg = parseErrorMsg(buf, p);
        throw new HttpParserException("Something went wrong:\n" + msg);
      }
    }
	break;
	case 116:
// line 7 "src/rl/momentum/http/common.rl"
	{
    mark = p;
  }
	break;
	case 117:
// line 11 "src/rl/momentum/http/common.rl"
	{
    if (headerName == null) {
      if (tmpBuf.position() > 0) {
        tmpBuf.put(buf, mark, p - mark);
        tmpBuf.flip();

        headerName = tmpBuf.toString(UTF_8).toLowerCase();

        tmpBuf.clear();
      }
      else {
        headerName = buf.toString(mark, p - mark, UTF_8).toLowerCase();
      }
    }

    mark = -1;
  }
	break;
	case 118:
// line 29 "src/rl/momentum/http/common.rl"
	{
    if (headerValueMark >= mark) {
      if (headerValueMark > mark)
        tmpBuf.put(buf, mark, headerValueMark - mark);

      maybeHeaderValueEnd = -1;
    }

    if (tmpBuf.position() > 0) {
      if (maybeHeaderValueEnd >= 0)
        tmpBuf.position(maybeHeaderValueEnd);

      tmpBuf.put(HttpParser.SP);
    }

    mark = p;
    headerValueMark = -1;
  }
	break;
	case 119:
// line 48 "src/rl/momentum/http/common.rl"
	{
    headerValueMark = p;
  }
	break;
	case 120:
// line 52 "src/rl/momentum/http/common.rl"
	{
  }
	break;
	case 121:
// line 55 "src/rl/momentum/http/common.rl"
	{
    if (headerName != null) {
      String val;

      if (tmpBuf.position() > 0) {
        if (headerValueMark >= mark) {
          // if (mark == -1)
          //   mark = 0;
          if (headerValueMark > mark)
            tmpBuf.put(buf, mark, headerValueMark - mark);
        }
        else if (maybeHeaderValueEnd >= 0) {
          tmpBuf.position(maybeHeaderValueEnd);
        }

        tmpBuf.flip();
        val = tmpBuf.toString(UTF_8);

        tmpBuf.clear();
      }
      else if (headerValueMark > mark) {
        val = buf.toString(mark, headerValueMark - mark, UTF_8);
      }
      else {
        val = HttpParser.EMPTY_STRING;
      }

      headers = callback.header(headers, headerName, val);
      headerName = null;
    }

    mark = -1;
    headerValueMark = -1;
  }
	break;
// line 3900 "src/jvm/momentum/http/HttpParser.java"
			}
		}
	}

case 2:
	_acts = _http_to_state_actions[cs];
	_nacts = (int) _http_actions[_acts++];
	while ( _nacts-- > 0 ) {
		switch ( _http_actions[_acts++] ) {
	case 113:
// line 553 "src/rl/momentum/http/HttpParser.rl"
	{
      cs = 1;
    }
	break;
// line 3916 "src/jvm/momentum/http/HttpParser.java"
		}
	}

	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
	if ( ++p != pe ) {
		_goto_targ = 1;
		continue _goto;
	}
case 4:
	if ( p == eof )
	{
	int __acts = _http_eof_actions[cs];
	int __nacts = (int) _http_actions[__acts++];
	while ( __nacts-- > 0 ) {
		switch ( _http_actions[__acts++] ) {
	case 97:
// line 328 "src/rl/momentum/http/HttpParser.rl"
	{
      // Hack to get Java to compile
      if (true) {
        throw new HttpParserException("The content-length is in an invalid format");
      }
    }
	break;
	case 112:
// line 547 "src/rl/momentum/http/HttpParser.rl"
	{
      if (true) {
        throw new HttpParserException("Invalid chunk size");
      }
    }
	break;
	case 115:
// line 563 "src/rl/momentum/http/HttpParser.rl"
	{
      if (true) {
        String msg = parseErrorMsg(buf, p);
        throw new HttpParserException("Something went wrong:\n" + msg);
      }
    }
	break;
// line 3961 "src/jvm/momentum/http/HttpParser.java"
		}
	}
	}

case 5:
	}
	break; }
	}

// line 824 "src/rl/momentum/http/HttpParser.rl"
      }

      // If a point in the buffer is marked, then we must save it to the
      // temporary buffer
      if (mark >= 0) {
        if (headerValueMark >= 0) {
          maybeHeaderValueEnd = tmpBuf.position() + (headerValueMark - mark);
          headerValueMark = -1;
        }

        tmpBuf.put(buf, mark, pe - mark);
        mark = 0;
      }
    }
    catch (Exception e) {
      flags |= ERROR;
      throw e;
    }

    return p;
  }

  private void setHeaderName(String name) {
    headerName = name;
  }

  private void reset() {
    flags         = 0;
    hread         = 0;
    status        = 0;
    httpMajor     = 0;
    httpMinor     = 9;
    contentLength = 0;

    tmpBuf.clear();
  }

  private void resetHeadState() {
    headers         = null;
    method          = null;
    uri             = null;
    headerName      = null;
    mark            = -1;
    headerValueMark = -1;
  }

  private Buffer slice(Buffer buf, int from, int to) {
    Buffer retval = buf.duplicate();

    retval.position(from);
    retval.limit(to);

    return retval;
  }

  private int min(long a, int b) {
    long cappedA = Math.min((long) Integer.MAX_VALUE, a);
    return Math.min((int) cappedA, b);
  }

  private String parseErrorMsg(Buffer buf, int fpc) {
    int from = Math.max(0, fpc - 35);
    int to   = Math.min(fpc + 35, buf.limit());

    Buffer before = slice(buf, from, fpc);
    Buffer after  = slice(buf, fpc, to);

    byte[] beforeBytes = new byte[before.remaining()];
    byte[] afterBytes  = new byte[after.remaining()];

    before.get(beforeBytes);
    after.get(afterBytes);

    return new String(beforeBytes) + "|" + new String(afterBytes);
  }
}
