
// line 1 "src/rl/picard/http/HttpParser.rl"
package picard.http;

import clojure.lang.AFn;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.ByteBuffer;

/**
 * TODO:
 *   - Improve the handling of Connection header values
 *   - Handle full URIs in the request line
 *   - Possibly handle quotes in URIs (old Mozilla bug)
 */
public final class HttpParser extends AFn {
    public enum MessageType {
        REQUEST,
        RESPONSE
    }

    public enum HttpMethod {
        HEAD,
        GET,
        POST,
        PUT,
        DELETE,
        CONNECT,
        OPTIONS,
        TRACE,

        // webdav
        COPY,
        LOCK,
        MKCOL,
        MOVE,
        PROPFIND,
        PROPPATCH,
        UNLOCK,

        // subversion
        REPORT,
        MKACTIVITY,
        CHECKOUT,
        MERGE,

        // upnp
        MSEARCH,
        NOTIFY,
        SUBSCRIBE,
        UNSUBSCRIBE,

        // RFC-5789
        PATCH
    }

    public static final byte SP = (byte) 0x20; // Space
    public static final byte HT = (byte) 0x09; // Horizontal tab
    public static final String SLASH = new String("/").intern();
    public static final String EMPTY_STRING = new String("").intern();
    public static final byte[] EMPTY_BUFFER = new byte[0];
    public static final ByteBuffer SPACE = ByteBuffer.wrap(new byte[] { SP });

    // Map of hexadecimal chars to their numeric value
    public static final byte[] HEX_MAP = new byte [] {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
         0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
    };

    // Listing out all of the headers that we are going to use
    public static final String HDR_ACCEPT                    = "accept".intern();
    public static final String HDR_ACCEPT_CHARSET            = "accept-charset".intern();
    public static final String HDR_ACCEPT_ENCODING           = "accept-encoding".intern();
    public static final String HDR_ACCEPT_LANGUAGE           = "accept-language".intern();
    public static final String HDR_ACCEPT_RANGES             = "accept-ranges".intern();
    public static final String HDR_AGE                       = "age".intern();
    public static final String HDR_ALLOW                     = "allow".intern();
    public static final String HDR_AUTHORIZATION             = "authorization".intern();
    public static final String HDR_CACHE_CONTROL             = "cache-control".intern();
    public static final String HDR_CONNECTION                = "connection".intern();
    public static final String HDR_CONTENT_ENCODING          = "content-encoding".intern();
    public static final String HDR_CONTENT_LANGUAGE          = "content-language".intern();
    public static final String HDR_CONTENT_LENGTH            = "content-length".intern();
    public static final String HDR_CONTENT_LOCATION          = "content-location".intern();
    public static final String HDR_CONTENT_MD5               = "content-md5".intern();
    public static final String HDR_CONTENT_DISPOSITION       = "content-disposition".intern();
    public static final String HDR_CONTENT_RANGE             = "content-range".intern();
    public static final String HDR_CONTENT_TYPE              = "content-type".intern();
    public static final String HDR_COOKIE                    = "cookie".intern();
    public static final String HDR_DATE                      = "date".intern();
    public static final String HDR_DNT                       = "dnt".intern();
    public static final String HDR_ETAG                      = "etag".intern();
    public static final String HDR_EXPECT                    = "expect".intern();
    public static final String HDR_EXPIRES                   = "expires".intern();
    public static final String HDR_FROM                      = "from".intern();
    public static final String HDR_HOST                      = "host".intern();
    public static final String HDR_IF_MATCH                  = "if-match".intern();
    public static final String HDR_IF_MODIFIED_SINCE         = "if-modified-since".intern();
    public static final String HDR_IF_NONE_MATCH             = "if-none-match".intern();
    public static final String HDR_IF_RANGE                  = "if-range".intern();
    public static final String HDR_IF_UNMODIFIED_SINCE       = "if-unmodified-since".intern();
    public static final String HDR_KEEP_ALIVE                = "keep-alive".intern();
    public static final String HDR_LAST_MODIFIED             = "last-modified".intern();
    public static final String HDR_LINK                      = "link".intern();
    public static final String HDR_LOCATION                  = "location".intern();
    public static final String HDR_MAX_FORWARDS              = "max-forwards".intern();
    public static final String HDR_P3P                       = "p3p".intern();
    public static final String HDR_PRAGMA                    = "pragma".intern();
    public static final String HDR_PROXY_AUTHENTICATE        = "proxy-authenticate".intern();
    public static final String HDR_PROXY_AUTHORIZATION       = "proxy-authorization".intern();
    public static final String HDR_RANGE                     = "range".intern();
    public static final String HDR_REFERER                   = "referer".intern();
    public static final String HDR_REFRESH                   = "refresh".intern();
    public static final String HDR_RETRY_AFTER               = "retry-after".intern();
    public static final String HDR_SERVER                    = "server".intern();
    public static final String HDR_SET_COOKIE                = "set-cookie".intern();
    public static final String HDR_STRICT_TRANSPORT_SECURITY = "strict-transport-security".intern();
    public static final String HDR_TE                        = "te".intern();
    public static final String HDR_TRAILER                   = "trailer".intern();
    public static final String HDR_TRANSFER_ENCODING         = "transfer-encoding".intern();
    public static final String HDR_UPGRADE                   = "upgrade".intern();
    public static final String HDR_USER_AGENT                = "user-agent".intern();
    public static final String HDR_VARY                      = "vary".intern();
    public static final String HDR_VIA                       = "via".intern();
    public static final String HDR_WARNING                   = "warning".intern();
    public static final String HDR_WWW_AUTHENTICATE          = "www-authenticate".intern();
    public static final String HDR_X_CONTENT_TYPE_OPTIONS    = "x-content-type-options".intern();
    public static final String HDR_X_DO_NOT_TRACK            = "x-do-not-track".intern();
    public static final String HDR_X_FORWARDED_FOR           = "x-forwarded-for".intern();
    public static final String HDR_X_FORWARDED_PROTO         = "x-forwarded-proto".intern();
    public static final String HDR_X_FRAME_OPTIONS           = "x-frame-options".intern();
    public static final String HDR_X_POWERED_BY              = "x-powered-by".intern();
    public static final String HDR_X_REQUESTED_WITH          = "x-requested-with".intern();
    public static final String HDR_X_XSS_PROTECTION          = "x-xss-protection".intern();

    public static final String VAL_100_CONTINUE = "100-continue".intern();
    public static final String VAL_CHUNKED      = "chunked".intern();
    public static final String VAL_CLOSE        = "close".intern();
    public static final String VAL_UPGRADE      = "upgrade".intern();

    public static boolean isWhiteSpace(byte b) {
        return b == SP || b == HT;
    }

    
// line 524 "src/rl/picard/http/HttpParser.rl"


    public static final long ALMOST_MAX_LONG     = Long.MAX_VALUE / 10;
    public static final long ALMOST_MAX_LONG_HEX = Long.MAX_VALUE / 16;

    public static final int  MAX_HEADER_SIZE = 100 * 1024;
    public static final int  PARSING_HEAD    = 1 << 0;
    public static final int  IDENTITY_BODY   = 1 << 1;
    public static final int  CHUNKED_BODY    = 1 << 2;
    public static final int  CONN_CLOSE      = 1 << 3;
    public static final int  KEEP_ALIVE      = 1 << 4;
    public static final int  UPGRADE         = 1 << 5;
    public static final int  EXPECT_CONTINUE = 1 << 6;
    public static final int  ERROR           = 1 << 7;

    
// line 170 "src/jvm/picard/http/HttpParser.java"
private static byte[] init__http_actions_0()
{
	return new byte [] {
	    0,    1,  108,    1,  109,    1,  110,    1,  111,    1,  113,    1,
	  115,    1,  116,    1,  117,    2,    0,  116,    2,    1,  116,    2,
	    2,  116,    2,    3,  116,    2,    4,  116,    2,    5,  116,    2,
	    6,  116,    2,    7,  116,    2,    8,  116,    2,    9,  116,    2,
	   10,  116,    2,   11,  116,    2,   12,  116,    2,   13,  116,    2,
	   14,  116,    2,   15,  116,    2,   16,  116,    2,   17,  116,    2,
	   18,  116,    2,   19,  116,    2,   20,  116,    2,   21,  116,    2,
	   22,  116,    2,   23,  116,    2,   88,  116,    2,   89,  116,    2,
	   90,  116,    2,   91,  116,    2,   92,  116,    2,   93,  116,    2,
	   94,  116,    2,   95,  116,    2,   96,  116,    2,   97,  116,    2,
	   98,  116,    2,   99,  116,    2,  100,  116,    2,  100,  117,    2,
	  106,  116,    2,  107,  116,    2,  112,  113,    2,  114,  117,    3,
	   24,   94,  116,    3,   25,   94,  116,    3,   26,   94,  116,    3,
	   27,   94,  116,    3,   28,   94,  116,    3,   29,   94,  116,    3,
	   30,   94,  116,    3,   31,   94,  116,    3,   32,   94,  116,    3,
	   33,   94,  116,    3,   34,   94,  116,    3,   35,   94,  116,    3,
	   36,   94,  116,    3,   37,   94,  116,    3,   38,   94,  116,    3,
	   39,   94,  116,    3,   40,   94,  116,    3,   41,   94,  116,    3,
	   42,   94,  116,    3,   43,   94,  116,    3,   44,   94,  116,    3,
	   45,   94,  116,    3,   46,   94,  116,    3,   47,   94,  116,    3,
	   48,   94,  116,    3,   49,   94,  116,    3,   50,   94,  116,    3,
	   51,   94,  116,    3,   52,   94,  116,    3,   53,   94,  116,    3,
	   54,   94,  116,    3,   55,   94,  116,    3,   56,   94,  116,    3,
	   57,   94,  116,    3,   58,   94,  116,    3,   59,   94,  116,    3,
	   60,   94,  116,    3,   61,   94,  116,    3,   62,   94,  116,    3,
	   63,   94,  116,    3,   64,   94,  116,    3,   65,   94,  116,    3,
	   66,   94,  116,    3,   67,   94,  116,    3,   68,   94,  116,    3,
	   69,   94,  116,    3,   70,   94,  116,    3,   71,   94,  116,    3,
	   72,   94,  116,    3,   73,   94,  116,    3,   74,   94,  116,    3,
	   75,   94,  116,    3,   76,   94,  116,    3,   77,   94,  116,    3,
	   78,   94,  116,    3,   79,   94,  116,    3,   80,   94,  116,    3,
	   81,   94,  116,    3,   82,   94,  116,    3,   83,   94,  116,    3,
	   84,   94,  116,    3,   85,   94,  116,    3,   86,   94,  116,    3,
	   87,   94,  116,    3,   96,   97,  116,    3,   98,   93,  116,    3,
	   99,   95,  116,    3,  100,   95,  116,    3,  101,   96,  116,    3,
	  102,   96,  116,    3,  103,   96,  116,    3,  104,   96,  116,    3,
	  105,   96,  116,    4,   95,   96,   97,  116,    4,  101,   96,   97,
	  116,    4,  102,   96,   97,  116,    4,  103,   96,   97,  116,    4,
	  104,   96,   97,  116,    4,  105,   96,   97,  116,    5,  100,   95,
	   96,   97,  116
	};
}

private static final byte _http_actions[] = init__http_actions_0();


private static byte[] init__http_cond_offsets_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    2
	};
}

private static final byte _http_cond_offsets[] = init__http_cond_offsets_0();


private static byte[] init__http_cond_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    1,    0
	};
}

private static final byte _http_cond_lengths[] = init__http_cond_lengths_0();


private static int[] init__http_cond_keys_0()
{
	return new int [] {
	    0,65535,    0,65535,    0
	};
}

private static final int _http_cond_keys[] = init__http_cond_keys_0();


private static byte[] init__http_cond_spaces_0()
{
	return new byte [] {
	    0,    0,    0
	};
}

private static final byte _http_cond_spaces[] = init__http_cond_spaces_0();


private static short[] init__http_key_offsets_0()
{
	return new short [] {
	    0,    0,   14,   15,   29,   31,   32,   33,   34,   35,   36,   37,
	   38,   42,   47,   48,   99,  100,  101,  102,  103,  104,  105,  106,
	  107,  108,  109,  110,  111,  112,  113,  114,  115,  116,  117,  121,
	  122,  123,  124,  125,  127,  128,  129,  130,  131,  132,  133,  134,
	  135,  136,  137,  138,  139,  140,  141,  142,  143,  144,  145,  146,
	  147,  148,  149,  150,  151,  152,  153,  154,  155,  156,  157,  158,
	  159,  160,  164,  165,  166,  167,  168,  169,  170,  171,  172,  173,
	  175,  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,
	  187,  188,  189,  190,  191,  192,  193,  194,  195,  196,  197,  198,
	  199,  200,  201,  202,  203,  204,  205,  206,  207,  209,  210,  211,
	  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,  239,
	  242,  248,  249,  302,  327,  346,  365,  384,  403,  421,  446,  465,
	  484,  503,  522,  541,  560,  577,  596,  615,  634,  653,  672,  691,
	  710,  727,  746,  765,  784,  803,  822,  841,  860,  877,  896,  915,
	  934,  953,  972,  989, 1008, 1025, 1044, 1063, 1082, 1099, 1118, 1137,
	 1156, 1175, 1194, 1213, 1232, 1251, 1270, 1289, 1308, 1325, 1346, 1365,
	 1384, 1403, 1421, 1440, 1459, 1478, 1497, 1516, 1535, 1554, 1571, 1592,
	 1613, 1632, 1651, 1670, 1689, 1708, 1727, 1744, 1747, 1757, 1763, 1769,
	 1777, 1785, 1793, 1801, 1807, 1815, 1823, 1831, 1839, 1847, 1855, 1861,
	 1880, 1899, 1918, 1936, 1965, 1984, 2003, 2022, 2041, 2060, 2079, 2098,
	 2117, 2136, 2155, 2172, 2191, 2210, 2229, 2248, 2267, 2286, 2305, 2322,
	 2345, 2364, 2383, 2402, 2421, 2440, 2459, 2476, 2495, 2514, 2533, 2552,
	 2569, 2572, 2580, 2588, 2607, 2626, 2645, 2664, 2683, 2702, 2719, 2738,
	 2756, 2773, 2792, 2811, 2830, 2849, 2866, 2885, 2904, 2923, 2940, 2959,
	 2978, 2997, 3014, 3035, 3054, 3073, 3090, 3109, 3126, 3147, 3166, 3185,
	 3202, 3221, 3242, 3261, 3280, 3297, 3300, 3307, 3314, 3321, 3328, 3336,
	 3344, 3352, 3360, 3368, 3376, 3384, 3392, 3398, 3417, 3436, 3455, 3472,
	 3491, 3510, 3529, 3546, 3565, 3584, 3603, 3620, 3639, 3657, 3682, 3703,
	 3722, 3741, 3760, 3777, 3796, 3815, 3834, 3853, 3872, 3891, 3909, 3928,
	 3947, 3966, 3985, 4004, 4021, 4040, 4059, 4078, 4096, 4115, 4134, 4153,
	 4172, 4191, 4208, 4227, 4246, 4265, 4284, 4301, 4320, 4339, 4358, 4377,
	 4396, 4415, 4434, 4453, 4472, 4490, 4509, 4528, 4547, 4566, 4585, 4602,
	 4621, 4640, 4659, 4677, 4696, 4715, 4734, 4753, 4772, 4789, 4812, 4831,
	 4850, 4868, 4887, 4906, 4925, 4944, 4963, 4982, 5001, 5020, 5037, 5056,
	 5075, 5092, 5111, 5130, 5149, 5168, 5187, 5206, 5223, 5242, 5261, 5279,
	 5298, 5317, 5336, 5355, 5374, 5393, 5412, 5431, 5448, 5468, 5487, 5504,
	 5525, 5544, 5563, 5582, 5599, 5618, 5637, 5655, 5674, 5693, 5712, 5731,
	 5752, 5771, 5790, 5809, 5828, 5847, 5866, 5885, 5902, 5921, 5940, 5959,
	 5978, 5997, 6016, 6035, 6054, 6071, 6092, 6111, 6130, 6149, 6166, 6187,
	 6208, 6227, 6246, 6265, 6282, 6301, 6320, 6339, 6356, 6375, 6394, 6412,
	 6431, 6450, 6469, 6488, 6507, 6524, 6545, 6566, 6585, 6604, 6623, 6640,
	 6658, 6677, 6696, 6715, 6734, 6753, 6772, 6789, 6808, 6827, 6846, 6865,
	 6883, 6902, 6921, 6940, 6959, 6978, 6997, 7016, 7035, 7054, 7072, 7091,
	 7110, 7129, 7148, 7167, 7186, 7205, 7224, 7241, 7262, 7279, 7298, 7319,
	 7338, 7357, 7376, 7393, 7412, 7431, 7450, 7469, 7487, 7506, 7525, 7544,
	 7563, 7582, 7601, 7620, 7639, 7656, 7659, 7667, 7675, 7683, 7691, 7699,
	 7707, 7715, 7721, 7742, 7761, 7780, 7799, 7818, 7837, 7854, 7873, 7892,
	 7910, 7929, 7948, 7967, 7986, 8005, 8022, 8043, 8062, 8081, 8098, 8117,
	 8134, 8155, 8174, 8193, 8212, 8231, 8250, 8267, 8286, 8304, 8323, 8342,
	 8361, 8380, 8399, 8418, 8437, 8456, 8475, 8494, 8513, 8532, 8549, 8567,
	 8596, 8615, 8634, 8653, 8672, 8691, 8710, 8728, 8747, 8766, 8785, 8804,
	 8822, 8841, 8860, 8879, 8898, 8917, 8936, 8955, 8972, 8991, 9009, 9028,
	 9047, 9066, 9084, 9103, 9122, 9141, 9160, 9179, 9196, 9217, 9236, 9255,
	 9274, 9293, 9312, 9331, 9350, 9368, 9389, 9408, 9427, 9444, 9463, 9482,
	 9501, 9520, 9537, 9556, 9575, 9594, 9612, 9631, 9650, 9669, 9688, 9707,
	 9726, 9745, 9762, 9781, 9800, 9819, 9838, 9857, 9876, 9894, 9913, 9932,
	 9949, 9968, 9987,10006,10025,10044,10063,10082,10101,10119,10138,10157,
	10176,10195,10212,10231,10250,10268,10287,10306,10325,10344,10363,10382,
	10401,10420,10439,10458,10475,10478,10480,10482,10484,10485,10487,10490,
	10492,10495,10497,10498,10499,10500,10501,10502,10503,10504,10511,10518,
	10526,10527,10530,10531,10538,10547,10548,10552,10553,10557,10558,10562,
	10566,10570,10584,10584,10586
	};
}

private static final short _http_key_offsets[] = init__http_key_offsets_0();


private static int[] init__http_trans_keys_0()
{
	return new int [] {
	   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,
	   84,   85,   10,   13,   67,   68,   71,   72,   76,   77,   78,   79,
	   80,   82,   83,   84,   85,   72,   79,   69,   67,   75,   79,   85,
	   84,   32,   32,  127,    0,   31,   13,   32,  127,    0,   31,   10,
	   13,   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,
	   76,   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,
	  100,  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,
	  117,  118,  119,  120,  123,  125,  127,    0,   32,   40,   41,   58,
	   64,   91,   93,   10,   69,   76,   69,   84,   69,   32,   69,   84,
	   32,   69,   65,   68,   32,   79,   67,   75,   32,   69,   75,   79,
	   83,   82,   71,   69,   32,   65,   67,   67,   84,   73,   86,   73,
	   84,   89,   32,   79,   76,   32,   86,   69,   32,   69,   65,   82,
	   67,   72,   32,   79,   84,   73,   70,   89,   32,   80,   84,   73,
	   79,   78,   83,   32,   65,   79,   82,   85,   84,   67,   72,   32,
	   83,   84,   32,   79,   80,   70,   80,   73,   78,   68,   32,   65,
	   84,   67,   72,   32,   84,   32,   69,   80,   79,   82,   84,   32,
	   85,   66,   83,   67,   82,   73,   66,   69,   32,   82,   65,   67,
	   69,   32,   78,   76,   83,   79,   67,   75,   32,   85,   66,   83,
	   67,   82,   73,   66,   69,   32,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   58,    9,   13,   32,  127,    0,   31,   10,    9,   13,   32,
	   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,   76,
	   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,  100,
	  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,  117,
	  118,  119,  120,  123,  125,  127,    0,   31,   40,   41,   58,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   71,   76,   85,
	   99,  103,  108,  117,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   69,   76,   82,   99,
	  101,  108,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,
	  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   90,  122,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,   79,  110,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,   84,  110,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,   67,   85,
	   99,  117,  127,    0,   31,    9,   13,   32,  127,    0,   31,    9,
	   13,   32,  127,    0,   31,    9,   13,   32,   76,  108,  127,    0,
	   31,    9,   13,   32,   79,  111,  127,    0,   31,    9,   13,   32,
	   83,  115,  127,    0,   31,    9,   13,   32,   69,  101,  127,    0,
	   31,    9,   13,   32,  127,    0,   31,    9,   13,   32,   80,  112,
	  127,    0,   31,    9,   13,   32,   71,  103,  127,    0,   31,    9,
	   13,   32,   82,  114,  127,    0,   31,    9,   13,   32,   65,   97,
	  127,    0,   31,    9,   13,   32,   68,  100,  127,    0,   31,    9,
	   13,   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,    0,
	   31,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,   69,
	   76,   77,   82,   84,  100,  101,  108,  109,  114,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   69,   79,   97,  101,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   58,    9,   13,   32,  127,    0,   31,   48,   57,
	    9,   13,   32,  127,    0,   31,   48,   57,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   53,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   75,  107,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   78,   97,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,   88,  116,  120,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	   73,  101,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   58,
	    9,   13,   32,   49,  127,    0,   31,    9,   13,   32,   48,  127,
	    0,   31,    9,   13,   32,   48,  127,    0,   31,    9,   13,   32,
	   45,  127,    0,   31,    9,   13,   32,   67,   99,  127,    0,   31,
	    9,   13,   32,   79,  111,  127,    0,   31,    9,   13,   32,   78,
	  110,  127,    0,   31,    9,   13,   32,   84,  116,  127,    0,   31,
	    9,   13,   32,   73,  105,  127,    0,   31,    9,   13,   32,   78,
	  110,  127,    0,   31,    9,   13,   32,   85,  117,  127,    0,   31,
	    9,   13,   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,
	    0,   31,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   77,   78,   82,   85,  109,  110,  114,  117,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   79,   97,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,  108,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   86,  118,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   73,   79,   97,  105,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   88,  120,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   51,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   79,   97,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   88,  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,   79,  101,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   90,  122,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   69,   97,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   70,   84,  102,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,   82,  101,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,   84,  101,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	   84,  114,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   86,  118,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,
	  121,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	   82,  101,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,   78,  105,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   58,    9,   13,   32,   67,   99,  127,    0,   31,    9,
	   13,   32,   72,  104,  127,    0,   31,    9,   13,   32,   85,  117,
	  127,    0,   31,    9,   13,   32,   78,  110,  127,    0,   31,    9,
	   13,   32,   75,  107,  127,    0,   31,    9,   13,   32,   69,  101,
	  127,    0,   31,    9,   13,   32,   68,  100,  127,    0,   31,    9,
	   13,   32,  127,    0,   31,    9,   32,   34,   44,   47,   58,   80,
	   83,  112,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   73,   97,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   87,   97,  119,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125
	};
};
private static int[] init__http_trans_keys_1()
{
	return new int [] {
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   68,   70,   80,   82,   88,   99,
	  100,  102,  112,  114,  120,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,   82,
	  111,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,   80,  102,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   66,   98,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   81,  113,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,   32,
	   72,  104,   84,  116,   84,  116,   80,  112,   47,   48,   57,   46,
	   48,   57,   48,   57,   13,   48,   57,   78,   80,   78,   69,   67,
	   84,   32,   89,   32,   48,   49,   57,   65,   70,   97,  102,   48,
	   49,   57,   65,   70,   97,  102,   13,   59,   48,   57,   65,   70,
	   97,  102,   10,65549,131072,196607,   10,   48,   49,   57,   65,   70,
	   97,  102,   13,   48,   59,   49,   57,   65,   70,   97,  102,   10,
	   13,  127,    0,   31,   10,   13,  127,    0,   31,   10,   13,  127,
	    0,   31,   13,  127,    0,   31,   13,  127,    0,   31,   13,   67,
	   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,   84,   85,
	131072,196607,    0
	};
}

private static final int [] combine__http_trans_keys() {
	int [] combined = new int [ 10587 ];
	System.arraycopy ( init__http_trans_keys_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_trans_keys_1(), 0, combined, 8184, 2403 );
	return combined;
}
private static final int [] _http_trans_keys = combine__http_trans_keys();
private static byte[] init__http_single_lengths_0()
{
	return new byte [] {
	    0,   14,    1,   14,    2,    1,    1,    1,    1,    1,    1,    1,
	    2,    3,    1,   43,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,    1,
	    1,    1,    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    4,    1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    2,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    9,    3,
	    4,    1,   45,   17,   11,   11,   11,   11,   10,   17,   11,   11,
	   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,
	    9,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,
	   11,   11,    9,   11,    9,   11,   11,   11,    9,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,   13,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,   11,   11,    9,   13,   13,
	   11,   11,   11,   11,   11,   11,    9,    3,    8,    4,    4,    6,
	    6,    6,    6,    4,    6,    6,    6,    6,    6,    6,    4,   11,
	   11,   11,   10,   21,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,    9,   15,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,    9,
	    3,    4,    4,   11,   11,   11,   11,   11,   11,    9,   11,   10,
	    9,   11,   11,   11,   11,    9,   11,   11,   11,    9,   11,   11,
	   11,    9,   13,   11,   11,    9,   11,    9,   13,   11,   11,    9,
	   11,   13,   11,   11,    9,    3,    5,    5,    5,    5,    6,    6,
	    6,    6,    6,    6,    6,    6,    4,   11,   11,   11,    9,   11,
	   11,   11,    9,   11,   11,   11,    9,   11,   10,   17,   13,   11,
	   11,   11,    9,   11,   11,   11,   11,   11,   11,   10,   11,   11,
	   11,   11,   11,    9,   11,   11,   11,   10,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   10,   11,   11,   11,   11,   11,    9,   15,   11,   11,
	   10,   11,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,
	    9,   11,   11,   11,   11,   11,   11,    9,   11,   11,   10,   11,
	   11,   11,   11,   11,   11,   11,   11,    9,   12,   11,    9,   13,
	   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,   13,
	   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,
	   11,   11,   11,   11,    9,   13,   11,   11,   11,    9,   13,   13,
	   11,   11,   11,    9,   11,   11,   11,    9,   11,   11,   10,   11,
	   11,   11,   11,   11,    9,   13,   13,   11,   11,   11,    9,   10,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   10,   11,   11,
	   11,   11,   11,   11,   11,   11,    9,   13,    9,   11,   13,   11,
	   11,   11,    9,   11,   11,   11,   11,   10,   11,   11,   11,   11,
	   11,   11,   11,   11,    9,    3,    6,    6,    6,    6,    6,    6,
	    6,    4,   13,   11,   11,   11,   11,   11,    9,   11,   11,   10,
	   11,   11,   11,   11,   11,    9,   13,   11,   11,    9,   11,    9,
	   13,   11,   11,   11,   11,   11,    9,   11,   10,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,    9,   10,   21,
	   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,   11,   11,    9,   11,   10,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,    9,   13,   11,   11,   11,
	   11,   11,   11,   11,   10,   13,   11,   11,    9,   11,   11,   11,
	   11,    9,   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,   11,   11,   10,   11,   11,    9,
	   11,   11,   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,    9,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,    9,    3,    2,    2,    2,    1,    0,    1,    0,
	    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
	    1,    1,    1,    1,    3,    1,    2,    1,    2,    1,    2,    2,
	    2,   14,    0,    0,    0
	};
}

private static final byte _http_single_lengths[] = init__http_single_lengths_0();


private static byte[] init__http_range_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    0,    4,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,    0,
	    1,    0,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    0,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    0,    2,    2,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    0,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    0,    1,    1,    1,    1,    1,    1,
	    1,    1,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    0,    0,    0,    0,    0,    1,    1,    1,
	    1,    0,    0,    0,    0,    0,    0,    0,    0,    3,    3,    3,
	    0,    1,    0,    3,    3,    0,    1,    0,    1,    0,    1,    1,
	    1,    0,    0,    1,    0
	};
}

private static final byte _http_range_lengths[] = init__http_range_lengths_0();


private static short[] init__http_index_offsets_0()
{
	return new short [] {
	    0,    0,   15,   17,   32,   35,   37,   39,   41,   43,   45,   47,
	   49,   53,   58,   60,  108,  110,  112,  114,  116,  118,  120,  122,
	  124,  126,  128,  130,  132,  134,  136,  138,  140,  142,  144,  149,
	  151,  153,  155,  157,  160,  162,  164,  166,  168,  170,  172,  174,
	  176,  178,  180,  182,  184,  186,  188,  190,  192,  194,  196,  198,
	  200,  202,  204,  206,  208,  210,  212,  214,  216,  218,  220,  222,
	  224,  226,  231,  233,  235,  237,  239,  241,  243,  245,  247,  249,
	  252,  254,  256,  258,  260,  262,  264,  266,  268,  270,  272,  274,
	  276,  278,  280,  282,  284,  286,  288,  290,  292,  294,  296,  298,
	  300,  302,  304,  306,  308,  310,  312,  314,  316,  319,  321,  323,
	  325,  327,  329,  331,  333,  335,  337,  339,  341,  343,  345,  359,
	  363,  369,  371,  421,  443,  459,  475,  491,  507,  522,  544,  560,
	  576,  592,  608,  624,  640,  654,  670,  686,  702,  718,  734,  750,
	  766,  780,  796,  812,  828,  844,  860,  876,  892,  906,  922,  938,
	  954,  970,  986, 1000, 1016, 1030, 1046, 1062, 1078, 1092, 1108, 1124,
	 1140, 1156, 1172, 1188, 1204, 1220, 1236, 1252, 1268, 1282, 1300, 1316,
	 1332, 1348, 1363, 1379, 1395, 1411, 1427, 1443, 1459, 1475, 1489, 1507,
	 1525, 1541, 1557, 1573, 1589, 1605, 1621, 1635, 1639, 1649, 1655, 1661,
	 1669, 1677, 1685, 1693, 1699, 1707, 1715, 1723, 1731, 1739, 1747, 1753,
	 1769, 1785, 1801, 1816, 1842, 1858, 1874, 1890, 1906, 1922, 1938, 1954,
	 1970, 1986, 2002, 2016, 2032, 2048, 2064, 2080, 2096, 2112, 2128, 2142,
	 2162, 2178, 2194, 2210, 2226, 2242, 2258, 2272, 2288, 2304, 2320, 2336,
	 2350, 2354, 2361, 2368, 2384, 2400, 2416, 2432, 2448, 2464, 2478, 2494,
	 2509, 2523, 2539, 2555, 2571, 2587, 2601, 2617, 2633, 2649, 2663, 2679,
	 2695, 2711, 2725, 2743, 2759, 2775, 2789, 2805, 2819, 2837, 2853, 2869,
	 2883, 2899, 2917, 2933, 2949, 2963, 2967, 2974, 2981, 2988, 2995, 3003,
	 3011, 3019, 3027, 3035, 3043, 3051, 3059, 3065, 3081, 3097, 3113, 3127,
	 3143, 3159, 3175, 3189, 3205, 3221, 3237, 3251, 3267, 3282, 3304, 3322,
	 3338, 3354, 3370, 3384, 3400, 3416, 3432, 3448, 3464, 3480, 3495, 3511,
	 3527, 3543, 3559, 3575, 3589, 3605, 3621, 3637, 3652, 3668, 3684, 3700,
	 3716, 3732, 3746, 3762, 3778, 3794, 3810, 3824, 3840, 3856, 3872, 3888,
	 3904, 3920, 3936, 3952, 3968, 3983, 3999, 4015, 4031, 4047, 4063, 4077,
	 4093, 4109, 4125, 4140, 4156, 4172, 4188, 4204, 4220, 4234, 4254, 4270,
	 4286, 4301, 4317, 4333, 4349, 4365, 4381, 4397, 4413, 4429, 4443, 4459,
	 4475, 4489, 4505, 4521, 4537, 4553, 4569, 4585, 4599, 4615, 4631, 4646,
	 4662, 4678, 4694, 4710, 4726, 4742, 4758, 4774, 4788, 4805, 4821, 4835,
	 4853, 4869, 4885, 4901, 4915, 4931, 4947, 4962, 4978, 4994, 5010, 5026,
	 5044, 5060, 5076, 5092, 5108, 5124, 5140, 5156, 5170, 5186, 5202, 5218,
	 5234, 5250, 5266, 5282, 5298, 5312, 5330, 5346, 5362, 5378, 5392, 5410,
	 5428, 5444, 5460, 5476, 5490, 5506, 5522, 5538, 5552, 5568, 5584, 5599,
	 5615, 5631, 5647, 5663, 5679, 5693, 5711, 5729, 5745, 5761, 5777, 5791,
	 5806, 5822, 5838, 5854, 5870, 5886, 5902, 5916, 5932, 5948, 5964, 5980,
	 5995, 6011, 6027, 6043, 6059, 6075, 6091, 6107, 6123, 6139, 6154, 6170,
	 6186, 6202, 6218, 6234, 6250, 6266, 6282, 6296, 6314, 6328, 6344, 6362,
	 6378, 6394, 6410, 6424, 6440, 6456, 6472, 6488, 6503, 6519, 6535, 6551,
	 6567, 6583, 6599, 6615, 6631, 6645, 6649, 6657, 6665, 6673, 6681, 6689,
	 6697, 6705, 6711, 6729, 6745, 6761, 6777, 6793, 6809, 6823, 6839, 6855,
	 6870, 6886, 6902, 6918, 6934, 6950, 6964, 6982, 6998, 7014, 7028, 7044,
	 7058, 7076, 7092, 7108, 7124, 7140, 7156, 7170, 7186, 7201, 7217, 7233,
	 7249, 7265, 7281, 7297, 7313, 7329, 7345, 7361, 7377, 7393, 7407, 7422,
	 7448, 7464, 7480, 7496, 7512, 7528, 7544, 7559, 7575, 7591, 7607, 7623,
	 7638, 7654, 7670, 7686, 7702, 7718, 7734, 7750, 7764, 7780, 7795, 7811,
	 7827, 7843, 7858, 7874, 7890, 7906, 7922, 7938, 7952, 7970, 7986, 8002,
	 8018, 8034, 8050, 8066, 8082, 8097, 8115, 8131, 8147, 8161, 8177, 8193,
	 8209, 8225, 8239, 8255, 8271, 8287, 8302, 8318, 8334, 8350, 8366, 8382,
	 8398, 8414, 8428, 8444, 8460, 8476, 8492, 8508, 8524, 8539, 8555, 8571,
	 8585, 8601, 8617, 8633, 8649, 8665, 8681, 8697, 8713, 8728, 8744, 8760,
	 8776, 8792, 8806, 8822, 8838, 8853, 8869, 8885, 8901, 8917, 8933, 8949,
	 8965, 8981, 8997, 9013, 9027, 9031, 9034, 9037, 9040, 9042, 9044, 9047,
	 9049, 9052, 9055, 9057, 9059, 9061, 9063, 9065, 9067, 9069, 9074, 9079,
	 9085, 9087, 9090, 9092, 9097, 9104, 9106, 9110, 9112, 9116, 9118, 9122,
	 9126, 9130, 9145, 9146, 9148
	};
}

private static final short _http_index_offsets[] = init__http_index_offsets_0();


private static short[] init__http_indicies_0()
{
	return new short [] {
	    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
	   13,   14,    0,   15,    0,   16,   17,   18,   19,   20,   21,   22,
	   23,   24,   25,   26,   27,   28,   29,    0,   30,   31,    0,   32,
	    0,   33,    0,   34,    0,   35,    0,   36,    0,   37,    0,   38,
	    0,   39,    0,    0,   40,   41,   42,    0,    0,   43,   44,    0,
	   45,    0,    0,    0,   47,   48,   49,   50,   51,   52,   53,   54,
	   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   47,   48,
	   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,
	   61,   62,   63,   64,    0,    0,    0,    0,    0,    0,    0,   46,
	   65,    0,   66,    0,   67,    0,   68,    0,   69,    0,   70,    0,
	   71,    0,   72,    0,   73,    0,   74,    0,   75,    0,   76,    0,
	   77,    0,   78,    0,   79,    0,   80,    0,   81,    0,   82,    0,
	   83,   84,   85,   86,    0,   87,    0,   88,    0,   89,    0,   90,
	    0,   91,   92,    0,   93,    0,   94,    0,   95,    0,   96,    0,
	   97,    0,   98,    0,   99,    0,  100,    0,  101,    0,  102,    0,
	  103,    0,  104,    0,  105,    0,  106,    0,  107,    0,  108,    0,
	  109,    0,  110,    0,  111,    0,  112,    0,  113,    0,  114,    0,
	  115,    0,  116,    0,  117,    0,  118,    0,  119,    0,  120,    0,
	  121,    0,  122,    0,  123,    0,  124,    0,  125,    0,  126,  127,
	  128,  129,    0,  130,    0,  131,    0,  132,    0,  133,    0,  134,
	    0,  135,    0,  136,    0,  137,    0,  138,    0,  139,  140,    0,
	  141,    0,  142,    0,  143,    0,  144,    0,  145,    0,  146,    0,
	  147,    0,  148,    0,  149,    0,  150,    0,  151,    0,  152,    0,
	  153,    0,  154,    0,  155,    0,  156,    0,  157,    0,  158,    0,
	  159,    0,  160,    0,  161,    0,  162,    0,  163,    0,  164,    0,
	  165,    0,  166,    0,  167,    0,  168,    0,  169,    0,  170,    0,
	  171,    0,  172,    0,  173,  174,    0,  175,    0,  176,    0,  177,
	    0,  178,    0,  179,    0,  180,    0,  181,    0,  182,    0,  183,
	    0,  184,    0,  185,    0,  186,    0,  187,    0,  188,  188,    0,
	    0,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  191,
	  191,  192,    0,  192,  193,  192,    0,    0,  194,  195,    0,  192,
	  196,  192,    0,    0,    0,  198,  199,  200,  201,  202,  203,  204,
	  205,  206,  207,  208,  209,  210,  211,  212,  213,  214,  215,  198,
	  199,  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,  210,
	  211,  212,  213,  214,  215,    0,    0,    0,    0,    0,    0,    0,
	  197,  188,  188,    0,    0,    0,  190,  216,  217,  218,  219,  216,
	  217,  218,  219,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  220,  220,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  221,  221,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  222,  222,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  223,  223,    0,    0,    0,    0,    0,
	    0,    0,  189,  224,  224,    0,    0,  225,    0,  226,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  227,  228,  229,  230,  227,  228,  229,  230,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  231,  231,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  232,  232,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  233,  233,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  234,  234,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  235,  235,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  236,  236,    0,    0,    0,    0,
	    0,    0,    0,  189,  237,  237,    0,    0,    0,  238,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  239,  239,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  240,  240,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  241,  241,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  242,  242,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  243,  243,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  244,  244,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  245,  245,    0,    0,    0,    0,    0,    0,    0,  189,  246,  246,
	    0,    0,    0,  247,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  248,  248,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  249,  249,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  250,  250,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  251,  251,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  252,  252,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  253,  253,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  254,  254,    0,    0,    0,    0,
	    0,    0,    0,  189,  255,  255,    0,    0,    0,  256,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  257,  257,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  258,  258,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  259,  259,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  260,  260,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  261,  261,    0,    0,    0,    0,    0,    0,
	    0,  189,  262,  262,    0,    0,    0,  263,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  264,  264,
	    0,    0,    0,    0,    0,    0,    0,  189,  265,  265,    0,    0,
	    0,  266,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  267,  267,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  268,  268,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  269,  269,    0,    0,    0,    0,    0,    0,    0,  189,  270,  270,
	    0,    0,    0,  271,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  272,  272,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  273,  273,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  274,  274,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  275,  275,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  276,  276,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  277,  277,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  278,  278,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  279,  279,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  280,  280,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  281,  281,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  282,  282,
	    0,    0,    0,    0,    0,    0,    0,  189,  283,  283,    0,    0,
	    0,  284,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  285,  286,  285,  286,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  287,  287,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  288,  288,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  289,  289,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  290,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  291,  291,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  292,  292,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  293,  293,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  294,  294,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  295,  295,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  296,  296,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  297,  297,    0,    0,    0,    0,    0,    0,    0,  189,  298,
	  298,    0,    0,    0,  299,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  300,  301,  300,  301,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  302,  303,  302,  303,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  304,  304,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  305,
	  305,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  306,  306,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  307,  307,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  308,
	  308,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  309,  309,    0,    0,    0,    0,    0,    0,    0,
	  189,  310,  310,    0,    0,    0,  311,    0,    0,    0,    0,    0,
	    0,    0,  189,  312,  312,  313,    0,  313,  193,  313,  314,  315,
	  314,  315,    0,    0,  194,  316,  317,  316,    0,    0,  318,  319,
	  320,  319,    0,    0,  318,  316,  317,  316,  321,  321,    0,    0,
	  318,  316,  317,  316,  322,  322,    0,    0,  318,  316,  317,  316,
	  323,  323,    0,    0,  318,  316,  317,  316,  324,  324,    0,    0,
	  318,  325,  326,  325,    0,    0,  318,  316,  317,  316,  327,  327,
	    0,    0,  318,  316,  317,  316,  328,  328,    0,    0,  318,  316,
	  317,  316,  329,  329,    0,    0,  318,  316,  317,  316,  330,  330,
	    0,    0,  318,  316,  317,  316,  331,  331,    0,    0,  318,  316,
	  317,  316,  332,  332,    0,    0,  318,  333,  334,  333,    0,    0,
	  318,  188,  188,    0,    0,    0,  190,  335,  335,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  336,
	  336,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  337,  337,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,  338,    0,  190,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  339,  340,
	  341,  342,  343,  344,  339,  340,  341,  342,  343,  344,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  345,  345,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  346,  346,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  347,  347,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  348,  348,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  349,  349,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  350,  350,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  351,  351,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  352,  352,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  353,  353,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  354,  354,    0,    0,    0,    0,    0,    0,    0,  189,  355,  355,
	    0,    0,    0,  356,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  357,  357,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  358,  358,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  359,  359,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  360,  360,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  361,  361,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  362,  362,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  363,  363,    0,    0,    0,    0,
	    0,    0,    0,  189,  364,  364,    0,    0,    0,  365,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  366,  367,  368,  366,  367,  368,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  369,  369,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  370,  370,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  371,  371,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  372,  372,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  373,  373,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  374,  374,    0,    0,    0,    0,    0,    0,
	    0,  189,  375,  375,    0,    0,    0,  376,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  377,  377,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  378,  378,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  379,  379,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  380,  380,
	    0,    0,    0,    0,    0,    0,    0,  189,  381,  381,    0,    0,
	    0,  382,    0,    0,    0,    0,    0,    0,    0,  189,  383,  383,
	  384,    0,  384,  386,  384,  385,  385,  388,  387,  389,  390,  389,
	  385,  385,  392,  391,  188,  188,    0,    0,    0,  190,  393,  393,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  394,  394,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  395,  395,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  396,  396,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  397,  397,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  398,  398,    0,    0,    0,    0,
	    0,    0,    0,  189,  399,  399,    0,    0,    0,  400,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  401,  401,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  402,  190,    0,    0,    0,    0,    0,    0,    0,
	  189,  403,  403,    0,    0,    0,  404,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  405,  405,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  406,  406,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  407,  407,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  408,  408,    0,
	    0,    0,    0,    0,    0,    0,  189,  409,  409,    0,    0,    0,
	  410,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  411,  411,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  412,  412,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  413,
	  413,    0,    0,    0,    0,    0,    0,    0,  189,  414,  414,    0,
	    0,    0,  415,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  416,  416,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  417,  417,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  418,  418,    0,    0,    0,    0,    0,    0,    0,  189,  419,
	  419,    0,    0,    0,  420,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  421,  422,  421,  422,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  423,  423,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  424,  424,    0,    0,    0,    0,    0,
	    0,    0,  189,  425,  425,    0,    0,    0,  426,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  427,
	  427,    0,    0,    0,    0,    0,    0,    0,  189,  428,  428,    0,
	    0,    0,  429,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  430,  431,  430,  431,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  432,
	  432,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  433,  433,    0,    0,    0,    0,    0,    0,    0,
	  189,  434,  434,    0,    0,    0,  435,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  436,  436,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  437,  438,  437,  438,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  439,  439,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  440,
	  440,    0,    0,    0,    0,    0,    0,    0,  189,  441,  441,    0,
	    0,    0,  442,    0,    0,    0,    0,    0,    0,    0,  189,  443,
	  443,  444,    0,  444,  193,  444,  445,    0,    0,  194,  316,  317,
	  316,  446,    0,    0,  318,  316,  317,  316,  447,    0,    0,  318,
	  316,  317,  316,  448,    0,    0,  318,  316,  317,  316,  449,  449,
	    0,    0,  318,  316,  317,  316,  450,  450,    0,    0,  318,  316,
	  317,  316,  451,  451,    0,    0,  318,  316,  317,  316,  452,  452,
	    0,    0,  318,  316,  317,  316,  453,  453,    0,    0,  318,  316,
	  317,  316,  454,  454,    0,    0,  318,  316,  317,  316,  455,  455,
	    0,    0,  318,  316,  317,  316,  456,  456,    0,    0,  318,  457,
	  458,  457,    0,    0,  318,  188,  188,    0,    0,    0,  190,  459,
	  459,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  460,  460,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  461,  461,    0,    0,    0,
	    0,    0,    0,    0,  189,  462,  462,    0,    0,    0,  463,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  464,  464,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  465,  465,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  466,  466,    0,
	    0,    0,    0,    0,    0,    0,  189,  467,  467,    0,    0,    0,
	  468,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  469,  469,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  470,  470,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  471,
	  471,    0,    0,    0,    0,    0,    0,    0,  189,  472,  472,    0,
	    0,    0,  473,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  474,  474,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  475,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  476,  477,  478,  479,  476,  477,  478,  479,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  480,  481,
	  480,  481,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  482,  482,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  483,  483,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  484,  484,    0,    0,    0,    0,    0,    0,    0,  189,  485,  485,
	    0,    0,    0,  486,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  487,  487,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  488,  488,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  489,  489,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  490,  490,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  491,  491,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  492,  492,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,  493,    0,  190,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  494,  494,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  495,  495,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  496,  496,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  497,  497,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  498,  498,    0,    0,    0,    0,    0,    0,    0,  189,  499,
	  499,    0,    0,    0,  500,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  501,  501,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  502,
	  502,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  503,  503,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,  504,    0,  190,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  505,  505,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  506,  506,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  507,  507,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  508,  508,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  509,  509,    0,    0,    0,    0,    0,    0,    0,  189,
	  510,  510,    0,    0,    0,  511,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  512,  512,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  513,  513,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  514,  514,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  515,  515,    0,    0,
	    0,    0,    0,    0,    0,  189,  516,  516,    0,    0,    0,  517,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  518,  518,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  519,  519,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  520,  520,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  521,  521,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  522,  522,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  523,  523,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  524,  524,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  525,  525,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  526,  526,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	  527,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  528,  528,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  529,  529,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  530,  530,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  531,  531,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  532,  532,    0,
	    0,    0,    0,    0,    0,    0,  189,  533,  533,    0,    0,    0,
	  534,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  535,  535,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  536,  536,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  537,
	  537,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,  538,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  539,  539,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  540,  540,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  541,  541,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  542,  542,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  543,  543,
	    0,    0,    0,    0,    0,    0,    0,  189,  544,  544,    0,    0,
	    0,  545,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  546,  547,  548,  546,  547,  548,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  549,  549,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  550,  550,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  551,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  552,
	  552,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  553,  553,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  554,  554,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  555,
	  555,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  556,  556,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  557,  557,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  558,
	  558,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  559,  559,    0,    0,    0,    0,    0,    0,    0,
	  189,  560,  560,    0,    0,    0,  561,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  562,  562,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  563,  563,    0,    0,    0,    0,    0,    0,    0,  189,  564,
	  564,    0,    0,    0,  565,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  566,  566,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  567,
	  567,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  568,  568,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  569,  569,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  570,
	  570,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  571,  571,    0,    0,    0,    0,    0,    0,    0,
	  189,  572,  572,    0,    0,    0,  573,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  574,  574,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  575,  575,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,  576,    0,  190,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  577,  577,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  578,  578,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  579,  579,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  580,  580,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  581,  581,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  582,  582,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  583,  583,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  584,  584,    0,    0,    0,    0,    0,    0,    0,  189,  585,  585,
	    0,    0,    0,  586,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  587,  190,  588,  588,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  589,
	  589,    0,    0,    0,    0,    0,    0,    0,  189,  590,  590,    0,
	    0,    0,  591,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  592,  593,  592,  593,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  594,
	  594,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  595,  595,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  596,  596,    0,    0,    0,
	    0,    0,    0,    0,  189,  597,  597,    0,    0,    0,  598,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  599,  599,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  600,  600,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  601,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  602,  602,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  603,  603,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  604,  604,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  605,  605,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  606,  607,  606,  607,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  608,  608,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  609,  609,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  610,  610,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  611,  611,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  612,  612,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  613,  613,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  614,  614,
	    0,    0,    0,    0,    0,    0,    0,  189,  615,  615,    0,    0,
	    0,  616,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  617,  617,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  618,  618,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  619,  619,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  620,  620,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  621,  621,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  622,  622,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  623,  623,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  624,  624,    0,    0,
	    0,    0,    0,    0,    0,  189,  625,  625,    0,    0,    0,  626,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  627,  628,  627,  628,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  629,  629,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  630,  630,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  631,  631,    0,    0,    0,    0,    0,    0,
	    0,  189,  632,  632,    0,    0,    0,  633,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  634,  635,
	  634,  635,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  636,  637,  636,  637,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  638,  638,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  639,  639,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  640,  640,    0,    0,    0,    0,
	    0,    0,    0,  189,  641,  641,    0,    0,    0,  642,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  643,  643,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  644,  644,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  645,  645,    0,    0,
	    0,    0,    0,    0,    0,  189,  646,  646,    0,    0,    0,  647,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  648,  648,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  649,  649,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  650,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  651,  651,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  652,  652,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  653,  653,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  654,  654,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  655,  655,    0,    0,    0,    0,    0,
	    0,    0,  189,  656,  656,    0,    0,    0,  657,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  658,
	  659,  658,  659,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  660,  661,  660,  661,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  662,
	  662,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  663,  663,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  664,  664,    0,    0,    0,
	    0,    0,    0,    0,  189,  665,  665,    0,    0,    0,  666,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  667,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  668,  668,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  669,  669,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  670,  670,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  671,  671,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  672,  672,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  673,  673,    0,    0,    0,    0,    0,    0,    0,  189,  674,  674,
	    0,    0,    0,  675,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  676,  676,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  677,  677,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  678,  678,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  679,  679,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  680,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  681,  681,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  682,  682,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  683,  683,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  684,  684,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  685,  685,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  686,  686,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  687,  687,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  688,  688,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  689,  689,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  690,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  691,  691,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  692,  692,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  693,  693,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  694,  694,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  695,  695,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  696,  696,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  697,  697,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  698,  698,    0,    0,
	    0,    0,    0,    0,    0,  189,  699,  699,    0,    0,    0,  700,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  701,  702,  701,  702,    0,    0,    0,    0,    0,    0,
	    0,  189,  703,  703,    0,    0,    0,  704,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  705,  705,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  706,  707,  706,  707,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  708,  708,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  709,  709,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  710,  710,    0,    0,    0,    0,    0,    0,
	    0,  189,  711,  711,    0,    0,    0,  712,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  713,  713,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  714,  714,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  715,  715,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  716,  716,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	  717,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  718,  718,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  719,  719,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  720,  720,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  721,  721,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  722,  722,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  723,  723,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  724,  724,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  725,  725,    0,
	    0,    0,    0,    0,    0,    0,  189,  726,  726,    0,    0,    0,
	  727,    0,    0,    0,    0,    0,    0,    0,  189,  728,  728,  729,
	    0,  729,  193,  729,  730,  730,    0,    0,  194,  316,  317,  316,
	  731,  731,    0,    0,  318,  316,  317,  316,  732,  732,    0,    0,
	  318,  316,  317,  316,  733,  733,    0,    0,  318,  316,  317,  316,
	  734,  734,    0,    0,  318,  316,  317,  316,  735,  735,    0,    0,
	  318,  316,  317,  316,  736,  736,    0,    0,  318,  737,  738,  737,
	    0,    0,  318,  188,  188,    0,    0,    0,  190,  739,  740,  739,
	  740,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  741,  741,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  742,  742,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  743,
	  743,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  744,  744,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  745,  745,    0,    0,    0,
	    0,    0,    0,    0,  189,  746,  746,    0,    0,    0,  747,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  748,  748,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  749,  749,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  750,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  751,  751,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  752,  752,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  753,  753,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  754,  754,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  755,  755,    0,    0,    0,    0,    0,    0,
	    0,  189,  756,  756,    0,    0,    0,  757,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  758,  759,
	  758,  759,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  760,  760,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  761,  761,    0,    0,
	    0,    0,    0,    0,    0,  189,  762,  762,    0,    0,    0,  763,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  764,  764,    0,    0,    0,    0,    0,    0,    0,  189,
	  765,  765,    0,    0,    0,  766,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  767,  768,  767,  768,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  769,  769,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  770,  770,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  771,  771,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  772,  772,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  773,  773,    0,    0,    0,    0,
	    0,    0,    0,  189,  774,  774,    0,    0,    0,  775,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  776,  776,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,  777,    0,  190,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  778,  778,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  779,
	  779,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  780,  780,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  781,  781,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  782,
	  782,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  783,  783,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  784,  784,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  785,
	  785,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  786,  786,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  787,  787,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  788,
	  788,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  789,  789,    0,    0,    0,    0,    0,    0,    0,
	  189,  790,  790,    0,    0,    0,  791,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  792,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  793,  794,  795,  796,  797,  798,  793,  794,  795,  796,  797,  798,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  799,  799,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  800,  800,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  801,  801,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  802,  802,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  803,  803,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  804,  804,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	  805,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  806,  806,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  807,  807,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  808,  808,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  809,  809,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  810,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  811,  811,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  812,  812,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  813,  813,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  814,  814,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  815,  815,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  816,  816,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  817,  817,    0,    0,    0,    0,    0,    0,    0,  189,  818,  818,
	    0,    0,    0,  819,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  820,  820,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  821,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  822,  822,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  823,  823,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  824,  824,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  825,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  826,  826,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  827,  827,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  828,  828,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  829,  829,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  830,  830,    0,    0,
	    0,    0,    0,    0,    0,  189,  831,  831,    0,    0,    0,  832,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  833,  834,  833,  834,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  835,  835,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  836,  836,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  837,  837,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  838,  838,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  839,  839,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  840,  840,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  841,  841,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  842,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  843,  844,  843,  844,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  845,  845,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  846,  846,    0,    0,    0,    0,    0,    0,    0,  189,  847,
	  847,    0,    0,    0,  848,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  849,  849,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  850
	};
};
private static short[] init__http_indicies_1()
{
	return new short [] {
	  850,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  851,  851,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  852,  852,    0,    0,    0,
	    0,    0,    0,    0,  189,  853,  853,    0,    0,    0,  854,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  855,  855,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  856,  856,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  857,  857,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  858,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  859,  859,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  860,  860,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  861,  861,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  862,  862,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  863,  863,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  864,  864,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  865,  865,    0,    0,    0,    0,    0,    0,
	    0,  189,  866,  866,    0,    0,    0,  867,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  868,  868,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  869,  869,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  870,  870,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  871,  871,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  872,  872,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  873,  873,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  874,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  875,  875,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  876,  876,    0,    0,    0,    0,    0,
	    0,    0,  189,  877,  877,    0,    0,    0,  878,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  879,
	  879,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  880,  880,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  881,  881,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  882,
	  882,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  883,  883,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  884,  884,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  885,
	  885,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  886,  886,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,  887,    0,  190,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  888,  888,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  889,  889,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  890,  890,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  891,  891,
	    0,    0,    0,    0,    0,    0,    0,  189,  892,  892,    0,    0,
	    0,  893,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  894,  894,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  895,  895,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  896,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  897,  897,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  898,  898,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  899,
	  899,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  900,  900,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  901,  901,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  902,
	  902,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  903,  903,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  904,  904,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  905,
	  905,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  906,  906,    0,    0,    0,    0,    0,    0,    0,
	  189,  907,  907,    0,    0,    0,  908,    0,    0,    0,    0,    0,
	    0,    0,  189,  909,  910,  910,    0,  911,  911,    0,  912,  912,
	    0,  913,  913,    0,  914,    0,  915,    0,  916,  915,    0,  917,
	    0,  918,  917,    0,  919,  920,    0,  921,    0,  922,    0,  923,
	    0,  924,    0,  925,    0,  926,    0,  927,    0,  929,  930,  930,
	  930,  928,  931,  932,  932,  932,  928,  933,  934,  932,  932,  932,
	  928,  935,    0,  936,  937,    0,  938,    0,  939,  930,  930,  930,
	  928,  940,  941,  942,  932,  932,  932,  928,  943,    0,  944,    0,
	    0,  945,  946,    0,  947,    0,    0,  948,  949,    0,  950,    0,
	    0,  948,  940,    0,    0,  942,  933,    0,    0,  934,    1,    2,
	    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,   14,
	    0,    0,  951,    0,  952,    0
	};
}

private static final short [] combine__http_indicies() {
	short [] combined = new short [ 9150 ];
	System.arraycopy ( init__http_indicies_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_indicies_1(), 0, combined, 8184, 966 );
	return combined;
}
private static final short [] _http_indicies = combine__http_indicies();
private static short[] init__http_trans_targs_0()
{
	return new short [] {
	    0,    2,    4,   17,   23,   26,   30,   34,   60,   66,   73,   95,
	  101,  110,  115,    3,    2,    4,   17,   23,   26,   30,   34,   60,
	   66,   73,   95,  101,  110,  115,    5,  709,    6,    7,    8,    9,
	   10,   11,   12,   12,   13,   14,  700,   13,   15,   16,  130,  135,
	  189,  290,  296,  323,  327,  331,  383,  393,  416,  428,  461,  485,
	  523,  554,  570,  576,  598,  733,   18,   19,   20,   21,   22,   12,
	   24,   25,   12,   27,   28,   29,   12,   31,   32,   33,   12,   35,
	   39,   51,   54,   36,   37,   38,   12,   40,   48,   41,   42,   43,
	   44,   45,   46,   47,   12,   49,   50,   12,   52,   53,   12,   55,
	   56,   57,   58,   59,   12,   61,   62,   63,   64,   65,   12,   67,
	   68,   69,   70,   71,   72,   12,   74,   78,   81,   93,   75,   76,
	   77,   12,   79,   80,   12,   82,   83,   84,   88,   85,   86,   87,
	   12,   89,   90,   91,   92,   12,   94,   12,   96,   97,   98,   99,
	  100,   12,  102,  103,  104,  105,  106,  107,  108,  109,   12,  111,
	  112,  113,  114,   12,  116,  117,  121,  118,  119,  120,   12,  122,
	  123,  124,  125,  126,  127,  128,  129,   12,  131,  130,  132,  131,
	  132,  133,  213,  134,   16,  130,  135,  189,  290,  296,  323,  327,
	  331,  383,  393,  416,  428,  461,  485,  523,  554,  570,  576,  598,
	  136,  171,  173,  177,  137,  138,  139,  140,  131,  141,  132,  142,
	  149,  157,  165,  143,  144,  145,  146,  147,  148,  131,  132,  150,
	  151,  152,  153,  154,  155,  156,  131,  132,  158,  159,  160,  161,
	  162,  163,  164,  131,  132,  166,  167,  168,  169,  170,  131,  132,
	  172,  131,  132,  174,  175,  176,  131,  132,  178,  179,  180,  181,
	  182,  183,  184,  185,  186,  187,  188,  131,  132,  190,  202,  191,
	  192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  131,  132,
	  203,  286,  204,  227,  205,  206,  207,  208,  209,  210,  211,  212,
	  211,  212,  215,  220,  214,  133,  213,  214,  133,  216,  217,  218,
	  219,  214,  133,  221,  222,  223,  224,  225,  226,  214,  133,  228,
	  229,  230,  231,  232,  243,  251,  274,  277,  282,  233,  234,  235,
	  236,  237,  238,  239,  240,  241,  242,  131,  132,  244,  245,  246,
	  247,  248,  249,  250,  131,  132,  252,  259,  267,  253,  254,  255,
	  256,  257,  258,  131,  132,  260,  261,  262,  263,  264,  265,  264,
	  265,    0,  133,  213,  266,  214,  133,  213,  266,  268,  269,  270,
	  271,  272,  273,  131,  132,  275,  276,  131,  132,  278,  279,  280,
	  281,  131,  132,  283,  284,  285,  131,  132,  287,  288,  289,  131,
	  132,  291,  294,  292,  293,  131,  132,  295,  131,  132,  297,  300,
	  298,  299,  131,  132,  301,  302,  319,  303,  304,  305,  306,  305,
	  306,  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
	  318,  214,  133,  320,  321,  322,  131,  132,  324,  325,  326,  131,
	  132,  328,  329,  330,  131,  132,  332,  333,  334,  352,  362,  367,
	  335,  339,  336,  337,  338,  131,  132,  340,  341,  342,  343,  344,
	  345,  346,  347,  348,  349,  350,  351,  131,  132,  353,  354,  355,
	  356,  357,  358,  359,  360,  361,  131,  132,  363,  364,  365,  366,
	  131,  132,  368,  369,  370,  371,  372,  373,  374,  375,  376,  377,
	  378,  379,  380,  381,  382,  131,  132,  384,  385,  386,  387,  388,
	  389,  390,  391,  392,  131,  132,  394,  406,  409,  395,  396,  397,
	  398,  399,  400,  401,  402,  403,  404,  405,  131,  132,  407,  408,
	  131,  132,  410,  411,  412,  413,  414,  415,  131,  132,  417,  418,
	  419,  420,  421,  422,  423,  424,  425,  426,  427,  131,  132,  429,
	  431,  430,  131,  132,  432,  436,  433,  434,  435,  131,  132,  437,
	  438,  439,  440,  441,  442,  443,  444,  452,  445,  446,  447,  448,
	  449,  450,  451,  131,  132,  453,  454,  455,  456,  457,  458,  459,
	  460,  131,  132,  462,  466,  463,  464,  465,  131,  132,  467,  476,
	  468,  472,  469,  470,  471,  131,  132,  473,  474,  475,  131,  132,
	  477,  478,  479,  480,  481,  482,  483,  484,  131,  132,  486,  499,
	  487,  491,  488,  489,  490,  131,  132,  492,  493,  494,  495,  496,
	  497,  498,  131,  132,  500,  501,  502,  503,  504,  505,  506,  507,
	  508,  509,  510,  511,  512,  513,  514,  515,  516,  517,  518,  519,
	  520,  521,  522,  131,  132,  524,  525,  131,  132,  526,  527,  531,
	  528,  529,  530,  131,  132,  532,  533,  534,  535,  536,  537,  538,
	  539,  540,  541,  542,  543,  544,  545,  546,  545,  546,  547,  548,
	  549,  550,  551,  552,  553,  214,  133,  555,  561,  556,  557,  558,
	  559,  560,  131,  132,  562,  563,  564,  565,  566,  567,  568,  569,
	  131,  132,  571,  574,  572,  573,  131,  132,  575,  131,  132,  577,
	  583,  578,  579,  580,  581,  582,  131,  132,  584,  585,  586,  587,
	  588,  589,  590,  591,  592,  593,  594,  595,  596,  597,  131,  132,
	  599,  600,  620,  632,  662,  672,  686,  601,  602,  603,  604,  605,
	  606,  607,  608,  609,  610,  611,  612,  613,  614,  615,  616,  617,
	  618,  619,  131,  132,  621,  622,  623,  624,  625,  626,  627,  628,
	  629,  630,  631,  131,  132,  633,  650,  634,  635,  636,  637,  638,
	  639,  640,  641,  642,  645,  643,  644,  131,  132,  646,  647,  648,
	  649,  131,  132,  651,  652,  653,  654,  655,  656,  657,  658,  659,
	  660,  661,  131,  132,  663,  664,  665,  666,  667,  668,  669,  670,
	  671,  131,  132,  673,  674,  675,  676,  677,  678,  679,  680,  681,
	  682,  683,  684,  685,  131,  132,  687,  688,  689,  690,  691,  692,
	  693,  694,  695,  696,  697,  698,  699,  131,  132,  700,  701,  702,
	  703,  704,  705,  706,  707,  708,   14,  710,  715,  711,  712,  713,
	  714,   12,  716,   12,    0,  718,  719,  718,  719,  720,  732,  721,
	  722,  721,  723,  724,  725,  724,  731,  726,  727,  728,  734,  729,
	  728,  730,  727,  735,  736
	};
}

private static final short _http_trans_targs[] = init__http_trans_targs_0();


private static short[] init__http_trans_actions_0()
{
	return new short [] {
	   15,  131,  131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
	  131,  131,  131,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   68,   13,   98,  101,  101,   13,   13,   13,  104,  104,
	  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
	  104,  104,  104,  104,  104,  134,   13,   13,   13,   13,   13,   29,
	   13,   13,   20,   13,   13,   13,   17,   13,   13,   13,   44,   13,
	   13,   13,   13,   13,   13,   13,   71,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   65,   13,   13,   47,   13,   13,   50,   13,
	   13,   13,   13,   13,   74,   13,   13,   13,   13,   13,   77,   13,
	   13,   13,   13,   13,   13,   35,   13,   13,   13,   13,   13,   13,
	   13,   86,   13,   13,   23,   13,   13,   13,   13,   13,   13,   13,
	   53,   13,   13,   13,   13,   56,   13,   26,   13,   13,   13,   13,
	   13,   62,   13,   13,   13,   13,   13,   13,   13,   13,   80,   13,
	   13,   13,   13,   38,   13,   13,   13,   13,   13,   13,   59,   13,
	   13,   13,   13,   13,   13,   13,   13,   83,  107,   13,  107,   13,
	   13,  435,  110,   13,  119,  403,  403,  403,  403,  403,  403,  403,
	  403,  403,  403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
	   13,   13,   13,   13,   13,   13,   13,   13,  143,   13,  143,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,  147,  147,   13,
	   13,   13,   13,   13,   13,   13,  151,  151,   13,   13,   13,   13,
	   13,   13,   13,  155,  155,   13,   13,   13,   13,   13,  159,  159,
	   13,  163,  163,   13,   13,   13,  167,  167,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  171,  171,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  175,  175,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  179,  179,
	   13,   13,  110,  110,  113,  399,   13,   13,  116,   13,   13,   13,
	   13,  423,  450,   13,   13,   13,   13,   13,   13,  427,  455,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  203,  203,   13,   13,   13,
	   13,   13,   13,   13,  183,  183,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  187,  187,   13,   13,   13,   13,  191,  191,   13,
	   13,  128,  465,  411,  407,  415,  440,  125,  122,   13,   13,   13,
	   13,   13,   13,  195,  195,   13,   13,  199,  199,   13,   13,   13,
	   13,  207,  207,   13,   13,   13,  211,  211,   13,   13,   13,  215,
	  215,   13,   13,   13,   13,  219,  219,   13,  223,  223,   13,   13,
	   13,   13,  227,  227,   13,   13,   13,   13,   13,  231,  231,   13,
	   13,  110,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,  431,  460,   13,   13,   13,  235,  235,   13,   13,   13,  239,
	  239,   13,   13,   13,  243,  243,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,  247,  247,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  251,  251,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,  255,  255,   13,   13,   13,   13,
	  259,  259,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,  263,  263,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  267,  267,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,  271,  271,   13,   13,
	  275,  275,   13,   13,   13,   13,   13,   13,  279,  279,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,  283,  283,   13,
	   13,   13,  287,  287,   13,   13,   13,   13,   13,  291,  291,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  295,  295,   13,   13,   13,   13,   13,   13,   13,
	   13,  299,  299,   13,   13,   13,   13,   13,  303,  303,   13,   13,
	   13,   13,   13,   13,   13,  307,  307,   13,   13,   13,  311,  311,
	   13,   13,   13,   13,   13,   13,   13,   13,  315,  315,   13,   13,
	   13,   13,   13,   13,   13,  319,  319,   13,   13,   13,   13,   13,
	   13,   13,  323,  323,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  327,  327,   13,   13,  331,  331,   13,   13,   13,
	   13,   13,   13,  335,  335,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,  339,  339,   13,   13,  110,   13,
	   13,   13,   13,   13,   13,  419,  445,   13,   13,   13,   13,   13,
	   13,   13,  343,  343,   13,   13,   13,   13,   13,   13,   13,   13,
	  347,  347,   13,   13,   13,   13,  351,  351,   13,  355,  355,   13,
	   13,   13,   13,   13,   13,   13,  359,  359,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  363,  363,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  367,  367,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  371,  371,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  375,  375,   13,   13,   13,
	   13,  379,  379,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  383,  383,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,  387,  387,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  391,  391,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  395,  395,   13,   89,   13,
	   13,   13,   13,   92,   13,   95,   13,   13,   13,   13,   13,   13,
	   13,   32,   13,   41,  140,  137,  137,    9,    9,    0,    0,    0,
	    0,    3,    0,  137,    0,    9,    0,    0,    7,    7,    0,    0,
	    0,    0,    0,    1,    5
	};
}

private static final short _http_trans_actions[] = init__http_trans_actions_0();


private static short[] init__http_to_state_actions_0()
{
	return new short [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,   11,    0,    0
	};
}

private static final short _http_to_state_actions[] = init__http_to_state_actions_0();


private static short[] init__http_eof_actions_0()
{
	return new short [] {
	    0,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  128,  128,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,  140,  140,  140,
	   15,   15,   15,  140,  140,   15,   15,   15,   15,   15,   15,   15,
	   15,    0,    0,    0,    0
	};
}

private static final short _http_eof_actions[] = init__http_eof_actions_0();


static final int http_start = 1;
static final int http_first_final = 733;
static final int http_error = 0;

static final int http_en_chunked_body = 717;
static final int http_en_identity_body = 735;
static final int http_en_upgraded = 736;
static final int http_en_main = 1;


// line 540 "src/rl/picard/http/HttpParser.rl"

    // Variable used by ragel to represent the current state of the
    // parser. This must be an integer and it should persist across
    // invocations of the machine when the data is broken into blocks
    // that are processed independently. This variable may be modified
    // from outside the execution loop, but not from within.
    private int cs;

    // Stores some miscellaneous parser state such as whether or not
    // the body is chunked or not, whether or not the connection is
    // keep alive or upgraded, etc...
    private int flags;

    // The number of bytes read while parsing the HTTP message
    // head. This is to protect against a possible attack where
    // somebody sends unbounded HTTP message heads and causes out of
    // memory errors.
    private int hread;

    // When starting to parse an HTTP message head, an object is
    // requested from the callback. This object should be the
    // structure that contains HTTP headers for the message being
    // processed.
    private Object headers;

    // The HTTP protocol version used by the current message being
    // parsed. The major and minor numbers are broken up since they
    // will be moved into a clojure vector.
    private short httpMajor;
    private short httpMinor;

    // Tracks whether the current parser instance is parsing an HTTP
    // request or an HTTP response. Even though the parser can be
    // reused to parse multiple messages, each message must be of the
    // same type. In other words, if the first message a parser
    // instance parses is an HTTP request, then all subsequent
    // messages parsed by the same instance must also be HTTP
    // requests.
    private MessageType type;

    // Tracks the HTTP method of the currently parsed request. If the
    // HTTP message being currently parsed is a response, then this
    // will be nil.
    private HttpMethod method;

    // The response status if the current message being parsed is a
    // response.
    private short status;

    // Tracks the various message information
    private URI          uri;
    private ChunkedValue uriMark;
    private String       headerName;
    private ChunkedValue headerNameMark;
    private HeaderValue  headerValue;

    // Track the content length of the HTTP message
    private long contentLength;

    // The object that gets called on various parse events.
    private HttpParserCallback callback;

    public HttpParser(HttpParserCallback callback) {
        
// line 2743 "src/jvm/picard/http/HttpParser.java"
	{
	cs = http_start;
	}

// line 604 "src/rl/picard/http/HttpParser.rl"

        this.callback = callback;
        reset();
    }

    public boolean isHttp11() {
        return httpMajor == 1 && httpMinor == 1;
    }

    public boolean isRequest() {
        return type == MessageType.REQUEST;
    }

    public boolean isResponse() {
        return type == MessageType.RESPONSE;
    }

    public boolean isParsingHead() {
        return ( flags & PARSING_HEAD ) == PARSING_HEAD;
    }

    public boolean hasBody() {
        return isIdentityBody() || isChunkedBody();
    }

    public boolean isIdentityBody() {
        return ( flags & IDENTITY_BODY ) == IDENTITY_BODY;
    }

    public boolean isChunkedBody() {
        return ( flags & CHUNKED_BODY ) == CHUNKED_BODY;
    }

    public boolean isKeepAlive() {
        return ( flags & KEEP_ALIVE ) == KEEP_ALIVE;
    }

    public boolean isUpgrade() {
        return ( flags & UPGRADE ) == UPGRADE || method == HttpMethod.CONNECT;
    }

    public boolean isExpectingContinue() {
        return ( flags & EXPECT_CONTINUE ) == EXPECT_CONTINUE;
    }

    public boolean isError() {
        return ( flags & ERROR ) == ERROR;
    }

    public HttpMethod getMethod() {
        return method;
    }

    public short getHttpMajor() {
        return httpMajor;
    }

    public short getHttpMinor() {
        return httpMinor;
    }

    public String getPathInfo() {
        String pathInfo = uri.getPath();

        if (pathInfo == null) {
            return SLASH;
        }
        else if (pathInfo.equals(EMPTY_STRING)) {
            return SLASH;
        }

        return pathInfo;
    }

    public String getQueryString() {
        String qs = uri.getQuery();

        if (qs == null) {
            return EMPTY_STRING;
        }

        return qs;
    }

    public int execute(String str) {
        ByteBuffer buf = ByteBuffer.wrap(str.getBytes());
        return execute(buf);
    }

    public int execute(ByteBuffer buf) {
        // First make sure that the parser isn't in an error state
        if (isError()) {
            throw new HttpParserException("The parser is in an error state.");
        }

        // Setup ragel variables
        int p   = buf.position();
        int pe  = buf.limit();
        int eof = pe + 1;

        if (isParsingHead()) {
            bridge(buf, uriMark);
            bridge(buf, headerNameMark);
            bridge(buf, headerValue);
        }

        try {
            parseLoop: {
                
// line 713 "src/rl/picard/http/HttpParser.rl"
                
// line 2860 "src/jvm/picard/http/HttpParser.java"
	{
	int _klen;
	int _trans = 0;
	int _widec;
	int _acts;
	int _nacts;
	int _keys;
	int _goto_targ = 0;

	_goto: while (true) {
	switch ( _goto_targ ) {
	case 0:
	if ( p == pe ) {
		_goto_targ = 4;
		continue _goto;
	}
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
case 1:
	_widec = ( buf.get(p));
	_keys = _http_cond_offsets[cs]*2
;	_klen = _http_cond_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys
;		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_cond_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_cond_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				switch ( _http_cond_spaces[_http_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = 65536 + (( buf.get(p)) - 0);
		if ( 
// line 437 "src/rl/picard/http/HttpParser.rl"

            contentLength > 0
         ) _widec += 65536;
		break;
	}
				}
				break;
			}
		}
	}

	_match: do {
	_keys = _http_key_offsets[cs];
	_trans = _http_index_offsets[cs];
	_klen = _http_single_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + _klen - 1;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 1;
			else if ( _widec > _http_trans_keys[_mid] )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				break _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _http_range_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_trans_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				break _match;
			}
		}
		_trans += _klen;
	}
	} while (false);

	_trans = _http_indicies[_trans];
	cs = _http_trans_targs[_trans];

	if ( _http_trans_actions[_trans] != 0 ) {
		_acts = _http_trans_actions[_trans];
		_nacts = (int) _http_actions[_acts++];
		while ( _nacts-- > 0 )
	{
			switch ( _http_actions[_acts++] )
			{
	case 0:
// line 152 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.HEAD;        }
	break;
	case 1:
// line 153 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.GET;         }
	break;
	case 2:
// line 154 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.POST;        }
	break;
	case 3:
// line 155 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PUT;         }
	break;
	case 4:
// line 156 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.DELETE;      }
	break;
	case 5:
// line 157 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CONNECT;     }
	break;
	case 6:
// line 158 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.OPTIONS;     }
	break;
	case 7:
// line 159 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.TRACE;       }
	break;
	case 8:
// line 160 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.COPY;        }
	break;
	case 9:
// line 161 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.LOCK;        }
	break;
	case 10:
// line 162 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKCOL;       }
	break;
	case 11:
// line 163 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MOVE;        }
	break;
	case 12:
// line 164 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPFIND;    }
	break;
	case 13:
// line 165 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPPATCH;   }
	break;
	case 14:
// line 166 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNLOCK;      }
	break;
	case 15:
// line 167 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.REPORT;      }
	break;
	case 16:
// line 168 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKACTIVITY;  }
	break;
	case 17:
// line 169 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CHECKOUT;    }
	break;
	case 18:
// line 170 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MERGE;       }
	break;
	case 19:
// line 171 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MSEARCH;     }
	break;
	case 20:
// line 172 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.NOTIFY;      }
	break;
	case 21:
// line 173 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.SUBSCRIBE;   }
	break;
	case 22:
// line 174 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNSUBSCRIBE; }
	break;
	case 23:
// line 175 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PATCH;       }
	break;
	case 24:
// line 177 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT);                    }
	break;
	case 25:
// line 178 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_CHARSET);            }
	break;
	case 26:
// line 179 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_ENCODING);           }
	break;
	case 27:
// line 180 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_LANGUAGE);           }
	break;
	case 28:
// line 181 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_RANGES);             }
	break;
	case 29:
// line 182 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AGE);                       }
	break;
	case 30:
// line 183 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ALLOW);                     }
	break;
	case 31:
// line 184 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AUTHORIZATION);             }
	break;
	case 32:
// line 185 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CACHE_CONTROL);             }
	break;
	case 33:
// line 186 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONNECTION);                }
	break;
	case 34:
// line 187 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_ENCODING);          }
	break;
	case 35:
// line 188 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LANGUAGE);          }
	break;
	case 36:
// line 189 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LENGTH);            }
	break;
	case 37:
// line 190 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LOCATION);          }
	break;
	case 38:
// line 191 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_MD5);               }
	break;
	case 39:
// line 192 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_DISPOSITION);       }
	break;
	case 40:
// line 193 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_RANGE);             }
	break;
	case 41:
// line 194 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_TYPE);              }
	break;
	case 42:
// line 195 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_COOKIE);                    }
	break;
	case 43:
// line 196 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DATE);                      }
	break;
	case 44:
// line 197 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DNT);                       }
	break;
	case 45:
// line 198 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ETAG);                      }
	break;
	case 46:
// line 199 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPECT);                    }
	break;
	case 47:
// line 200 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPIRES);                   }
	break;
	case 48:
// line 201 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_FROM);                      }
	break;
	case 49:
// line 202 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_HOST);                      }
	break;
	case 50:
// line 203 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MATCH);                  }
	break;
	case 51:
// line 204 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MODIFIED_SINCE);         }
	break;
	case 52:
// line 205 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_NONE_MATCH);             }
	break;
	case 53:
// line 206 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_RANGE);                  }
	break;
	case 54:
// line 207 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_UNMODIFIED_SINCE);       }
	break;
	case 55:
// line 208 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_KEEP_ALIVE);                }
	break;
	case 56:
// line 209 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LAST_MODIFIED);             }
	break;
	case 57:
// line 210 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LINK);                      }
	break;
	case 58:
// line 211 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LOCATION);                  }
	break;
	case 59:
// line 212 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_MAX_FORWARDS);              }
	break;
	case 60:
// line 213 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_P3P);                       }
	break;
	case 61:
// line 214 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PRAGMA);                    }
	break;
	case 62:
// line 215 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHENTICATE);        }
	break;
	case 63:
// line 216 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHORIZATION);       }
	break;
	case 64:
// line 217 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RANGE);                     }
	break;
	case 65:
// line 218 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFERER);                   }
	break;
	case 66:
// line 219 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFRESH);                   }
	break;
	case 67:
// line 220 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RETRY_AFTER);               }
	break;
	case 68:
// line 221 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SERVER);                    }
	break;
	case 69:
// line 222 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SET_COOKIE);                }
	break;
	case 70:
// line 223 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_STRICT_TRANSPORT_SECURITY); }
	break;
	case 71:
// line 224 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TE);                        }
	break;
	case 72:
// line 225 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRAILER);                   }
	break;
	case 73:
// line 226 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRANSFER_ENCODING);         }
	break;
	case 74:
// line 227 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_UPGRADE);                   }
	break;
	case 75:
// line 228 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_USER_AGENT);                }
	break;
	case 76:
// line 229 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VARY);                      }
	break;
	case 77:
// line 230 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VIA);                       }
	break;
	case 78:
// line 231 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WARNING);                   }
	break;
	case 79:
// line 232 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WWW_AUTHENTICATE);          }
	break;
	case 80:
// line 233 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_CONTENT_TYPE_OPTIONS);    }
	break;
	case 81:
// line 234 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_DO_NOT_TRACK);            }
	break;
	case 82:
// line 235 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_FOR);           }
	break;
	case 83:
// line 236 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_PROTO);         }
	break;
	case 84:
// line 237 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FRAME_OPTIONS);           }
	break;
	case 85:
// line 238 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_POWERED_BY);              }
	break;
	case 86:
// line 239 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_REQUESTED_WITH);          }
	break;
	case 87:
// line 240 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_XSS_PROTECTION);          }
	break;
	case 88:
// line 242 "src/rl/picard/http/HttpParser.rl"
	{
            httpMinor = 0;
        }
	break;
	case 89:
// line 246 "src/rl/picard/http/HttpParser.rl"
	{
            httpMajor *= 10;
            httpMajor += ( buf.get(p)) - '0';

            if (httpMajor > 999) {
                throw new HttpParserException("The HTTP major version is invalid.");
            }
        }
	break;
	case 90:
// line 255 "src/rl/picard/http/HttpParser.rl"
	{
            httpMinor *= 10;
            httpMinor += ( buf.get(p)) - '0';

            if (httpMinor > 999) {
                throw new HttpParserException("The HTTP minor version is invalid.");
            }
        }
	break;
	case 91:
// line 264 "src/rl/picard/http/HttpParser.rl"
	{
            uriMark = new ChunkedValue(buf, p);
        }
	break;
	case 92:
// line 268 "src/rl/picard/http/HttpParser.rl"
	{
            uriMark.push(p);

            String uriStr = uriMark.materializeStr();

            try {
                uri = new URI(uriStr);
            }
            catch (URISyntaxException e) {
                throw new HttpParserException("The URI is not valid: " + uriStr);
            }

            uriMark = null;
        }
	break;
	case 93:
// line 283 "src/rl/picard/http/HttpParser.rl"
	{
            headerNameMark = new ChunkedValue(buf, p);
        }
	break;
	case 94:
// line 287 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerNameMark != null) {
                headerNameMark.push(p);

                headerName     = headerNameMark.materializeStr().toLowerCase();
                headerNameMark = null;
            }
        }
	break;
	case 95:
// line 296 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue == null) {
                headerValue = new HeaderValue(buf, p);
            }
            else {
                headerValue.startLine(buf, p);
            }
        }
	break;
	case 96:
// line 305 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.mark(p);
            }
        }
	break;
	case 97:
// line 311 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.push();
            }
        }
	break;
	case 98:
// line 317 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                callback.header(headers, headerName, headerValue.materializeStr());
                headerName  = null;
                headerValue = null;
            }
            else if (headerName != null) {
                callback.header(headers, headerName, EMPTY_STRING);
                headerName = null;
            }
        }
	break;
	case 99:
// line 329 "src/rl/picard/http/HttpParser.rl"
	{
            if (contentLength >= ALMOST_MAX_LONG) {
                throw new HttpParserException("The content-length is WAY too big");
            }

            contentLength *= 10;
            contentLength += ( buf.get(p)) - '0';
        }
	break;
	case 100:
// line 338 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 101:
// line 345 "src/rl/picard/http/HttpParser.rl"
	{
            if (isChunkedBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= IDENTITY_BODY;

            headerName  = null;
            headerValue = null;
            callback.header(headers, HDR_CONTENT_LENGTH, String.valueOf(contentLength));
        }
	break;
	case 102:
// line 357 "src/rl/picard/http/HttpParser.rl"
	{
            if (isIdentityBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= CHUNKED_BODY;

            headerName  = null;
            headerValue = null;
            callback.header(headers, HDR_TRANSFER_ENCODING, VAL_CHUNKED);
        }
	break;
	case 103:
// line 369 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= CONN_CLOSE;

            headerName  = null;
            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_CLOSE);
        }
	break;
	case 104:
// line 377 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= UPGRADE;

            headerName  = null;
            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_UPGRADE);
        }
	break;
	case 105:
// line 385 "src/rl/picard/http/HttpParser.rl"
	{
            if (isHttp11()) {
                flags |= EXPECT_CONTINUE;
            }

            headerName  = null;
            headerValue = null;
            callback.header(headers, HDR_EXPECT, VAL_100_CONTINUE);
        }
	break;
	case 106:
// line 395 "src/rl/picard/http/HttpParser.rl"
	{
            reset();

            flags  |= PARSING_HEAD;
            headers = callback.blankHeaders();
        }
	break;
	case 107:
// line 402 "src/rl/picard/http/HttpParser.rl"
	{
            // Not parsing the HTTP message head anymore
            flags ^= PARSING_HEAD;

            ByteBuffer body = null;

            if (isUpgrade()) {
                cs = 736;
            }
            else if (isIdentityBody()) {
                int remaining = buf.limit() - p;

                // If the remaining content length is present in the
                // buffer, just include it in the callback.
                if (remaining >= contentLength && !isExpectingContinue()) {
                    int toRead = (int) contentLength;
                    ++p;
                    body = slice(buf, p, p + toRead);
                    p += toRead - 1;
                    contentLength = 0;
                }
                else {
                    cs = 735;
                }
            }
            else if (isChunkedBody()) {
                cs = 717;
            }

            callback.message(this, headers, body);

            // Unset references to allow the GC to reclaim the memory
            resetHeadState();
        }
	break;
	case 108:
// line 441 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead = min(contentLength, buf.limit() - p);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;

                if (contentLength == 0) {
                    callback.body(this, null);
                }

                if (contentLength == 0) {
                    cs = 1;
                }
            }
        }
	break;
	case 109:
// line 461 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead = min(contentLength, buf.limit() - p);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;
            }
        }
	break;
	case 110:
// line 473 "src/rl/picard/http/HttpParser.rl"
	{
            int remaining = buf.limit() - p;

            if (remaining > 0) {
                callback.message(this, slice(buf, p, buf.limit()));
                break parseLoop;
            }
        }
	break;
	case 111:
// line 482 "src/rl/picard/http/HttpParser.rl"
	{
            callback.body(this, null);
        }
	break;
	case 112:
// line 486 "src/rl/picard/http/HttpParser.rl"
	{
            contentLength = 0;
        }
	break;
	case 113:
// line 490 "src/rl/picard/http/HttpParser.rl"
	{
            if (contentLength >= ALMOST_MAX_LONG_HEX) {
                throw new HttpParserException("The content-length is WAY too big");
            }

            contentLength *= 16;
            contentLength += HEX_MAP[( buf.get(p))];
        }
	break;
	case 114:
// line 499 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 116:
// line 509 "src/rl/picard/http/HttpParser.rl"
	{
            if (++hread > MAX_HEADER_SIZE) {
                throw new HttpParserException("The HTTP message head is too large");
            }
        }
	break;
	case 117:
// line 515 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3656 "src/jvm/picard/http/HttpParser.java"
			}
		}
	}

case 2:
	_acts = _http_to_state_actions[cs];
	_nacts = (int) _http_actions[_acts++];
	while ( _nacts-- > 0 ) {
		switch ( _http_actions[_acts++] ) {
	case 115:
// line 505 "src/rl/picard/http/HttpParser.rl"
	{
            cs = 1;
        }
	break;
// line 3672 "src/jvm/picard/http/HttpParser.java"
		}
	}

	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
	if ( ++p != pe ) {
		_goto_targ = 1;
		continue _goto;
	}
case 4:
	if ( p == eof )
	{
	int __acts = _http_eof_actions[cs];
	int __nacts = (int) _http_actions[__acts++];
	while ( __nacts-- > 0 ) {
		switch ( _http_actions[__acts++] ) {
	case 100:
// line 338 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 114:
// line 499 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 117:
// line 515 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3717 "src/jvm/picard/http/HttpParser.java"
		}
	}
	}

case 5:
	}
	break; }
	}

// line 714 "src/rl/picard/http/HttpParser.rl"
            }
        }
        catch (RuntimeException e) {
            flags |= ERROR;
            throw e;
        }

        return p;
    }

    private void setHeaderName(String name) {
        headerName     = name;
        headerNameMark = null;
    }

    private void bridge(ByteBuffer buf, ChunkedValue chunk) {
        if (chunk != null) {
            chunk.bridge(buf);
        }
    }

    private void reset() {
        flags         = 0;
        hread         = 0;
        status        = 0;
        httpMajor     = 0;
        httpMinor     = 9;
        contentLength = 0;
    }

    private void resetHeadState() {
        headers         = null;
        method          = null;
        uri             = null;
        uriMark         = null;
        headerName      = null;
        headerNameMark  = null;
        headerValue     = null;
    }

    private ByteBuffer slice(ByteBuffer buf, int from, int to) {
        ByteBuffer retval = buf.asReadOnlyBuffer();

        retval.position(from);
        retval.limit(to);

        return retval;
    }

    private int min(long a, int b) {
        long cappedA = Math.min((long) Integer.MAX_VALUE, a);
        return Math.min((int) cappedA, b);
    }

    private String parseErrorMsg(ByteBuffer buf, int fpc) {
        int from = Math.max(0, fpc - 35);
        int to   = Math.min(fpc + 35, buf.limit());

        ByteBuffer before = slice(buf, from, fpc);
        ByteBuffer after  = slice(buf, fpc, to);

        byte[] beforeBytes = new byte[before.remaining()];
        byte[] afterBytes  = new byte[after.remaining()];

        before.get(beforeBytes);
        after.get(afterBytes);

        return new String(beforeBytes) + "|" + new String(afterBytes);
    }
}
