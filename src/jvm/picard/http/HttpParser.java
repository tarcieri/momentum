
// line 1 "src/rl/picard/http/HttpParser.rl"
package picard.http;

import java.net.URI;
import java.net.URISyntaxException;
import clojure.lang.AFn;
import picard.core.Buffer;

/**
 * TODO:
 *   - Improve the handling of Connection header values
 *   - Handle full URIs in the request line
 *   - Possibly handle quotes in URIs (old Mozilla bug)
 */
public final class HttpParser extends AFn {
  public enum MessageType {
    REQUEST,
    RESPONSE
  }

  public enum HttpMethod {
    HEAD,
    GET,
    POST,
    PUT,
    DELETE,
    CONNECT,
    OPTIONS,
    TRACE,

    // webdav
    COPY,
    LOCK,
    MKCOL,
    MOVE,
    PROPFIND,
    PROPPATCH,
    UNLOCK,

    // subversion
    REPORT,
    MKACTIVITY,
    CHECKOUT,
    MERGE,

    // upnp
    MSEARCH,
    NOTIFY,
    SUBSCRIBE,
    UNSUBSCRIBE,

    // RFC-5789
    PATCH
  }

  public static final byte SP = (byte) 0x20; // Space
  public static final byte HT = (byte) 0x09; // Horizontal tab
  public static final String SLASH = new String("/").intern();
  public static final String EMPTY_STRING = new String("").intern();
  public static final byte[] EMPTY_BUFFER = new byte[0];
  public static final Buffer SPACE = Buffer.wrap(new byte[] { SP });

  public static final int MAX_BUFFERED = 4096;

  // Map of hexadecimal chars to their numeric value
  public static final byte[] HEX_MAP = new byte [] {
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1,
    -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
  };

  // Listing out all of the headers that we are going to use
  public static final String HDR_ACCEPT                    = "accept".intern();
  public static final String HDR_ACCEPT_CHARSET            = "accept-charset".intern();
  public static final String HDR_ACCEPT_ENCODING           = "accept-encoding".intern();
  public static final String HDR_ACCEPT_LANGUAGE           = "accept-language".intern();
  public static final String HDR_ACCEPT_RANGES             = "accept-ranges".intern();
  public static final String HDR_AGE                       = "age".intern();
  public static final String HDR_ALLOW                     = "allow".intern();
  public static final String HDR_AUTHORIZATION             = "authorization".intern();
  public static final String HDR_CACHE_CONTROL             = "cache-control".intern();
  public static final String HDR_CONNECTION                = "connection".intern();
  public static final String HDR_CONTENT_ENCODING          = "content-encoding".intern();
  public static final String HDR_CONTENT_LANGUAGE          = "content-language".intern();
  public static final String HDR_CONTENT_LENGTH            = "content-length".intern();
  public static final String HDR_CONTENT_LOCATION          = "content-location".intern();
  public static final String HDR_CONTENT_MD5               = "content-md5".intern();
  public static final String HDR_CONTENT_DISPOSITION       = "content-disposition".intern();
  public static final String HDR_CONTENT_RANGE             = "content-range".intern();
  public static final String HDR_CONTENT_TYPE              = "content-type".intern();
  public static final String HDR_COOKIE                    = "cookie".intern();
  public static final String HDR_DATE                      = "date".intern();
  public static final String HDR_DNT                       = "dnt".intern();
  public static final String HDR_ETAG                      = "etag".intern();
  public static final String HDR_EXPECT                    = "expect".intern();
  public static final String HDR_EXPIRES                   = "expires".intern();
  public static final String HDR_FROM                      = "from".intern();
  public static final String HDR_HOST                      = "host".intern();
  public static final String HDR_IF_MATCH                  = "if-match".intern();
  public static final String HDR_IF_MODIFIED_SINCE         = "if-modified-since".intern();
  public static final String HDR_IF_NONE_MATCH             = "if-none-match".intern();
  public static final String HDR_IF_RANGE                  = "if-range".intern();
  public static final String HDR_IF_UNMODIFIED_SINCE       = "if-unmodified-since".intern();
  public static final String HDR_KEEP_ALIVE                = "keep-alive".intern();
  public static final String HDR_LAST_MODIFIED             = "last-modified".intern();
  public static final String HDR_LINK                      = "link".intern();
  public static final String HDR_LOCATION                  = "location".intern();
  public static final String HDR_MAX_FORWARDS              = "max-forwards".intern();
  public static final String HDR_P3P                       = "p3p".intern();
  public static final String HDR_PRAGMA                    = "pragma".intern();
  public static final String HDR_PROXY_AUTHENTICATE        = "proxy-authenticate".intern();
  public static final String HDR_PROXY_AUTHORIZATION       = "proxy-authorization".intern();
  public static final String HDR_RANGE                     = "range".intern();
  public static final String HDR_REFERER                   = "referer".intern();
  public static final String HDR_REFRESH                   = "refresh".intern();
  public static final String HDR_RETRY_AFTER               = "retry-after".intern();
  public static final String HDR_SERVER                    = "server".intern();
  public static final String HDR_SET_COOKIE                = "set-cookie".intern();
  public static final String HDR_STRICT_TRANSPORT_SECURITY = "strict-transport-security".intern();
  public static final String HDR_TE                        = "te".intern();
  public static final String HDR_TRAILER                   = "trailer".intern();
  public static final String HDR_TRANSFER_ENCODING         = "transfer-encoding".intern();
  public static final String HDR_UPGRADE                   = "upgrade".intern();
  public static final String HDR_USER_AGENT                = "user-agent".intern();
  public static final String HDR_VARY                      = "vary".intern();
  public static final String HDR_VIA                       = "via".intern();
  public static final String HDR_WARNING                   = "warning".intern();
  public static final String HDR_WWW_AUTHENTICATE          = "www-authenticate".intern();
  public static final String HDR_X_CONTENT_TYPE_OPTIONS    = "x-content-type-options".intern();
  public static final String HDR_X_DO_NOT_TRACK            = "x-do-not-track".intern();
  public static final String HDR_X_FORWARDED_FOR           = "x-forwarded-for".intern();
  public static final String HDR_X_FORWARDED_PROTO         = "x-forwarded-proto".intern();
  public static final String HDR_X_FRAME_OPTIONS           = "x-frame-options".intern();
  public static final String HDR_X_POWERED_BY              = "x-powered-by".intern();
  public static final String HDR_X_REQUESTED_WITH          = "x-requested-with".intern();
  public static final String HDR_X_XSS_PROTECTION          = "x-xss-protection".intern();

  public static final String VAL_100_CONTINUE = "100-continue".intern();
  public static final String VAL_CHUNKED      = "chunked".intern();
  public static final String VAL_CLOSE        = "close".intern();
  public static final String VAL_UPGRADE      = "upgrade".intern();

  public static boolean isWhiteSpace(byte b) {
    return b == SP || b == HT;
  }

  
// line 558 "src/rl/picard/http/HttpParser.rl"


  public static final long ALMOST_MAX_LONG     = Long.MAX_VALUE / 10;
  public static final long ALMOST_MAX_LONG_HEX = Long.MAX_VALUE / 16;

  public static final int  MAX_HEADER_SIZE = 100 * 1024;
  public static final int  PARSING_HEAD    = 1 << 0;
  public static final int  IDENTITY_BODY   = 1 << 1;
  public static final int  CHUNKED_BODY    = 1 << 2;
  public static final int  CONN_CLOSE      = 1 << 3;
  public static final int  KEEP_ALIVE      = 1 << 4;
  public static final int  UPGRADE         = 1 << 5;
  public static final int  EXPECT_CONTINUE = 1 << 6;
  public static final int  ERROR           = 1 << 7;

  
// line 172 "src/jvm/picard/http/HttpParser.java"
private static byte[] init__http_actions_0()
{
	return new byte [] {
	    0,    1,  105,    1,  106,    1,  107,    1,  108,    1,  109,    1,
	  111,    1,  113,    1,  114,    1,  115,    2,    0,  114,    2,    1,
	  114,    2,    2,  114,    2,    3,  114,    2,    4,  114,    2,    5,
	  114,    2,    6,  114,    2,    7,  114,    2,    8,  114,    2,    9,
	  114,    2,   10,  114,    2,   11,  114,    2,   12,  114,    2,   13,
	  114,    2,   14,  114,    2,   15,  114,    2,   16,  114,    2,   17,
	  114,    2,   18,  114,    2,   19,  114,    2,   20,  114,    2,   21,
	  114,    2,   22,  114,    2,   23,  114,    2,   24,  114,    2,   25,
	  114,    2,   90,  114,    2,   91,  114,    2,   92,  114,    2,   93,
	  114,    2,   94,  114,    2,   95,  114,    2,   96,  114,    2,   97,
	  114,    2,   97,  115,    2,  103,  114,    2,  104,  114,    2,  110,
	  111,    2,  112,  115,    2,  117,  114,    2,  118,  114,    2,  119,
	  114,    2,  120,  114,    2,  121,  114,    3,    0,  116,  114,    3,
	    1,  116,  114,    3,   26,  117,  114,    3,   27,  117,  114,    3,
	   28,  117,  114,    3,   29,  117,  114,    3,   30,  117,  114,    3,
	   31,  117,  114,    3,   32,  117,  114,    3,   33,  117,  114,    3,
	   34,  117,  114,    3,   35,  117,  114,    3,   36,  117,  114,    3,
	   37,  117,  114,    3,   38,  117,  114,    3,   39,  117,  114,    3,
	   40,  117,  114,    3,   41,  117,  114,    3,   42,  117,  114,    3,
	   43,  117,  114,    3,   44,  117,  114,    3,   45,  117,  114,    3,
	   46,  117,  114,    3,   47,  117,  114,    3,   48,  117,  114,    3,
	   49,  117,  114,    3,   50,  117,  114,    3,   51,  117,  114,    3,
	   52,  117,  114,    3,   53,  117,  114,    3,   54,  117,  114,    3,
	   55,  117,  114,    3,   56,  117,  114,    3,   57,  117,  114,    3,
	   58,  117,  114,    3,   59,  117,  114,    3,   60,  117,  114,    3,
	   61,  117,  114,    3,   62,  117,  114,    3,   63,  117,  114,    3,
	   64,  117,  114,    3,   65,  117,  114,    3,   66,  117,  114,    3,
	   67,  117,  114,    3,   68,  117,  114,    3,   69,  117,  114,    3,
	   70,  117,  114,    3,   71,  117,  114,    3,   72,  117,  114,    3,
	   73,  117,  114,    3,   74,  117,  114,    3,   75,  117,  114,    3,
	   76,  117,  114,    3,   77,  117,  114,    3,   78,  117,  114,    3,
	   79,  117,  114,    3,   80,  117,  114,    3,   81,  117,  114,    3,
	   82,  117,  114,    3,   83,  117,  114,    3,   84,  117,  114,    3,
	   85,  117,  114,    3,   86,  117,  114,    3,   87,  117,  114,    3,
	   88,  117,  114,    3,   89,  117,  114,    3,   96,  118,  114,    3,
	   97,  118,  114,    3,   98,  119,  114,    3,   99,  119,  114,    3,
	  100,  119,  114,    3,  101,  119,  114,    3,  102,  119,  114,    3,
	  103,   91,  114,    3,  119,  120,  114,    3,  121,  116,  114,    4,
	   98,  119,  120,  114,    4,   99,  119,  120,  114,    4,  100,  119,
	  120,  114,    4,  101,  119,  120,  114,    4,  102,  119,  120,  114,
	    4,  118,  119,  120,  114,    5,   97,  118,  119,  120,  114
	};
}

private static final byte _http_actions[] = init__http_actions_0();


private static byte[] init__http_cond_offsets_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    2,    2
	};
}

private static final byte _http_cond_offsets[] = init__http_cond_offsets_0();


private static byte[] init__http_cond_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    1,    0,    0
	};
}

private static final byte _http_cond_lengths[] = init__http_cond_lengths_0();


private static int[] init__http_cond_keys_0()
{
	return new int [] {
	    0,65535,    0,65535,    0
	};
}

private static final int _http_cond_keys[] = init__http_cond_keys_0();


private static byte[] init__http_cond_spaces_0()
{
	return new byte [] {
	    0,    0,    0
	};
}

private static final byte _http_cond_spaces[] = init__http_cond_spaces_0();


private static short[] init__http_key_offsets_0()
{
	return new short [] {
	    0,    0,   15,   16,   31,   33,   34,   35,   36,   37,   38,   39,
	   40,   44,   49,   50,  101,  102,  103,  104,  105,  106,  107,  108,
	  109,  110,  111,  114,  115,  116,  117,  119,  121,  122,  124,  127,
	  129,  132,  135,  137,  139,  141,  142,  193,  210,  213,  219,  220,
	  273,  298,  317,  336,  355,  374,  392,  417,  436,  455,  474,  493,
	  512,  531,  548,  567,  586,  605,  624,  643,  662,  681,  698,  717,
	  736,  755,  774,  793,  812,  831,  848,  867,  886,  905,  924,  943,
	  960,  979,  996, 1015, 1034, 1053, 1070, 1089, 1108, 1127, 1146, 1165,
	 1184, 1203, 1222, 1241, 1260, 1279, 1296, 1317, 1336, 1355, 1374, 1392,
	 1411, 1430, 1449, 1468, 1487, 1506, 1525, 1542, 1563, 1584, 1603, 1622,
	 1641, 1660, 1679, 1698, 1715, 1718, 1728, 1734, 1740, 1748, 1756, 1764,
	 1772, 1778, 1786, 1794, 1802, 1810, 1818, 1826, 1832, 1851, 1870, 1889,
	 1907, 1936, 1955, 1974, 1993, 2012, 2031, 2050, 2069, 2088, 2107, 2126,
	 2143, 2162, 2181, 2200, 2219, 2238, 2257, 2276, 2293, 2316, 2335, 2354,
	 2373, 2392, 2411, 2430, 2447, 2466, 2485, 2504, 2523, 2540, 2543, 2551,
	 2559, 2578, 2597, 2616, 2635, 2654, 2673, 2690, 2709, 2727, 2744, 2763,
	 2782, 2801, 2820, 2837, 2856, 2875, 2894, 2911, 2930, 2949, 2968, 2985,
	 3006, 3025, 3044, 3061, 3080, 3097, 3118, 3137, 3156, 3173, 3192, 3213,
	 3232, 3251, 3268, 3271, 3278, 3285, 3292, 3299, 3307, 3315, 3323, 3331,
	 3339, 3347, 3355, 3363, 3369, 3388, 3407, 3426, 3443, 3462, 3481, 3500,
	 3517, 3536, 3555, 3574, 3591, 3610, 3628, 3653, 3674, 3693, 3712, 3731,
	 3748, 3767, 3786, 3805, 3824, 3843, 3862, 3880, 3899, 3918, 3937, 3956,
	 3975, 3992, 4011, 4030, 4049, 4067, 4086, 4105, 4124, 4143, 4162, 4179,
	 4198, 4217, 4236, 4255, 4272, 4291, 4310, 4329, 4348, 4367, 4386, 4405,
	 4424, 4443, 4461, 4480, 4499, 4518, 4537, 4556, 4573, 4592, 4611, 4630,
	 4648, 4667, 4686, 4705, 4724, 4743, 4760, 4783, 4802, 4821, 4839, 4858,
	 4877, 4896, 4915, 4934, 4953, 4972, 4991, 5008, 5027, 5046, 5063, 5082,
	 5101, 5120, 5139, 5158, 5177, 5194, 5213, 5232, 5250, 5269, 5288, 5307,
	 5326, 5345, 5364, 5383, 5402, 5419, 5439, 5458, 5475, 5496, 5515, 5534,
	 5553, 5570, 5589, 5608, 5626, 5645, 5664, 5683, 5702, 5723, 5742, 5761,
	 5780, 5799, 5818, 5837, 5856, 5873, 5892, 5911, 5930, 5949, 5968, 5987,
	 6006, 6025, 6042, 6063, 6082, 6101, 6120, 6137, 6158, 6179, 6198, 6217,
	 6236, 6253, 6272, 6291, 6310, 6327, 6346, 6365, 6383, 6402, 6421, 6440,
	 6459, 6478, 6495, 6516, 6537, 6556, 6575, 6594, 6611, 6629, 6648, 6667,
	 6686, 6705, 6724, 6743, 6760, 6779, 6798, 6817, 6836, 6854, 6873, 6892,
	 6911, 6930, 6949, 6968, 6987, 7006, 7025, 7043, 7062, 7081, 7100, 7119,
	 7138, 7157, 7176, 7195, 7212, 7233, 7250, 7269, 7290, 7309, 7328, 7347,
	 7364, 7383, 7402, 7421, 7440, 7458, 7477, 7496, 7515, 7534, 7553, 7572,
	 7591, 7610, 7627, 7630, 7638, 7646, 7654, 7662, 7670, 7678, 7686, 7692,
	 7713, 7732, 7751, 7770, 7789, 7808, 7825, 7844, 7863, 7881, 7900, 7919,
	 7938, 7957, 7976, 7993, 8014, 8033, 8052, 8069, 8088, 8105, 8126, 8145,
	 8164, 8183, 8202, 8221, 8238, 8257, 8275, 8294, 8313, 8332, 8351, 8370,
	 8389, 8408, 8427, 8446, 8465, 8484, 8503, 8520, 8538, 8567, 8586, 8605,
	 8624, 8643, 8662, 8681, 8699, 8718, 8737, 8756, 8775, 8793, 8812, 8831,
	 8850, 8869, 8888, 8907, 8926, 8943, 8962, 8980, 8999, 9018, 9037, 9055,
	 9074, 9093, 9112, 9131, 9150, 9167, 9188, 9207, 9226, 9245, 9264, 9283,
	 9302, 9321, 9339, 9360, 9379, 9398, 9415, 9434, 9453, 9472, 9491, 9508,
	 9527, 9546, 9565, 9583, 9602, 9621, 9640, 9659, 9678, 9697, 9716, 9733,
	 9752, 9771, 9790, 9809, 9828, 9847, 9865, 9884, 9903, 9920, 9939, 9958,
	 9977, 9996,10015,10034,10053,10072,10090,10109,10128,10147,10166,10183,
	10202,10221,10239,10258,10277,10296,10315,10334,10353,10372,10391,10410,
	10429,10446,10450,10451,10452,10453,10454,10458,10459,10460,10461,10462,
	10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,
	10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,
	10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10501,10502,
	10503,10504,10505,10506,10507,10508,10509,10510,10512,10513,10514,10515,
	10516,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527,
	10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,
	10540,10541,10542,10543,10544,10546,10547,10548,10549,10550,10551,10552,
	10553,10554,10555,10556,10557,10558,10559,10561,10564,10566,10568,10570,
	10571,10573,10576,10578,10581,10583,10584,10585,10586,10587,10588,10589,
	10590,10597,10604,10612,10613,10616,10617,10624,10633,10634,10638,10639,
	10643,10644,10648,10652,10656,10656,10671,10671,10673,10673
	};
}

private static final short _http_key_offsets[] = init__http_key_offsets_0();


private static int[] init__http_trans_keys_0()
{
	return new int [] {
	   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,
	   84,   85,  104,   10,   13,   67,   68,   71,   72,   76,   77,   78,
	   79,   80,   82,   83,   84,   85,  104,   72,   79,   69,   67,   75,
	   79,   85,   84,   32,   32,  127,    0,   31,   13,   32,  127,    0,
	   31,   10,   13,   34,   44,   47,   65,   67,   68,   69,   70,   72,
	   73,   75,   76,   77,   80,   82,   83,   84,   85,   86,   87,   88,
	   97,   99,  100,  101,  102,  104,  105,  107,  108,  109,  112,  114,
	  115,  116,  117,  118,  119,  120,  123,  125,  127,    0,   32,   40,
	   41,   58,   64,   91,   93,   10,   69,   76,   69,   84,   69,   32,
	   69,   84,   32,   69,   84,  116,   65,   68,   32,   84,  116,   80,
	  112,   47,   48,   57,   46,   48,   57,   48,   57,   32,   48,   57,
	   32,   48,   57,   48,   57,   48,   57,   13,   32,   10,   13,   34,
	   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,   76,   77,
	   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,  100,  101,
	  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,  117,  118,
	  119,  120,  123,  125,  127,    0,   32,   40,   41,   58,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,
	  127,    0,   31,   10,    9,   13,   32,   34,   44,   47,   65,   67,
	   68,   69,   70,   72,   73,   75,   76,   77,   80,   82,   83,   84,
	   85,   86,   87,   88,   97,   99,  100,  101,  102,  104,  105,  107,
	  108,  109,  112,  114,  115,  116,  117,  118,  119,  120,  123,  125,
	  127,    0,   31,   40,   41,   58,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   71,   76,   85,   99,  103,  108,  117,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   69,   76,   82,   99,  101,  108,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   90,  122,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   79,   97,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   76,  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,   79,  110,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,   84,  110,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   58,    9,   13,   32,   67,   85,   99,  117,  127,    0,   31,
	    9,   13,   32,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   13,   32,   76,  108,  127,    0,   31,    9,   13,   32,   79,
	  111,  127,    0,   31,    9,   13,   32,   83,  115,  127,    0,   31,
	    9,   13,   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,
	    0,   31,    9,   13,   32,   80,  112,  127,    0,   31,    9,   13,
	   32,   71,  103,  127,    0,   31,    9,   13,   32,   82,  114,  127,
	    0,   31,    9,   13,   32,   65,   97,  127,    0,   31,    9,   13,
	   32,   68,  100,  127,    0,   31,    9,   13,   32,   69,  101,  127,
	    0,   31,    9,   13,   32,  127,    0,   31,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   68,   69,   76,   77,   82,   84,  100,
	  101,  108,  109,  114,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   69,   79,   97,  101,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,
	   13,   32,  127,    0,   31,   48,   57,    9,   13,   32,  127,    0,
	   31,   48,   57,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   53,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,
	  121,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   78,   97,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,   88,  116,  120,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,   73,  101,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,   49,  127,
	    0,   31,    9,   13,   32,   48,  127,    0,   31,    9,   13,   32,
	   48,  127,    0,   31,    9,   13,   32,   45,  127,    0,   31,    9,
	   13,   32,   67,   99,  127,    0,   31,    9,   13,   32,   79,  111,
	  127,    0,   31,    9,   13,   32,   78,  110,  127,    0,   31,    9,
	   13,   32,   84,  116,  127,    0,   31,    9,   13,   32,   73,  105,
	  127,    0,   31,    9,   13,   32,   78,  110,  127,    0,   31,    9,
	   13,   32,   85,  117,  127,    0,   31,    9,   13,   32,   69,  101,
	  127,    0,   31,    9,   13,   32,  127,    0,   31,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,   78,
	   82,   85,  109,  110,  114,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   86,  118,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   73,   79,   97,  105,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   75,  107,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   88,
	  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   51,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   79,   97,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   88,  120,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,
	  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,   79,  101,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   90,  122,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   69,   97,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,
	   84,  102,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,   82,  101,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,   84,  101,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,   84,  114,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   86,  118,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,   82,  101,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,   78,  105,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   76,  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,   13,
	   32,   67,   99,  127,    0,   31,    9,   13,   32,   72,  104,  127,
	    0,   31,    9,   13,   32,   85,  117,  127,    0,   31,    9,   13,
	   32,   78,  110,  127,    0,   31,    9,   13,   32,   75,  107,  127,
	    0,   31,    9,   13,   32,   69,  101,  127,    0,   31,    9,   13,
	   32,   68,  100,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   32,   34,   44,   47,   58,   80,   83,  112,  115,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   73,   97,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,
	  121,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   87,   97,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9
	};
};
private static int[] init__http_trans_keys_1()
{
	return new int [] {
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   68,   70,   80,   82,   88,   99,  100,  102,  112,  114,  120,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   89,  121,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   75,  107,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,   82,  111,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,   80,  102,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   66,   98,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   81,  113,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,   13,  127,    0,   31,   79,   67,
	   75,   32,   69,   75,   79,   83,   82,   71,   69,   32,   65,   67,
	   67,   84,   73,   86,   73,   84,   89,   32,   79,   76,   32,   86,
	   69,   32,   69,   65,   82,   67,   72,   32,   79,   84,   73,   70,
	   89,   32,   80,   84,   73,   79,   78,   83,   32,   65,   79,   82,
	   85,   84,   67,   72,   32,   83,   84,   32,   79,   80,   70,   80,
	   73,   78,   68,   32,   65,   84,   67,   72,   32,   84,   32,   69,
	   80,   79,   82,   84,   32,   85,   66,   83,   67,   82,   73,   66,
	   69,   32,   82,   65,   67,   69,   32,   78,   76,   83,   79,   67,
	   75,   32,   85,   66,   83,   67,   82,   73,   66,   69,   32,   84,
	  116,   32,   72,  104,   84,  116,   84,  116,   80,  112,   47,   48,
	   57,   46,   48,   57,   48,   57,   13,   48,   57,   78,   80,   78,
	   69,   67,   84,   32,   89,   32,   48,   49,   57,   65,   70,   97,
	  102,   48,   49,   57,   65,   70,   97,  102,   13,   59,   48,   57,
	   65,   70,   97,  102,   10,65549,131072,196607,   10,   48,   49,   57,
	   65,   70,   97,  102,   13,   48,   59,   49,   57,   65,   70,   97,
	  102,   10,   13,  127,    0,   31,   10,   13,  127,    0,   31,   10,
	   13,  127,    0,   31,   13,  127,    0,   31,   13,  127,    0,   31,
	   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,
	   84,   85,  104,131072,196607,    0
	};
}

private static final int [] combine__http_trans_keys() {
	int [] combined = new int [ 10674 ];
	System.arraycopy ( init__http_trans_keys_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_trans_keys_1(), 0, combined, 8184, 2490 );
	return combined;
}
private static final int [] _http_trans_keys = combine__http_trans_keys();
private static byte[] init__http_single_lengths_0()
{
	return new byte [] {
	    0,   15,    1,   15,    2,    1,    1,    1,    1,    1,    1,    1,
	    2,    3,    1,   43,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    3,    1,    1,    1,    2,    2,    1,    0,    1,    0,
	    1,    1,    0,    0,    2,    1,   43,    9,    3,    4,    1,   45,
	   17,   11,   11,   11,   11,   10,   17,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,    9,
	   11,    9,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,    9,   13,   11,   11,   11,   10,   11,
	   11,   11,   11,   11,   11,   11,    9,   13,   13,   11,   11,   11,
	   11,   11,   11,    9,    3,    8,    4,    4,    6,    6,    6,    6,
	    4,    6,    6,    6,    6,    6,    6,    4,   11,   11,   11,   10,
	   21,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,    9,
	   11,   11,   11,   11,   11,   11,   11,    9,   15,   11,   11,   11,
	   11,   11,   11,    9,   11,   11,   11,   11,    9,    3,    4,    4,
	   11,   11,   11,   11,   11,   11,    9,   11,   10,    9,   11,   11,
	   11,   11,    9,   11,   11,   11,    9,   11,   11,   11,    9,   13,
	   11,   11,    9,   11,    9,   13,   11,   11,    9,   11,   13,   11,
	   11,    9,    3,    5,    5,    5,    5,    6,    6,    6,    6,    6,
	    6,    6,    6,    4,   11,   11,   11,    9,   11,   11,   11,    9,
	   11,   11,   11,    9,   11,   10,   17,   13,   11,   11,   11,    9,
	   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	    9,   11,   11,   11,   10,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,    9,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,    9,   15,   11,   11,   10,   11,   11,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,    9,   11,   11,
	   11,   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,
	   11,   11,   11,   11,    9,   12,   11,    9,   13,   11,   11,   11,
	    9,   11,   11,   10,   11,   11,   11,   11,   13,   11,   11,   11,
	   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,
	   11,    9,   13,   11,   11,   11,    9,   13,   13,   11,   11,   11,
	    9,   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,
	   11,    9,   13,   13,   11,   11,   11,    9,   10,   11,   11,   11,
	   11,   11,   11,    9,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	   11,   11,   11,    9,   13,    9,   11,   13,   11,   11,   11,    9,
	   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,
	   11,    9,    3,    6,    6,    6,    6,    6,    6,    6,    4,   13,
	   11,   11,   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,
	   11,   11,    9,   13,   11,   11,    9,   11,    9,   13,   11,   11,
	   11,   11,   11,    9,   11,   10,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,    9,   10,   21,   11,   11,   11,
	   11,   11,   11,   10,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,   11,   11,    9,   11,   10,   11,   11,   11,   10,   11,
	   11,   11,   11,   11,    9,   13,   11,   11,   11,   11,   11,   11,
	   11,   10,   13,   11,   11,    9,   11,   11,   11,   11,    9,   11,
	   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,   11,   11,   10,   11,   11,    9,   11,   11,   11,
	   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,    9,   11,
	   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	    9,    2,    1,    1,    1,    1,    4,    1,    1,    1,    1,    2,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    2,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    2,    3,    2,    2,    2,    1,
	    0,    1,    0,    1,    2,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    2,    1,    1,    1,    1,    3,    1,    2,    1,    2,
	    1,    2,    2,    2,    0,   15,    0,    0,    0,    0
	};
}

private static final byte _http_single_lengths[] = init__http_single_lengths_0();


private static byte[] init__http_range_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    0,    4,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,
	    1,    1,    1,    1,    0,    0,    4,    4,    0,    1,    0,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    0,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    0,    2,    2,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    0,    1,    1,    1,    1,    1,    1,    1,    1,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,    0,
	    3,    3,    3,    0,    1,    0,    3,    3,    0,    1,    0,    1,
	    0,    1,    1,    1,    0,    0,    0,    1,    0,    0
	};
}

private static final byte _http_range_lengths[] = init__http_range_lengths_0();


private static short[] init__http_index_offsets_0()
{
	return new short [] {
	    0,    0,   16,   18,   34,   37,   39,   41,   43,   45,   47,   49,
	   51,   55,   60,   62,  110,  112,  114,  116,  118,  120,  122,  124,
	  126,  128,  130,  134,  136,  138,  140,  143,  146,  148,  150,  153,
	  155,  158,  161,  163,  165,  168,  170,  218,  232,  236,  242,  244,
	  294,  316,  332,  348,  364,  380,  395,  417,  433,  449,  465,  481,
	  497,  513,  527,  543,  559,  575,  591,  607,  623,  639,  653,  669,
	  685,  701,  717,  733,  749,  765,  779,  795,  811,  827,  843,  859,
	  873,  889,  903,  919,  935,  951,  965,  981,  997, 1013, 1029, 1045,
	 1061, 1077, 1093, 1109, 1125, 1141, 1155, 1173, 1189, 1205, 1221, 1236,
	 1252, 1268, 1284, 1300, 1316, 1332, 1348, 1362, 1380, 1398, 1414, 1430,
	 1446, 1462, 1478, 1494, 1508, 1512, 1522, 1528, 1534, 1542, 1550, 1558,
	 1566, 1572, 1580, 1588, 1596, 1604, 1612, 1620, 1626, 1642, 1658, 1674,
	 1689, 1715, 1731, 1747, 1763, 1779, 1795, 1811, 1827, 1843, 1859, 1875,
	 1889, 1905, 1921, 1937, 1953, 1969, 1985, 2001, 2015, 2035, 2051, 2067,
	 2083, 2099, 2115, 2131, 2145, 2161, 2177, 2193, 2209, 2223, 2227, 2234,
	 2241, 2257, 2273, 2289, 2305, 2321, 2337, 2351, 2367, 2382, 2396, 2412,
	 2428, 2444, 2460, 2474, 2490, 2506, 2522, 2536, 2552, 2568, 2584, 2598,
	 2616, 2632, 2648, 2662, 2678, 2692, 2710, 2726, 2742, 2756, 2772, 2790,
	 2806, 2822, 2836, 2840, 2847, 2854, 2861, 2868, 2876, 2884, 2892, 2900,
	 2908, 2916, 2924, 2932, 2938, 2954, 2970, 2986, 3000, 3016, 3032, 3048,
	 3062, 3078, 3094, 3110, 3124, 3140, 3155, 3177, 3195, 3211, 3227, 3243,
	 3257, 3273, 3289, 3305, 3321, 3337, 3353, 3368, 3384, 3400, 3416, 3432,
	 3448, 3462, 3478, 3494, 3510, 3525, 3541, 3557, 3573, 3589, 3605, 3619,
	 3635, 3651, 3667, 3683, 3697, 3713, 3729, 3745, 3761, 3777, 3793, 3809,
	 3825, 3841, 3856, 3872, 3888, 3904, 3920, 3936, 3950, 3966, 3982, 3998,
	 4013, 4029, 4045, 4061, 4077, 4093, 4107, 4127, 4143, 4159, 4174, 4190,
	 4206, 4222, 4238, 4254, 4270, 4286, 4302, 4316, 4332, 4348, 4362, 4378,
	 4394, 4410, 4426, 4442, 4458, 4472, 4488, 4504, 4519, 4535, 4551, 4567,
	 4583, 4599, 4615, 4631, 4647, 4661, 4678, 4694, 4708, 4726, 4742, 4758,
	 4774, 4788, 4804, 4820, 4835, 4851, 4867, 4883, 4899, 4917, 4933, 4949,
	 4965, 4981, 4997, 5013, 5029, 5043, 5059, 5075, 5091, 5107, 5123, 5139,
	 5155, 5171, 5185, 5203, 5219, 5235, 5251, 5265, 5283, 5301, 5317, 5333,
	 5349, 5363, 5379, 5395, 5411, 5425, 5441, 5457, 5472, 5488, 5504, 5520,
	 5536, 5552, 5566, 5584, 5602, 5618, 5634, 5650, 5664, 5679, 5695, 5711,
	 5727, 5743, 5759, 5775, 5789, 5805, 5821, 5837, 5853, 5868, 5884, 5900,
	 5916, 5932, 5948, 5964, 5980, 5996, 6012, 6027, 6043, 6059, 6075, 6091,
	 6107, 6123, 6139, 6155, 6169, 6187, 6201, 6217, 6235, 6251, 6267, 6283,
	 6297, 6313, 6329, 6345, 6361, 6376, 6392, 6408, 6424, 6440, 6456, 6472,
	 6488, 6504, 6518, 6522, 6530, 6538, 6546, 6554, 6562, 6570, 6578, 6584,
	 6602, 6618, 6634, 6650, 6666, 6682, 6696, 6712, 6728, 6743, 6759, 6775,
	 6791, 6807, 6823, 6837, 6855, 6871, 6887, 6901, 6917, 6931, 6949, 6965,
	 6981, 6997, 7013, 7029, 7043, 7059, 7074, 7090, 7106, 7122, 7138, 7154,
	 7170, 7186, 7202, 7218, 7234, 7250, 7266, 7280, 7295, 7321, 7337, 7353,
	 7369, 7385, 7401, 7417, 7432, 7448, 7464, 7480, 7496, 7511, 7527, 7543,
	 7559, 7575, 7591, 7607, 7623, 7637, 7653, 7668, 7684, 7700, 7716, 7731,
	 7747, 7763, 7779, 7795, 7811, 7825, 7843, 7859, 7875, 7891, 7907, 7923,
	 7939, 7955, 7970, 7988, 8004, 8020, 8034, 8050, 8066, 8082, 8098, 8112,
	 8128, 8144, 8160, 8175, 8191, 8207, 8223, 8239, 8255, 8271, 8287, 8301,
	 8317, 8333, 8349, 8365, 8381, 8397, 8412, 8428, 8444, 8458, 8474, 8490,
	 8506, 8522, 8538, 8554, 8570, 8586, 8601, 8617, 8633, 8649, 8665, 8679,
	 8695, 8711, 8726, 8742, 8758, 8774, 8790, 8806, 8822, 8838, 8854, 8870,
	 8886, 8900, 8904, 8906, 8908, 8910, 8912, 8917, 8919, 8921, 8923, 8925,
	 8928, 8930, 8932, 8934, 8936, 8938, 8940, 8942, 8944, 8946, 8948, 8950,
	 8952, 8954, 8956, 8958, 8960, 8962, 8964, 8966, 8968, 8970, 8972, 8974,
	 8976, 8978, 8980, 8982, 8984, 8986, 8988, 8990, 8992, 8994, 8999, 9001,
	 9003, 9005, 9007, 9009, 9011, 9013, 9015, 9017, 9020, 9022, 9024, 9026,
	 9028, 9030, 9032, 9034, 9036, 9038, 9040, 9042, 9044, 9046, 9048, 9050,
	 9052, 9054, 9056, 9058, 9060, 9062, 9064, 9066, 9068, 9070, 9072, 9074,
	 9076, 9078, 9080, 9082, 9084, 9087, 9089, 9091, 9093, 9095, 9097, 9099,
	 9101, 9103, 9105, 9107, 9109, 9111, 9113, 9116, 9120, 9123, 9126, 9129,
	 9131, 9133, 9136, 9138, 9141, 9144, 9146, 9148, 9150, 9152, 9154, 9156,
	 9158, 9163, 9168, 9174, 9176, 9179, 9181, 9186, 9193, 9195, 9199, 9201,
	 9205, 9207, 9211, 9215, 9219, 9220, 9236, 9237, 9239, 9240
	};
}

private static final short _http_index_offsets[] = init__http_index_offsets_0();


private static short[] init__http_indicies_0()
{
	return new short [] {
	    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
	   13,   14,   15,    0,   16,    0,   17,   18,   19,   20,   21,   22,
	   23,   24,   25,   26,   27,   28,   29,   30,   31,    0,   32,   33,
	    0,   34,    0,   35,    0,   36,    0,   37,    0,   38,    0,   39,
	    0,   40,    0,   41,    0,    0,   42,   43,   44,    0,    0,   45,
	   46,    0,   47,    0,    0,    0,   49,   50,   51,   52,   53,   54,
	   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
	   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,
	   61,   62,   63,   64,   65,   66,    0,    0,    0,    0,    0,    0,
	    0,   48,   67,    0,   68,    0,   69,    0,   70,    0,   71,    0,
	   72,    0,   73,    0,   74,    0,   75,    0,   76,    0,   77,   78,
	   78,    0,   79,    0,   80,    0,   81,    0,   82,   82,    0,   83,
	   83,    0,   84,    0,   85,    0,   86,   85,    0,   87,    0,   88,
	   87,    0,   88,   89,    0,   90,    0,   91,    0,   92,   93,    0,
	   94,    0,   95,    0,    0,    0,   97,   98,   99,  100,  101,  102,
	  103,  104,  105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
	   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
	  109,  110,  111,  112,  113,  114,    0,    0,    0,    0,    0,    0,
	    0,   96,  115,  115,    0,    0,    0,  117,    0,    0,    0,    0,
	    0,    0,    0,  116,  118,  118,  119,    0,  119,  120,  119,    0,
	    0,  121,  122,    0,  119,  123,  119,    0,    0,    0,  125,  126,
	  127,  128,  129,  130,  131,  132,  133,  134,  135,  136,  137,  138,
	  139,  140,  141,  142,  125,  126,  127,  128,  129,  130,  131,  132,
	  133,  134,  135,  136,  137,  138,  139,  140,  141,  142,    0,    0,
	    0,    0,    0,    0,    0,  124,  115,  115,    0,    0,    0,  117,
	  143,  144,  145,  146,  143,  144,  145,  146,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  147,  147,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  148,  148,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  149,  149,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  150,  150,
	    0,    0,    0,    0,    0,    0,    0,  116,  151,  151,    0,    0,
	  152,    0,  153,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  154,  155,  156,  157,  154,  155,  156,
	  157,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  158,  158,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  159,  159,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  160,
	  160,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  161,  161,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  162,  162,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  163,
	  163,    0,    0,    0,    0,    0,    0,    0,  116,  164,  164,    0,
	    0,    0,  165,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  166,  166,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  167,  167,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  168,  168,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  169,  169,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  170,  170,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  171,  171,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  172,  172,    0,    0,    0,    0,    0,
	    0,    0,  116,  173,  173,    0,    0,    0,  174,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  175,
	  175,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  176,  176,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  177,  177,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  178,
	  178,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  179,  179,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  180,  180,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  181,
	  181,    0,    0,    0,    0,    0,    0,    0,  116,  182,  182,    0,
	    0,    0,  183,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  184,  184,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  185,  185,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  186,  186,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  187,  187,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  188,  188,    0,
	    0,    0,    0,    0,    0,    0,  116,  189,  189,    0,    0,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  191,  191,    0,    0,    0,    0,    0,    0,    0,
	  116,  192,  192,    0,    0,    0,  193,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  194,  194,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  195,  195,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  196,  196,    0,    0,    0,    0,    0,
	    0,    0,  116,  197,  197,    0,    0,    0,  198,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  199,
	  199,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  200,  200,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  201,  201,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  202,
	  202,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  203,  203,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  204,  204,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  205,
	  205,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  206,  206,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  207,  207,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  208,
	  208,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  209,  209,    0,    0,    0,    0,    0,    0,    0,
	  116,  210,  210,    0,    0,    0,  211,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  212,  213,  212,
	  213,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  214,  214,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  215,  215,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  216,
	  216,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,  217,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  218,  218,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  219,  219,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  220,  220,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  221,  221,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  222,  222,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  223,  223,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  224,  224,    0,    0,    0,    0,
	    0,    0,    0,  116,  225,  225,    0,    0,    0,  226,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  227,  228,  227,  228,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  229,  230,  229,  230,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  231,  231,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  232,  232,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  233,  233,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  234,  234,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  235,  235,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  236,  236,    0,    0,
	    0,    0,    0,    0,    0,  116,  237,  237,    0,    0,    0,  238,
	    0,    0,    0,    0,    0,    0,    0,  116,  239,  239,  240,    0,
	  240,  120,  240,  241,  242,  241,  242,    0,    0,  121,  243,  244,
	  243,    0,    0,  245,  246,  247,  246,    0,    0,  245,  243,  244,
	  243,  248,  248,    0,    0,  245,  243,  244,  243,  249,  249,    0,
	    0,  245,  243,  244,  243,  250,  250,    0,    0,  245,  243,  244,
	  243,  251,  251,    0,    0,  245,  252,  253,  252,    0,    0,  245,
	  243,  244,  243,  254,  254,    0,    0,  245,  243,  244,  243,  255,
	  255,    0,    0,  245,  243,  244,  243,  256,  256,    0,    0,  245,
	  243,  244,  243,  257,  257,    0,    0,  245,  243,  244,  243,  258,
	  258,    0,    0,  245,  243,  244,  243,  259,  259,    0,    0,  245,
	  260,  261,  260,    0,    0,  245,  115,  115,    0,    0,    0,  117,
	  262,  262,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  263,  263,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  264,  264,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,  265,    0,
	  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  266,  267,  268,  269,  270,  271,  266,  267,  268,
	  269,  270,  271,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  272,  272,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  273,  273,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  274,  274,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  275,  275,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  276,  276,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  277,  277,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  278,  278,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  279,  279,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  280,  280,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  281,  281,    0,    0,    0,    0,    0,
	    0,    0,  116,  282,  282,    0,    0,    0,  283,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  284,
	  284,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  285,  285,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  286,  286,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  287,
	  287,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  288,  288,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  289,  289,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  290,
	  290,    0,    0,    0,    0,    0,    0,    0,  116,  291,  291,    0,
	    0,    0,  292,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  293,  294,  295,  293,  294,  295,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  296,  296,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  297,  297,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  298,  298,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  299,  299,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  300,  300,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  301,  301,    0,
	    0,    0,    0,    0,    0,    0,  116,  302,  302,    0,    0,    0,
	  303,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  304,  304,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  305,  305,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  306,
	  306,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  307,  307,    0,    0,    0,    0,    0,    0,    0,
	  116,  308,  308,    0,    0,    0,  309,    0,    0,    0,    0,    0,
	    0,    0,  116,  310,  310,  311,    0,  311,  313,  311,  312,  312,
	  315,  314,  316,  317,  316,  312,  312,  319,  318,  115,  115,    0,
	    0,    0,  117,  320,  320,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  321,  321,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  322,
	  322,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  323,  323,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  324,  324,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  325,
	  325,    0,    0,    0,    0,    0,    0,    0,  116,  326,  326,    0,
	    0,    0,  327,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  328,  328,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  329,  117,    0,    0,
	    0,    0,    0,    0,    0,  116,  330,  330,    0,    0,    0,  331,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  332,  332,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  333,  333,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  334,  334,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  335,  335,    0,    0,    0,    0,    0,    0,    0,  116,
	  336,  336,    0,    0,    0,  337,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  338,  338,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  339,  339,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  340,  340,    0,    0,    0,    0,    0,    0,
	    0,  116,  341,  341,    0,    0,    0,  342,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  343,  343,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  344,  344,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  345,  345,    0,    0,    0,    0,
	    0,    0,    0,  116,  346,  346,    0,    0,    0,  347,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  348,  349,  348,  349,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  350,  350,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  351,  351,
	    0,    0,    0,    0,    0,    0,    0,  116,  352,  352,    0,    0,
	    0,  353,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  354,  354,    0,    0,    0,    0,    0,    0,
	    0,  116,  355,  355,    0,    0,    0,  356,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  357,  358,
	  357,  358,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  359,  359,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  360,  360,    0,    0,
	    0,    0,    0,    0,    0,  116,  361,  361,    0,    0,    0,  362,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  363,  363,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  364,  365,  364,  365,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  366,  366,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  367,  367,    0,    0,    0,    0,    0,    0,
	    0,  116,  368,  368,    0,    0,    0,  369,    0,    0,    0,    0,
	    0,    0,    0,  116,  370,  370,  371,    0,  371,  120,  371,  372,
	    0,    0,  121,  243,  244,  243,  373,    0,    0,  245,  243,  244,
	  243,  374,    0,    0,  245,  243,  244,  243,  375,    0,    0,  245,
	  243,  244,  243,  376,  376,    0,    0,  245,  243,  244,  243,  377,
	  377,    0,    0,  245,  243,  244,  243,  378,  378,    0,    0,  245,
	  243,  244,  243,  379,  379,    0,    0,  245,  243,  244,  243,  380,
	  380,    0,    0,  245,  243,  244,  243,  381,  381,    0,    0,  245,
	  243,  244,  243,  382,  382,    0,    0,  245,  243,  244,  243,  383,
	  383,    0,    0,  245,  384,  385,  384,    0,    0,  245,  115,  115,
	    0,    0,    0,  117,  386,  386,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  387,  387,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  388,  388,    0,    0,    0,    0,    0,    0,    0,  116,  389,  389,
	    0,    0,    0,  390,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  391,  391,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  392,  392,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  393,  393,    0,    0,    0,    0,    0,    0,    0,  116,
	  394,  394,    0,    0,    0,  395,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  396,  396,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  397,  397,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  398,  398,    0,    0,    0,    0,    0,    0,
	    0,  116,  399,  399,    0,    0,    0,  400,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  401,  401,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	  402,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  403,  404,  405,  406,  403,  404,  405,
	  406,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  407,  408,  407,  408,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  409,  409,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  410,  410,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  411,  411,    0,    0,    0,    0,    0,
	    0,    0,  116,  412,  412,    0,    0,    0,  413,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  414,
	  414,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  415,  415,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  416,  416,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  417,
	  417,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  418,  418,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  419,  419,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,  420,    0,  117,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  421,  421,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  422,  422,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  423,  423,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  424,  424,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  425,  425,    0,    0,    0,    0,
	    0,    0,    0,  116,  426,  426,    0,    0,    0,  427,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  428,  428,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  429,  429,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  430,  430,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,  431,    0,
	  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  432,  432,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  433,  433,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  434,
	  434,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  435,  435,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  436,  436,    0,    0,    0,
	    0,    0,    0,    0,  116,  437,  437,    0,    0,    0,  438,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  439,  439,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  440,  440,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  441,  441,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  442,  442,    0,    0,    0,    0,    0,    0,    0,  116,  443,
	  443,    0,    0,    0,  444,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  445,  445,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  446,
	  446,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  447,  447,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  448,  448,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  449,
	  449,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  450,  450,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  451,  451,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  452,
	  452,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  453,  453,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,  454,    0,  117,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  455,  455,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  456,  456,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  457,  457,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  458,  458,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  459,  459,    0,    0,    0,    0,    0,    0,    0,  116,
	  460,  460,    0,    0,    0,  461,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  462,  462,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  463,  463,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  464,  464,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,  465,    0,  117,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  466,
	  466,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  467,  467,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  468,  468,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  469,
	  469,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  470,  470,    0,    0,    0,    0,    0,    0,    0,
	  116,  471,  471,    0,    0,    0,  472,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  473,  474,  475,
	  473,  474,  475,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  476,  476,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  477,  477,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,  478,
	    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  479,  479,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  480,  480,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  481,  481,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  482,  482,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  483,  483,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  484,  484,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  485,  485,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  486,  486,    0,    0,
	    0,    0,    0,    0,    0,  116,  487,  487,    0,    0,    0,  488,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  489,  489,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  490,  490,    0,    0,    0,    0,
	    0,    0,    0,  116,  491,  491,    0,    0,    0,  492,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  493,  493,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  494,  494,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  495,  495,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  496,  496,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  497,  497,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  498,  498,    0,    0,
	    0,    0,    0,    0,    0,  116,  499,  499,    0,    0,    0,  500,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  501,  501,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  502,  502,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,  503,    0,  117,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  504,  504,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  505,  505,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  506,  506,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  507,  507,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  508,  508,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  509,  509,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  510,  510,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  511,  511,    0,    0,    0,    0,    0,
	    0,    0,  116,  512,  512,    0,    0,    0,  513,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  514,  117,
	  515,  515,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  516,  516,    0,    0,    0,    0,    0,    0,
	    0,  116,  517,  517,    0,    0,    0,  518,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  519,  520,
	  519,  520,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  521,  521,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  522,  522,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  523,  523,    0,    0,    0,    0,    0,    0,    0,  116,  524,  524,
	    0,    0,    0,  525,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  526,  526,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  527,  527,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	  528,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  529,  529,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  530,  530,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  531,  531,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  532,  532,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  533,  534,  533,
	  534,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  535,  535,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  536,  536,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  537,
	  537,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  538,  538,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  539,  539,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  540,
	  540,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  541,  541,    0,    0,    0,    0,    0,    0,    0,
	  116,  542,  542,    0,    0,    0,  543,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  544,  544,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  545,  545,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  546,  546,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  547,  547,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  548,  548,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  549,  549,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  550,  550,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  551,  551,    0,    0,    0,    0,    0,    0,    0,  116,  552,
	  552,    0,    0,    0,  553,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  554,  555,  554,  555,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  556,  556,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  557,  557,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  558,  558,    0,
	    0,    0,    0,    0,    0,    0,  116,  559,  559,    0,    0,    0,
	  560,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  561,  562,  561,  562,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  563,  564,  563,
	  564,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  565,  565,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  566,  566,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  567,
	  567,    0,    0,    0,    0,    0,    0,    0,  116,  568,  568,    0,
	    0,    0,  569,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  570,  570,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  571,  571,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  572,  572,    0,    0,    0,    0,    0,    0,    0,  116,  573,
	  573,    0,    0,    0,  574,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  575,  575,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  576,
	  576,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,  577,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  578,  578,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  579,  579,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  580,  580,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  581,  581,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  582,  582,
	    0,    0,    0,    0,    0,    0,    0,  116,  583,  583,    0,    0,
	    0,  584,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  585,  586,  585,  586,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  587,  588,
	  587,  588,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  589,  589,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  590,  590,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  591,  591,    0,    0,    0,    0,    0,    0,    0,  116,  592,  592,
	    0,    0,    0,  593,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,  594,    0,  117,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  595,  595,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  596,  596,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  597,  597,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  598,  598,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  599,  599,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  600,  600,    0,    0,    0,    0,    0,
	    0,    0,  116,  601,  601,    0,    0,    0,  602,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  603,
	  603,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  604,  604,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  605,  605,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  606,
	  606,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,  607,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  608,  608,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  609,  609,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  610,  610,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  611,  611,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  612,  612,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  613,  613,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  614,  614,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  615,  615,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  616,  616,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,  617,    0,  117,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  618,  618,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  619,  619,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  620,  620,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  621,  621,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  622,  622,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  623,  623,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  624,  624,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  625,  625,    0,    0,    0,    0,    0,    0,    0,  116,  626,
	  626,    0,    0,    0,  627,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  628,  629,  628,  629,    0,
	    0,    0,    0,    0,    0,    0,  116,  630,  630,    0,    0,    0,
	  631,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  632,  632,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  633,  634,  633,  634,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  635,  635,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  636,  636,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  637,  637,    0,
	    0,    0,    0,    0,    0,    0,  116,  638,  638,    0,    0,    0,
	  639,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  640,  640,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  641,  641,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  642,
	  642,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  643,  643,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,  644,    0,  117,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  645,  645,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  646,  646,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  647,  647,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  648,  648,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  649,  649,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  650,  650,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  651,  651,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  652,  652,    0,    0,    0,    0,    0,    0,    0,  116,
	  653,  653,    0,    0,    0,  654,    0,    0,    0,    0,    0,    0,
	    0,  116,  655,  655,  656,    0,  656,  120,  656,  657,  657,    0,
	    0,  121,  243,  244,  243,  658,  658,    0,    0,  245,  243,  244,
	  243,  659,  659,    0,    0,  245,  243,  244,  243,  660,  660,    0,
	    0,  245,  243,  244,  243,  661,  661,    0,    0,  245,  243,  244,
	  243,  662,  662,    0,    0,  245,  243,  244,  243,  663,  663,    0,
	    0,  245,  664,  665,  664,    0,    0,  245,  115,  115,    0,    0,
	    0,  117,  666,  667,  666,  667,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  668,  668,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  669,  669,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  670,  670,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  671,  671,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  672,  672,    0,    0,    0,    0,    0,    0,    0,  116,  673,  673,
	    0,    0,    0,  674,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  675,  675,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  676,  676,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	  677,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  678,  678,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  679,  679,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  680,  680,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  681,  681,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  682,  682,    0,
	    0,    0,    0,    0,    0,    0,  116,  683,  683,    0,    0,    0,
	  684,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  685,  686,  685,  686,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  687,  687,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  688,  688,    0,    0,    0,    0,    0,    0,    0,  116,  689,
	  689,    0,    0,    0,  690,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  691,  691,    0,    0,    0,
	    0,    0,    0,    0,  116,  692,  692,    0,    0,    0,  693,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  694,  695,  694,  695,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  696,  696,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  697,
	  697,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  698,  698,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  699,  699,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  700,
	  700,    0,    0,    0,    0,    0,    0,    0,  116,  701,  701,    0,
	    0,    0,  702,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  703,  703,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,  704,    0,  117,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  705,  705,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  706,  706,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  707,  707,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  708,  708,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  709,  709,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  710,  710,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  711,  711,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  712,  712,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  713,  713,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  714,  714,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  715,  715,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  716,  716,    0,    0,
	    0,    0,    0,    0,    0,  116,  717,  717,    0,    0,    0,  718,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	  719,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  720,  721,  722,  723,  724,  725,  720,
	  721,  722,  723,  724,  725,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  726,  726,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  727,
	  727,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  728,  728,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  729,  729,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  730,
	  730,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  731,  731,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,  732,    0,  117,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  733,  733,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  734,  734,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  735,  735,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  736,  736,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	  737,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  738,  738,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  739,  739,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  740,  740,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  741,  741,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  742,  742,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  743,  743,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  744,  744,    0,    0,    0,    0,    0,
	    0,    0,  116,  745,  745,    0,    0,    0,  746,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  747,
	  747,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,  748,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  749,  749,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  750,  750,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  751,  751,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,  752,    0,  117,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  753,  753,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  754,  754,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  755,  755,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  756,  756,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  757,  757,    0,    0,    0,    0,    0,    0,    0,  116,  758,
	  758,    0,    0,    0,  759,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  760,  761,  760,  761,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  762,  762,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  763,  763,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  764,  764,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  765,  765,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  766,  766,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  767,  767,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  768,  768,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,  769,    0,  117,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  770,  771,  770,  771,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  772,  772,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  773,  773,    0,    0,    0,    0,
	    0,    0,    0,  116,  774,  774,    0,    0,    0,  775,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  776,  776,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  777,  777,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  778,  778,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  779,  779,    0,    0,    0,    0,    0,    0,    0,  116,  780,  780,
	    0,    0,    0,  781,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  782,  782,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  783,  783,
	    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,
	    0,  117,  784,  784,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,  785,    0,  117,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  786,  786,    0
	};
};
private static short[] init__http_indicies_1()
{
	return new short [] {
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  787,  787,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  788,  788,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  789,  789,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  790,  790,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,    0,  117,  791,  791,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  792,  792,    0,
	    0,    0,    0,    0,    0,    0,  116,  793,  793,    0,    0,    0,
	  794,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  795,  795,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  796,  796,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  797,
	  797,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  798,  798,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  799,  799,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  800,
	  800,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,  801,    0,  117,    0,    0,    0,    0,    0,    0,    0,  116,
	  115,  115,    0,    0,    0,  117,  802,  802,    0,    0,    0,    0,
	    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  803,  803,
	    0,    0,    0,    0,    0,    0,    0,  116,  804,  804,    0,    0,
	    0,  805,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  806,  806,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  807,  807,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  808,  808,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  809,  809,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  810,  810,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  811,  811,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  812,  812,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  813,  813,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,  814,    0,
	  117,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  815,  815,    0,    0,    0,    0,    0,    0,    0,
	  116,  115,  115,    0,    0,    0,  117,  816,  816,    0,    0,    0,
	    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,  817,
	  817,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,
	    0,    0,  117,  818,  818,    0,    0,    0,    0,    0,    0,    0,
	  116,  819,  819,    0,    0,    0,  820,    0,    0,    0,    0,    0,
	    0,    0,  116,  115,  115,    0,    0,    0,  117,  821,  821,    0,
	    0,    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,
	  117,  822,  822,    0,    0,    0,    0,    0,    0,    0,  116,  115,
	  115,    0,    0,  823,    0,  117,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  824,  824,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  825,  825,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  826,  826,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  827,  827,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  828,  828,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  829,  829,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  830,  830,    0,    0,
	    0,    0,    0,    0,    0,  116,  115,  115,    0,    0,    0,  117,
	  831,  831,    0,    0,    0,    0,    0,    0,    0,  116,  115,  115,
	    0,    0,    0,  117,  832,  832,    0,    0,    0,    0,    0,    0,
	    0,  116,  115,  115,    0,    0,    0,  117,  833,  833,    0,    0,
	    0,    0,    0,    0,    0,  116,  834,  834,    0,    0,    0,  835,
	    0,    0,    0,    0,    0,    0,    0,  116,   92,    0,    0,   93,
	  836,    0,  837,    0,  838,    0,  839,    0,  840,  841,  842,  843,
	    0,  844,    0,  845,    0,  846,    0,  847,    0,  848,  849,    0,
	  850,    0,  851,    0,  852,    0,  853,    0,  854,    0,  855,    0,
	  856,    0,  857,    0,  858,    0,  859,    0,  860,    0,  861,    0,
	  862,    0,  863,    0,  864,    0,  865,    0,  866,    0,  867,    0,
	  868,    0,  869,    0,  870,    0,  871,    0,  872,    0,  873,    0,
	  874,    0,  875,    0,  876,    0,  877,    0,  878,    0,  879,    0,
	  880,    0,  881,    0,  882,    0,  883,  884,  885,  886,    0,  887,
	    0,  888,    0,  889,    0,  890,    0,  891,    0,  892,    0,  893,
	    0,  894,    0,  895,    0,  896,  897,    0,  898,    0,  899,    0,
	  900,    0,  901,    0,  902,    0,  903,    0,  904,    0,  905,    0,
	  906,    0,  907,    0,  908,    0,  909,    0,  910,    0,  911,    0,
	  912,    0,  913,    0,  914,    0,  915,    0,  916,    0,  917,    0,
	  918,    0,  919,    0,  920,    0,  921,    0,  922,    0,  923,    0,
	  924,    0,  925,    0,  926,    0,  927,    0,  928,    0,  929,    0,
	  930,  931,    0,  932,    0,  933,    0,  934,    0,  935,    0,  936,
	    0,  937,    0,  938,    0,  939,    0,  940,    0,  941,    0,  942,
	    0,  943,    0,  944,    0,   78,   78,    0,  945,  946,  946,    0,
	  947,  947,    0,  948,  948,    0,  949,  949,    0,  950,    0,  951,
	    0,  952,  951,    0,  953,    0,  954,  953,    0,  955,  956,    0,
	  957,    0,  958,    0,  959,    0,  960,    0,  961,    0,  962,    0,
	  963,    0,  965,  966,  966,  966,  964,  967,  968,  968,  968,  964,
	  969,  970,  968,  968,  968,  964,  971,    0,  972,  973,    0,  974,
	    0,  975,  966,  966,  966,  964,  976,  977,  978,  968,  968,  968,
	  964,  979,    0,  980,    0,    0,  981,  982,    0,  983,    0,    0,
	  984,  985,    0,  986,    0,    0,  984,  976,    0,    0,  978,  969,
	    0,    0,  970,  987,    1,    2,    3,    4,    5,    6,    7,    8,
	    9,   10,   11,   12,   13,   14,   15,    0,    0,  988,    0,  989,
	  990,    0
	};
}

private static final short [] combine__http_indicies() {
	short [] combined = new short [ 9242 ];
	System.arraycopy ( init__http_indicies_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_indicies_1(), 0, combined, 8184, 1058 );
	return combined;
}
private static final short [] _http_indicies = combine__http_indicies();
private static short[] init__http_trans_targs_0()
{
	return new short [] {
	    0,    2,    4,   17,   23,   26,  614,  618,  644,  650,  657,  679,
	  685,  694,  699,  714,    3,    2,    4,   17,   23,   26,  614,  618,
	  644,  650,  657,  679,  685,  694,  699,  714,    5,  724,    6,    7,
	    8,    9,   10,   11,   12,   12,   13,   14,  715,   13,   15,   16,
	   43,   48,  102,  203,  209,  236,  240,  244,  296,  306,  329,  341,
	  374,  398,  436,  467,  483,  489,  511,  749,   18,   19,   20,   21,
	   22,   12,   24,   25,   12,   27,   30,   28,   29,   12,   31,   32,
	   33,   34,   35,   36,   37,   38,   39,   40,   41,  613,   42,   16,
	   43,   48,  102,  203,  209,  236,  240,  244,  296,  306,  329,  341,
	  374,  398,  436,  467,  483,  489,  511,   44,   43,   45,   44,   45,
	   46,  126,   47,   16,   43,   48,  102,  203,  209,  236,  240,  244,
	  296,  306,  329,  341,  374,  398,  436,  467,  483,  489,  511,   49,
	   84,   86,   90,   50,   51,   52,   53,   44,   54,   45,   55,   62,
	   70,   78,   56,   57,   58,   59,   60,   61,   44,   45,   63,   64,
	   65,   66,   67,   68,   69,   44,   45,   71,   72,   73,   74,   75,
	   76,   77,   44,   45,   79,   80,   81,   82,   83,   44,   45,   85,
	   44,   45,   87,   88,   89,   44,   45,   91,   92,   93,   94,   95,
	   96,   97,   98,   99,  100,  101,   44,   45,  103,  115,  104,  105,
	  106,  107,  108,  109,  110,  111,  112,  113,  114,   44,   45,  116,
	  199,  117,  140,  118,  119,  120,  121,  122,  123,  124,  125,  124,
	  125,  128,  133,  127,   46,  126,  127,   46,  129,  130,  131,  132,
	  127,   46,  134,  135,  136,  137,  138,  139,  127,   46,  141,  142,
	  143,  144,  145,  156,  164,  187,  190,  195,  146,  147,  148,  149,
	  150,  151,  152,  153,  154,  155,   44,   45,  157,  158,  159,  160,
	  161,  162,  163,   44,   45,  165,  172,  180,  166,  167,  168,  169,
	  170,  171,   44,   45,  173,  174,  175,  176,  177,  178,  177,  178,
	    0,   46,  126,  179,  127,   46,  126,  179,  181,  182,  183,  184,
	  185,  186,   44,   45,  188,  189,   44,   45,  191,  192,  193,  194,
	   44,   45,  196,  197,  198,   44,   45,  200,  201,  202,   44,   45,
	  204,  207,  205,  206,   44,   45,  208,   44,   45,  210,  213,  211,
	  212,   44,   45,  214,  215,  232,  216,  217,  218,  219,  218,  219,
	  220,  221,  222,  223,  224,  225,  226,  227,  228,  229,  230,  231,
	  127,   46,  233,  234,  235,   44,   45,  237,  238,  239,   44,   45,
	  241,  242,  243,   44,   45,  245,  246,  247,  265,  275,  280,  248,
	  252,  249,  250,  251,   44,   45,  253,  254,  255,  256,  257,  258,
	  259,  260,  261,  262,  263,  264,   44,   45,  266,  267,  268,  269,
	  270,  271,  272,  273,  274,   44,   45,  276,  277,  278,  279,   44,
	   45,  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
	  292,  293,  294,  295,   44,   45,  297,  298,  299,  300,  301,  302,
	  303,  304,  305,   44,   45,  307,  319,  322,  308,  309,  310,  311,
	  312,  313,  314,  315,  316,  317,  318,   44,   45,  320,  321,   44,
	   45,  323,  324,  325,  326,  327,  328,   44,   45,  330,  331,  332,
	  333,  334,  335,  336,  337,  338,  339,  340,   44,   45,  342,  344,
	  343,   44,   45,  345,  349,  346,  347,  348,   44,   45,  350,  351,
	  352,  353,  354,  355,  356,  357,  365,  358,  359,  360,  361,  362,
	  363,  364,   44,   45,  366,  367,  368,  369,  370,  371,  372,  373,
	   44,   45,  375,  379,  376,  377,  378,   44,   45,  380,  389,  381,
	  385,  382,  383,  384,   44,   45,  386,  387,  388,   44,   45,  390,
	  391,  392,  393,  394,  395,  396,  397,   44,   45,  399,  412,  400,
	  404,  401,  402,  403,   44,   45,  405,  406,  407,  408,  409,  410,
	  411,   44,   45,  413,  414,  415,  416,  417,  418,  419,  420,  421,
	  422,  423,  424,  425,  426,  427,  428,  429,  430,  431,  432,  433,
	  434,  435,   44,   45,  437,  438,   44,   45,  439,  440,  444,  441,
	  442,  443,   44,   45,  445,  446,  447,  448,  449,  450,  451,  452,
	  453,  454,  455,  456,  457,  458,  459,  458,  459,  460,  461,  462,
	  463,  464,  465,  466,  127,   46,  468,  474,  469,  470,  471,  472,
	  473,   44,   45,  475,  476,  477,  478,  479,  480,  481,  482,   44,
	   45,  484,  487,  485,  486,   44,   45,  488,   44,   45,  490,  496,
	  491,  492,  493,  494,  495,   44,   45,  497,  498,  499,  500,  501,
	  502,  503,  504,  505,  506,  507,  508,  509,  510,   44,   45,  512,
	  513,  533,  545,  575,  585,  599,  514,  515,  516,  517,  518,  519,
	  520,  521,  522,  523,  524,  525,  526,  527,  528,  529,  530,  531,
	  532,   44,   45,  534,  535,  536,  537,  538,  539,  540,  541,  542,
	  543,  544,   44,   45,  546,  563,  547,  548,  549,  550,  551,  552,
	  553,  554,  555,  558,  556,  557,   44,   45,  559,  560,  561,  562,
	   44,   45,  564,  565,  566,  567,  568,  569,  570,  571,  572,  573,
	  574,   44,   45,  576,  577,  578,  579,  580,  581,  582,  583,  584,
	   44,   45,  586,  587,  588,  589,  590,  591,  592,  593,  594,  595,
	  596,  597,  598,   44,   45,  600,  601,  602,  603,  604,  605,  606,
	  607,  608,  609,  610,  611,  612,   44,   45,  615,  616,  617,   12,
	  619,  623,  635,  638,  620,  621,  622,   12,  624,  632,  625,  626,
	  627,  628,  629,  630,  631,   12,  633,  634,   12,  636,  637,   12,
	  639,  640,  641,  642,  643,   12,  645,  646,  647,  648,  649,   12,
	  651,  652,  653,  654,  655,  656,   12,  658,  662,  665,  677,  659,
	  660,  661,   12,  663,  664,   12,  666,  667,  668,  672,  669,  670,
	  671,   12,  673,  674,  675,  676,   12,  678,   12,  680,  681,  682,
	  683,  684,   12,  686,  687,  688,  689,  690,  691,  692,  693,   12,
	  695,  696,  697,  698,   12,  700,  701,  705,  702,  703,  704,   12,
	  706,  707,  708,  709,  710,  711,  712,  713,   12,  715,  716,  717,
	  718,  719,  720,  721,  722,  723,   14,  725,  730,  726,  727,  728,
	  729,   12,  731,   12,    0,  733,  734,  733,  734,  735,  747,  736,
	  737,  736,  738,  739,  740,  739,  746,  741,  742,  743,  750,  744,
	  743,  745,  742,  752,  751,    0,  753
	};
}

private static final short _http_trans_targs[] = init__http_trans_targs_0();


private static short[] init__http_trans_actions_0()
{
	return new short [] {
	   17,  124,  124,  124,  124,  443,  124,  124,  124,  124,  124,  124,
	  124,  124,  124,  443,   15,   15,   15,   15,   15,  100,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,  100,   15,   15,   15,   15,
	   15,   15,   15,   15,   76,   15,  109,  112,  112,   15,   15,   19,
	  151,  151,  151,  151,  151,  151,  151,  151,  151,  151,  151,  151,
	  151,  151,  151,  151,  151,  151,  151,  127,   15,   15,   15,   15,
	   15,   37,   15,   15,   28,   15,   15,   15,   15,   25,   15,   15,
	   15,  103,   15,  106,   15,   97,   97,   97,   15,   15,   15,   22,
	  155,  155,  155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
	  155,  155,  155,  155,  155,  155,  155,  136,   15,  136,   15,   15,
	  480,  139,   15,  148,  451,  451,  451,  451,  451,  451,  451,  451,
	  451,  451,  451,  451,  451,  451,  451,  451,  451,  451,  451,   15,
	   15,   15,   15,   15,   15,   15,   15,  159,   15,  159,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,  163,  163,   15,   15,
	   15,   15,   15,   15,   15,  167,  167,   15,   15,   15,   15,   15,
	   15,   15,  171,  171,   15,   15,   15,   15,   15,  175,  175,   15,
	  179,  179,   15,   15,   15,  183,  183,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  187,  187,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,  191,  191,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,  195,  195,   15,
	   15,  139,  139,  142,  447,   15,   15,  145,   15,   15,   15,   15,
	  431,  465,   15,   15,   15,   15,   15,   15,  435,  470,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  219,  219,   15,   15,   15,   15,
	   15,   15,   15,  199,  199,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  203,  203,   15,   15,   15,   15,  207,  207,   15,   15,
	  121,  485,  419,  415,  423,  455,  118,  115,   15,   15,   15,   15,
	   15,   15,  211,  211,   15,   15,  215,  215,   15,   15,   15,   15,
	  223,  223,   15,   15,   15,  227,  227,   15,   15,   15,  231,  231,
	   15,   15,   15,   15,  235,  235,   15,  239,  239,   15,   15,   15,
	   15,  243,  243,   15,   15,   15,   15,   15,  247,  247,   15,   15,
	  139,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	  439,  475,   15,   15,   15,  251,  251,   15,   15,   15,  255,  255,
	   15,   15,   15,  259,  259,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,  263,  263,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  267,  267,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,  271,  271,   15,   15,   15,   15,  275,
	  275,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,  279,  279,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,  283,  283,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,  287,  287,   15,   15,  291,
	  291,   15,   15,   15,   15,   15,   15,  295,  295,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,  299,  299,   15,   15,
	   15,  303,  303,   15,   15,   15,   15,   15,  307,  307,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  311,  311,   15,   15,   15,   15,   15,   15,   15,   15,
	  315,  315,   15,   15,   15,   15,   15,  319,  319,   15,   15,   15,
	   15,   15,   15,   15,  323,  323,   15,   15,   15,  327,  327,   15,
	   15,   15,   15,   15,   15,   15,   15,  331,  331,   15,   15,   15,
	   15,   15,   15,   15,  335,  335,   15,   15,   15,   15,   15,   15,
	   15,  339,  339,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  343,  343,   15,   15,  347,  347,   15,   15,   15,   15,
	   15,   15,  351,  351,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,  355,  355,   15,   15,  139,   15,   15,
	   15,   15,   15,   15,  427,  460,   15,   15,   15,   15,   15,   15,
	   15,  359,  359,   15,   15,   15,   15,   15,   15,   15,   15,  363,
	  363,   15,   15,   15,   15,  367,  367,   15,  371,  371,   15,   15,
	   15,   15,   15,   15,   15,  375,  375,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,  379,  379,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  383,  383,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,  387,  387,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  391,  391,   15,   15,   15,   15,
	  395,  395,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  399,  399,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	  403,  403,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,  407,  407,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,  411,  411,   15,   15,   15,   52,
	   15,   15,   15,   15,   15,   15,   15,   79,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   73,   15,   15,   55,   15,   15,   58,
	   15,   15,   15,   15,   15,   82,   15,   15,   15,   15,   15,   85,
	   15,   15,   15,   15,   15,   15,   43,   15,   15,   15,   15,   15,
	   15,   15,   94,   15,   15,   31,   15,   15,   15,   15,   15,   15,
	   15,   61,   15,   15,   15,   15,   64,   15,   34,   15,   15,   15,
	   15,   15,   70,   15,   15,   15,   15,   15,   15,   15,   15,   88,
	   15,   15,   15,   15,   46,   15,   15,   15,   15,   15,   15,   67,
	   15,   15,   15,   15,   15,   15,   15,   15,   91,   15,  100,   15,
	   15,   15,   15,  103,   15,  106,   15,   15,   15,   15,   15,   15,
	   15,   40,   15,   49,  133,  130,  130,   11,   11,    0,    0,    0,
	    0,    5,    0,  130,    0,   11,    0,    0,    9,    9,    0,    0,
	    0,    0,    0,    3,    1,    0,    7
	};
}

private static final short _http_trans_actions[] = init__http_trans_actions_0();


private static short[] init__http_to_state_actions_0()
{
	return new short [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,   13,    0,    0,    0
	};
}

private static final short _http_to_state_actions[] = init__http_to_state_actions_0();


private static short[] init__http_eof_actions_0()
{
	return new short [] {
	    0,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,  121,  121,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
	  133,  133,  133,   17,   17,   17,  133,  133,   17,   17,   17,   17,
	   17,   17,   17,   17,    0,    0,    0,    0,    0,    0
	};
}

private static final short _http_eof_actions[] = init__http_eof_actions_0();


static final int http_start = 1;
static final int http_first_final = 749;
static final int http_error = 0;

static final int http_en_chunked_body = 732;
static final int http_en_identity_body = 751;
static final int http_en_untracked_body = 748;
static final int http_en_upgraded = 753;
static final int http_en_main = 1;


// line 574 "src/rl/picard/http/HttpParser.rl"

  /*
  * Variable used by ragel to represent the current state of the
  * parser. This must be an integer and it should persist across
  * invocations of the machine when the data is broken into blocks
  * that are processed independently. This variable may be modified
  * from outside the execution loop, but not from within.
  */
  private int cs;

  /*
  * Stores some miscellaneous parser state such as whether or not
  * the body is chunked or not, whether or not the connection is
  * keep alive or upgraded, etc...
  */
  private int flags;

  /*
  * The number of bytes read while parsing the HTTP message
  * head. This is to protect against a possible attack where
  * somebody sends unbounded HTTP message heads and causes out of
  * memory errors.
  */
  private int hread;

  /*
  * When starting to parse an HTTP message head, an object is
  * requested from the callback. This object should be the
  * structure that contains HTTP headers for the message being
  * processed.
  */
  private Object headers;

  /*
  * The HTTP protocol version used by the current message being
  * parsed. The major and minor numbers are broken up since they
  * will be moved into a clojure vector.
  */
  private short httpMajor;
  private short httpMinor;

  /*
  * Tracks whether the current parser instance is parsing an HTTP
  * request or an HTTP response. Even though the parser can be
  * reused to parse multiple messages, each message must be of the
  * same type. In other words, if the first message a parser
  * instance parses is an HTTP request, then all subsequent
  * messages parsed by the same instance must also be HTTP
  * requests.
  */
  final private MessageType type;

  /*
  * Tracks the HTTP method of the currently parsed request. If the
  * HTTP message being currently parsed is a response, then this
  * will be nil.
  */
  private HttpMethod method;

  /*
  * The response status if the current message being parsed is a
  * response.
  */
  private short status;

  /*
   * Tracks the various message information
   */
  private URI          uri;
  private ChunkedValue uriMark;
  private String       headerName;
  private ChunkedValue headerNameChunks;
  private HeaderValue  headerValue;

  /*
   * Track the content length of the HTTP message
   */
  private long contentLength;

  /*
   * Possibly aggregated body
   */
  private Buffer body;

  /*
   * The object that gets called on various parse events.
   */
  private HttpParserCallback callback;

  public final static HttpParser request(HttpParserCallback callback) {
    return new HttpParser(MessageType.REQUEST, callback);
  }

  public final static HttpParser response(HttpParserCallback callback) {
    return new HttpParser(MessageType.RESPONSE, callback);
  }

  public HttpParser(MessageType type, HttpParserCallback callback) {
    
// line 2811 "src/jvm/picard/http/HttpParser.java"
	{
	cs = http_start;
	}

// line 673 "src/rl/picard/http/HttpParser.rl"

    this.type     = type;
    this.callback = callback;
    reset();
  }

  public boolean isHttp11() {
    return httpMajor == 1 && httpMinor == 1;
  }

  public boolean isRequest() {
    return type == MessageType.REQUEST;
  }

  public boolean isResponse() {
    return type == MessageType.RESPONSE;
  }

  public boolean isParsingHead() {
    return ( flags & PARSING_HEAD ) == PARSING_HEAD;
  }

  public boolean hasBody() {
    return (isIdentityBody() || isChunkedBody()) &&
      (isRequest() || (status >= 200 && status != 204 && status != 304));
  }

  public boolean isIdentityBody() {
    return ( flags & IDENTITY_BODY ) == IDENTITY_BODY;
  }

  public boolean isChunkedBody() {
    return ( flags & CHUNKED_BODY ) == CHUNKED_BODY;
  }

  public boolean isKeepAlive() {
    return ( flags & KEEP_ALIVE ) == KEEP_ALIVE;
  }

  public boolean isConnectionClose() {
    return ( flags & CONN_CLOSE ) == CONN_CLOSE;
  }

  public boolean isUpgrade() {
    return ( flags & UPGRADE ) == UPGRADE || method == HttpMethod.CONNECT;
  }

  public boolean isExpectingContinue() {
    return ( flags & EXPECT_CONTINUE ) == EXPECT_CONTINUE;
  }

  public boolean isError() {
    return ( flags & ERROR ) == ERROR;
  }

  public HttpMethod getMethod() {
    return method;
  }

  public short getHttpMajor() {
    return httpMajor;
  }

  public short getHttpMinor() {
    return httpMinor;
  }

  public String getPathInfo() {
    String pathInfo = uri.getPath();

    if (pathInfo == null) {
      return SLASH;
    }
    else if (pathInfo.equals(EMPTY_STRING)) {
      return SLASH;
    }

    return pathInfo;
  }

  public String getQueryString() {
    String qs = uri.getQuery();

    if (qs == null) {
      return EMPTY_STRING;
    }

    return qs;
  }

  public int execute(Buffer buf) {
    // First make sure that the parser isn't in an error state
    if (isError()) {
      throw new HttpParserException("The parser is in an error state.");
    }

    // Setup ragel variables
    int p   = buf.position();
    int pe  = buf.limit();
    int eof = pe + 1;

    if (isParsingHead()) {
      bridge(buf, uriMark);
      bridge(buf, headerNameChunks);
      bridge(buf, headerValue);
    }

    try {
      parseLoop: {
        
// line 783 "src/rl/picard/http/HttpParser.rl"
        
// line 2929 "src/jvm/picard/http/HttpParser.java"
	{
	int _klen;
	int _trans = 0;
	int _widec;
	int _acts;
	int _nacts;
	int _keys;
	int _goto_targ = 0;

	_goto: while (true) {
	switch ( _goto_targ ) {
	case 0:
	if ( p == pe ) {
		_goto_targ = 4;
		continue _goto;
	}
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
case 1:
	_widec = ( buf.get(p));
	_keys = _http_cond_offsets[cs]*2
;	_klen = _http_cond_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys
;		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_cond_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_cond_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				switch ( _http_cond_spaces[_http_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = 65536 + (( buf.get(p)) - 0);
		if ( 
// line 442 "src/rl/picard/http/HttpParser.rl"

      contentLength > 0
     ) _widec += 65536;
		break;
	}
				}
				break;
			}
		}
	}

	_match: do {
	_keys = _http_key_offsets[cs];
	_trans = _http_index_offsets[cs];
	_klen = _http_single_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + _klen - 1;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 1;
			else if ( _widec > _http_trans_keys[_mid] )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				break _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _http_range_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_trans_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				break _match;
			}
		}
		_trans += _klen;
	}
	} while (false);

	_trans = _http_indicies[_trans];
	cs = _http_trans_targs[_trans];

	if ( _http_trans_actions[_trans] != 0 ) {
		_acts = _http_trans_actions[_trans];
		_nacts = (int) _http_actions[_acts++];
		while ( _nacts-- > 0 )
	{
			switch ( _http_actions[_acts++] )
			{
	case 0:
// line 154 "src/rl/picard/http/HttpParser.rl"
	{
      if (type != MessageType.REQUEST) {
        throw new HttpParserException("Expecting HTTP response but got request");
      }
    }
	break;
	case 1:
// line 160 "src/rl/picard/http/HttpParser.rl"
	{
      if (type != MessageType.RESPONSE) {
        throw new HttpParserException("Expecting HTTP request but got response");
      }
    }
	break;
	case 2:
// line 166 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.HEAD;        }
	break;
	case 3:
// line 167 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.GET;         }
	break;
	case 4:
// line 168 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.POST;        }
	break;
	case 5:
// line 169 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PUT;         }
	break;
	case 6:
// line 170 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.DELETE;      }
	break;
	case 7:
// line 171 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CONNECT;     }
	break;
	case 8:
// line 172 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.OPTIONS;     }
	break;
	case 9:
// line 173 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.TRACE;       }
	break;
	case 10:
// line 174 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.COPY;        }
	break;
	case 11:
// line 175 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.LOCK;        }
	break;
	case 12:
// line 176 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKCOL;       }
	break;
	case 13:
// line 177 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MOVE;        }
	break;
	case 14:
// line 178 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPFIND;    }
	break;
	case 15:
// line 179 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPPATCH;   }
	break;
	case 16:
// line 180 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNLOCK;      }
	break;
	case 17:
// line 181 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.REPORT;      }
	break;
	case 18:
// line 182 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKACTIVITY;  }
	break;
	case 19:
// line 183 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CHECKOUT;    }
	break;
	case 20:
// line 184 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MERGE;       }
	break;
	case 21:
// line 185 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MSEARCH;     }
	break;
	case 22:
// line 186 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.NOTIFY;      }
	break;
	case 23:
// line 187 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.SUBSCRIBE;   }
	break;
	case 24:
// line 188 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNSUBSCRIBE; }
	break;
	case 25:
// line 189 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PATCH;       }
	break;
	case 26:
// line 191 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT);                    }
	break;
	case 27:
// line 192 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_CHARSET);            }
	break;
	case 28:
// line 193 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_ENCODING);           }
	break;
	case 29:
// line 194 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_LANGUAGE);           }
	break;
	case 30:
// line 195 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_RANGES);             }
	break;
	case 31:
// line 196 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AGE);                       }
	break;
	case 32:
// line 197 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ALLOW);                     }
	break;
	case 33:
// line 198 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AUTHORIZATION);             }
	break;
	case 34:
// line 199 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CACHE_CONTROL);             }
	break;
	case 35:
// line 200 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONNECTION);                }
	break;
	case 36:
// line 201 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_ENCODING);          }
	break;
	case 37:
// line 202 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LANGUAGE);          }
	break;
	case 38:
// line 203 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LENGTH);            }
	break;
	case 39:
// line 204 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LOCATION);          }
	break;
	case 40:
// line 205 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_MD5);               }
	break;
	case 41:
// line 206 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_DISPOSITION);       }
	break;
	case 42:
// line 207 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_RANGE);             }
	break;
	case 43:
// line 208 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_TYPE);              }
	break;
	case 44:
// line 209 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_COOKIE);                    }
	break;
	case 45:
// line 210 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DATE);                      }
	break;
	case 46:
// line 211 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DNT);                       }
	break;
	case 47:
// line 212 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ETAG);                      }
	break;
	case 48:
// line 213 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPECT);                    }
	break;
	case 49:
// line 214 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPIRES);                   }
	break;
	case 50:
// line 215 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_FROM);                      }
	break;
	case 51:
// line 216 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_HOST);                      }
	break;
	case 52:
// line 217 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MATCH);                  }
	break;
	case 53:
// line 218 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MODIFIED_SINCE);         }
	break;
	case 54:
// line 219 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_NONE_MATCH);             }
	break;
	case 55:
// line 220 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_RANGE);                  }
	break;
	case 56:
// line 221 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_UNMODIFIED_SINCE);       }
	break;
	case 57:
// line 222 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_KEEP_ALIVE);                }
	break;
	case 58:
// line 223 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LAST_MODIFIED);             }
	break;
	case 59:
// line 224 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LINK);                      }
	break;
	case 60:
// line 225 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LOCATION);                  }
	break;
	case 61:
// line 226 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_MAX_FORWARDS);              }
	break;
	case 62:
// line 227 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_P3P);                       }
	break;
	case 63:
// line 228 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PRAGMA);                    }
	break;
	case 64:
// line 229 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHENTICATE);        }
	break;
	case 65:
// line 230 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHORIZATION);       }
	break;
	case 66:
// line 231 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RANGE);                     }
	break;
	case 67:
// line 232 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFERER);                   }
	break;
	case 68:
// line 233 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFRESH);                   }
	break;
	case 69:
// line 234 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RETRY_AFTER);               }
	break;
	case 70:
// line 235 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SERVER);                    }
	break;
	case 71:
// line 236 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SET_COOKIE);                }
	break;
	case 72:
// line 237 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_STRICT_TRANSPORT_SECURITY); }
	break;
	case 73:
// line 238 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TE);                        }
	break;
	case 74:
// line 239 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRAILER);                   }
	break;
	case 75:
// line 240 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRANSFER_ENCODING);         }
	break;
	case 76:
// line 241 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_UPGRADE);                   }
	break;
	case 77:
// line 242 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_USER_AGENT);                }
	break;
	case 78:
// line 243 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VARY);                      }
	break;
	case 79:
// line 244 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VIA);                       }
	break;
	case 80:
// line 245 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WARNING);                   }
	break;
	case 81:
// line 246 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WWW_AUTHENTICATE);          }
	break;
	case 82:
// line 247 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_CONTENT_TYPE_OPTIONS);    }
	break;
	case 83:
// line 248 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_DO_NOT_TRACK);            }
	break;
	case 84:
// line 249 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_FOR);           }
	break;
	case 85:
// line 250 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_PROTO);         }
	break;
	case 86:
// line 251 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FRAME_OPTIONS);           }
	break;
	case 87:
// line 252 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_POWERED_BY);              }
	break;
	case 88:
// line 253 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_REQUESTED_WITH);          }
	break;
	case 89:
// line 254 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_XSS_PROTECTION);          }
	break;
	case 90:
// line 256 "src/rl/picard/http/HttpParser.rl"
	{
      status *= 10;
      status += ( buf.get(p)) - '0';
    }
	break;
	case 91:
// line 261 "src/rl/picard/http/HttpParser.rl"
	{
      httpMinor = 0;
    }
	break;
	case 92:
// line 265 "src/rl/picard/http/HttpParser.rl"
	{
      httpMajor *= 10;
      httpMajor += ( buf.get(p)) - '0';

      if (httpMajor > 999) {
        throw new HttpParserException("The HTTP major version is invalid.");
      }
    }
	break;
	case 93:
// line 274 "src/rl/picard/http/HttpParser.rl"
	{
      httpMinor *= 10;
      httpMinor += ( buf.get(p)) - '0';

      if (httpMinor > 999) {
        throw new HttpParserException("The HTTP minor version is invalid.");
      }
    }
	break;
	case 94:
// line 283 "src/rl/picard/http/HttpParser.rl"
	{
      uriMark = new ChunkedValue(buf, p);
    }
	break;
	case 95:
// line 287 "src/rl/picard/http/HttpParser.rl"
	{
      uriMark.push(p);

      String uriStr = uriMark.materializeStr();

      try {
        uri = new URI(uriStr);
      }
      catch (URISyntaxException e) {
        throw new HttpParserException("The URI is not valid: " + uriStr);
      }

      uriMark = null;
    }
	break;
	case 96:
// line 302 "src/rl/picard/http/HttpParser.rl"
	{
      if (contentLength >= ALMOST_MAX_LONG) {
        throw new HttpParserException("The content-length is WAY too big");
      }

      contentLength *= 10;
      contentLength += ( buf.get(p)) - '0';
    }
	break;
	case 97:
// line 311 "src/rl/picard/http/HttpParser.rl"
	{
      // Hack to get Java to compile
      if (true) {
        throw new HttpParserException("The content-length is in an invalid format");
      }
    }
	break;
	case 98:
// line 318 "src/rl/picard/http/HttpParser.rl"
	{
      if (isChunkedBody()) {
        throw new HttpParserException("The message head is invalid");
      }

      flags |= IDENTITY_BODY;

      headerName  = null;
      headerValue = null;
      callback.header(headers, HDR_CONTENT_LENGTH, String.valueOf(contentLength));
    }
	break;
	case 99:
// line 330 "src/rl/picard/http/HttpParser.rl"
	{
      if (isIdentityBody()) {
        throw new HttpParserException("The message head is invalid");
      }

      flags |= CHUNKED_BODY;

      headerName  = null;
      headerValue = null;
      callback.header(headers, HDR_TRANSFER_ENCODING, VAL_CHUNKED);
    }
	break;
	case 100:
// line 342 "src/rl/picard/http/HttpParser.rl"
	{
      flags |= CONN_CLOSE;

      headerName  = null;
      headerValue = null;
      callback.header(headers, HDR_CONNECTION, VAL_CLOSE);
    }
	break;
	case 101:
// line 350 "src/rl/picard/http/HttpParser.rl"
	{
      flags |= UPGRADE;

      headerName  = null;
      headerValue = null;
      callback.header(headers, HDR_CONNECTION, VAL_UPGRADE);
    }
	break;
	case 102:
// line 358 "src/rl/picard/http/HttpParser.rl"
	{
      if (isHttp11()) {
        flags |= EXPECT_CONTINUE;
      }

      headerName  = null;
      headerValue = null;
      callback.header(headers, HDR_EXPECT, VAL_100_CONTINUE);
    }
	break;
	case 103:
// line 368 "src/rl/picard/http/HttpParser.rl"
	{
      reset();

      flags  |= PARSING_HEAD;
      headers = callback.blankHeaders();
    }
	break;
	case 104:
// line 375 "src/rl/picard/http/HttpParser.rl"
	{
      // Not parsing the HTTP message head anymore
      flags ^= PARSING_HEAD;

      Buffer b = null;

      if (isUpgrade()) {
        cs = 753;
      }
      else if (isRequest() || (status >= 200 && status != 204 && status != 304)){
        if (isIdentityBody()) {
          int remaining = buf.limit() - p;
          int toRead;

          // If the remaining content length is present in the
          // buffer, just include it in the callback.
          if (remaining > contentLength && !isExpectingContinue()) {
            toRead = (int) contentLength;

            ++p;

            b = slice(buf, p, p + toRead);
            p += toRead - 1;
            contentLength = 0;
          }
          // If the entire body is less than a set maximum (default 4kb), just
          // allocate a new buffer and copy the chunks into it.
          else if (contentLength <= MAX_BUFFERED && !isExpectingContinue()) {
            body   = Buffer.allocate((int) contentLength);
            toRead = remaining - 1;

            if (remaining > 1) {
              ++p;

              body.put(buf, p, toRead);

              contentLength -= toRead;
              p += toRead - 1;
            }

            cs = 751;
          }
          else {
            cs = 751;
          }
        }
        else if (isChunkedBody()) {
          cs = 732;
        }
        else if (isResponse() && isConnectionClose()) {
          cs = 748;
        }
      }

      if (body == null) {
        if (isRequest()) {
          callback.request(this, headers, b);
        }
        else {
          callback.response(this, status, headers, b);
        }

        // Unset references to allow the GC to reclaim the memory
        resetHeadState();
      }
    }
	break;
	case 105:
// line 446 "src/rl/picard/http/HttpParser.rl"
	{
      int toRead = min(contentLength, buf.limit() - p);

      if (toRead > 0) {
        contentLength -= toRead;

        if (body != null) {
          body.put(buf, p, toRead);

          p += toRead - 1;

          if (contentLength == 0) {
            body.flip();

            if (isRequest()) {
              callback.request(this, headers, body);
            }
            else {
              callback.response(this, status, headers, body);
            }

            body = null;
            resetHeadState();

            cs = 1;
          }
        }
        else {
          callback.body(this, slice(buf, p, p + toRead));

          p += toRead - 1;

          if (contentLength == 0) {
            callback.body(this, null);
            cs = 1;
          }
        }
      }
    }
	break;
	case 106:
// line 486 "src/rl/picard/http/HttpParser.rl"
	{
      int toRead = buf.limit() - p;

      if (toRead > 0) {
        callback.body(this, slice(buf, p, p + toRead));
        p += toRead - 1;
      }
    }
	break;
	case 107:
// line 495 "src/rl/picard/http/HttpParser.rl"
	{
      int toRead = min(contentLength, buf.limit() - p);

      if (toRead > 0) {
        contentLength -= toRead;

        callback.body(this, slice(buf, p, p + toRead));

        p += toRead - 1;
      }
    }
	break;
	case 108:
// line 507 "src/rl/picard/http/HttpParser.rl"
	{
      int remaining = buf.limit() - p;

      if (remaining > 0) {
        callback.message(this, slice(buf, p, buf.limit()));
        break parseLoop;
      }
    }
	break;
	case 109:
// line 516 "src/rl/picard/http/HttpParser.rl"
	{
      callback.body(this, null);
    }
	break;
	case 110:
// line 520 "src/rl/picard/http/HttpParser.rl"
	{
      contentLength = 0;
    }
	break;
	case 111:
// line 524 "src/rl/picard/http/HttpParser.rl"
	{
      if (contentLength >= ALMOST_MAX_LONG_HEX) {
        throw new HttpParserException("The content-length is WAY too big");
      }

      contentLength *= 16;
      contentLength += HEX_MAP[( buf.get(p))];
    }
	break;
	case 112:
// line 533 "src/rl/picard/http/HttpParser.rl"
	{
      if (true) {
        throw new HttpParserException("Invalid chunk size");
      }
    }
	break;
	case 114:
// line 543 "src/rl/picard/http/HttpParser.rl"
	{
      if (++hread > MAX_HEADER_SIZE) {
        throw new HttpParserException("The HTTP message head is too large");
      }
    }
	break;
	case 115:
// line 549 "src/rl/picard/http/HttpParser.rl"
	{
      if (true) {
        String msg = parseErrorMsg(buf, p);
        throw new HttpParserException("Something went wrong:\n" + msg);
      }
    }
	break;
	case 116:
// line 7 "src/rl/picard/http/common.rl"
	{
      headerNameChunks = new ChunkedValue(buf, p);
  }
	break;
	case 117:
// line 11 "src/rl/picard/http/common.rl"
	{
      if (headerNameChunks != null) {
          headerNameChunks.push(p);

          headerName       = headerNameChunks.materializeStr().toLowerCase();
          headerNameChunks = null;
      }
  }
	break;
	case 118:
// line 20 "src/rl/picard/http/common.rl"
	{
      if (headerValue == null) {
          headerValue = new HeaderValue(buf, p);
      }
      else {
          headerValue.startLine(buf, p);
      }
  }
	break;
	case 119:
// line 29 "src/rl/picard/http/common.rl"
	{
      if (headerValue != null) {
          headerValue.mark(p);
      }
  }
	break;
	case 120:
// line 35 "src/rl/picard/http/common.rl"
	{
      if (headerValue != null) {
          headerValue.push();
      }
  }
	break;
	case 121:
// line 41 "src/rl/picard/http/common.rl"
	{
      if (headerValue != null) {
          callback.header(headers, headerName, headerValue.materializeStr());

          headerName  = null;
          headerValue = null;
      }
      else if (headerName != null) {
          callback.header(headers, headerName, HttpParser.EMPTY_STRING);
          headerName = null;
      }
  }
	break;
// line 3812 "src/jvm/picard/http/HttpParser.java"
			}
		}
	}

case 2:
	_acts = _http_to_state_actions[cs];
	_nacts = (int) _http_actions[_acts++];
	while ( _nacts-- > 0 ) {
		switch ( _http_actions[_acts++] ) {
	case 113:
// line 539 "src/rl/picard/http/HttpParser.rl"
	{
      cs = 1;
    }
	break;
// line 3828 "src/jvm/picard/http/HttpParser.java"
		}
	}

	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
	if ( ++p != pe ) {
		_goto_targ = 1;
		continue _goto;
	}
case 4:
	if ( p == eof )
	{
	int __acts = _http_eof_actions[cs];
	int __nacts = (int) _http_actions[__acts++];
	while ( __nacts-- > 0 ) {
		switch ( _http_actions[__acts++] ) {
	case 97:
// line 311 "src/rl/picard/http/HttpParser.rl"
	{
      // Hack to get Java to compile
      if (true) {
        throw new HttpParserException("The content-length is in an invalid format");
      }
    }
	break;
	case 112:
// line 533 "src/rl/picard/http/HttpParser.rl"
	{
      if (true) {
        throw new HttpParserException("Invalid chunk size");
      }
    }
	break;
	case 115:
// line 549 "src/rl/picard/http/HttpParser.rl"
	{
      if (true) {
        String msg = parseErrorMsg(buf, p);
        throw new HttpParserException("Something went wrong:\n" + msg);
      }
    }
	break;
// line 3873 "src/jvm/picard/http/HttpParser.java"
		}
	}
	}

case 5:
	}
	break; }
	}

// line 784 "src/rl/picard/http/HttpParser.rl"
      }
    }
    catch (RuntimeException e) {
      flags |= ERROR;
      throw e;
    }

    return p;
  }

  private void setHeaderName(String name) {
    headerName       = name;
    headerNameChunks = null;
  }

  private void bridge(Buffer buf, ChunkedValue chunk) {
    if (chunk != null) {
      chunk.bridge(buf);
    }
  }

  private void reset() {
    flags         = 0;
    hread         = 0;
    status        = 0;
    httpMajor     = 0;
    httpMinor     = 9;
    contentLength = 0;
  }

  private void resetHeadState() {
    headers          = null;
    method           = null;
    uri              = null;
    uriMark          = null;
    headerName       = null;
    headerNameChunks = null;
    headerValue      = null;
  }

  private Buffer slice(Buffer buf, int from, int to) {
    Buffer retval = buf.duplicate();

    retval.position(from);
    retval.limit(to);

    return retval;
  }

  private int min(long a, int b) {
    long cappedA = Math.min((long) Integer.MAX_VALUE, a);
    return Math.min((int) cappedA, b);
  }

  private String parseErrorMsg(Buffer buf, int fpc) {
    int from = Math.max(0, fpc - 35);
    int to   = Math.min(fpc + 35, buf.limit());

    Buffer before = slice(buf, from, fpc);
    Buffer after  = slice(buf, fpc, to);

    byte[] beforeBytes = new byte[before.remaining()];
    byte[] afterBytes  = new byte[after.remaining()];

    before.get(beforeBytes);
    after.get(afterBytes);

    return new String(beforeBytes) + "|" + new String(afterBytes);
  }
}
