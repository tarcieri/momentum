
// line 1 "src/rl/picard/http/HttpParser.rl"
package picard.http;

import clojure.lang.AFn;
import java.nio.ByteBuffer;

/**
 * TODO:
 *   - Limit the number of times marks can be bridged.
 *   - Unify HeaderValue and marks.
 *   - Check for overflows in the chunk size
 *   - Improve the handling of Connection header values
 */
public final class HttpParser extends AFn {
    public enum MessageType {
        REQUEST,
        RESPONSE
    }

    public enum HttpMethod {
        HEAD,
        GET,
        POST,
        PUT,
        DELETE,
        CONNECT,
        OPTIONS,
        TRACE,

        // webdav
        COPY,
        LOCK,
        MKCOL,
        MOVE,
        PROPFIND,
        PROPPATCH,
        UNLOCK,

        // subversion
        REPORT,
        MKACTIVITY,
        CHECKOUT,
        MERGE,

        // upnp
        MSEARCH,
        NOTIFY,
        SUBSCRIBE,
        UNSUBSCRIBE,

        // RFC-5789
        PATCH
    }

    public static final byte SP = (byte) 0x20; // Space
    public static final byte HT = (byte) 0x09; // Horizontal tab
    public static final ByteBuffer SPACE = ByteBuffer.wrap(new byte[] { SP });

    // Map of hexadecimal chars to their numeric value
    public static final byte[] HEX_MAP = new byte [] {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
         0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
    };

    // Listing out all of the headers that we are going to use
    public static final String HDR_ACCEPT                    = "accept";
    public static final String HDR_ACCEPT_CHARSET            = "accept-charset";
    public static final String HDR_ACCEPT_ENCODING           = "accept-encoding";
    public static final String HDR_ACCEPT_LANGUAGE           = "accept-language";
    public static final String HDR_ACCEPT_RANGES             = "accept-ranges";
    public static final String HDR_AGE                       = "age";
    public static final String HDR_ALLOW                     = "allow";
    public static final String HDR_AUTHORIZATION             = "authorization";
    public static final String HDR_CACHE_CONTROL             = "cache-control";
    public static final String HDR_CONNECTION                = "connection";
    public static final String HDR_CONTENT_ENCODING          = "content-encoding";
    public static final String HDR_CONTENT_LANGUAGE          = "content-language";
    public static final String HDR_CONTENT_LENGTH            = "content-length";
    public static final String HDR_CONTENT_LOCATION          = "content-location";
    public static final String HDR_CONTENT_MD5               = "content-md5";
    public static final String HDR_CONTENT_DISPOSITION       = "content-disposition";
    public static final String HDR_CONTENT_RANGE             = "content-range";
    public static final String HDR_CONTENT_TYPE              = "content-type";
    public static final String HDR_COOKIE                    = "cookie";
    public static final String HDR_DATE                      = "date";
    public static final String HDR_DNT                       = "dnt";
    public static final String HDR_ETAG                      = "etag";
    public static final String HDR_EXPECT                    = "expect";
    public static final String HDR_EXPIRES                   = "expires";
    public static final String HDR_FROM                      = "from";
    public static final String HDR_HOST                      = "host";
    public static final String HDR_IF_MATCH                  = "if-match";
    public static final String HDR_IF_MODIFIED_SINCE         = "if-modified-since";
    public static final String HDR_IF_NONE_MATCH             = "if-none-match";
    public static final String HDR_IF_RANGE                  = "if-range";
    public static final String HDR_IF_UNMODIFIED_SINCE       = "if-unmodified-since";
    public static final String HDR_KEEP_ALIVE                = "keep-alive";
    public static final String HDR_LAST_MODIFIED             = "last-modified";
    public static final String HDR_LINK                      = "link";
    public static final String HDR_LOCATION                  = "location";
    public static final String HDR_MAX_FORWARDS              = "max-forwards";
    public static final String HDR_P3P                       = "p3p";
    public static final String HDR_PRAGMA                    = "pragma";
    public static final String HDR_PROXY_AUTHENTICATE        = "proxy-authenticate";
    public static final String HDR_PROXY_AUTHORIZATION       = "proxy-authorization";
    public static final String HDR_RANGE                     = "range";
    public static final String HDR_REFERER                   = "referer";
    public static final String HDR_REFRESH                   = "refresh";
    public static final String HDR_RETRY_AFTER               = "retry-after";
    public static final String HDR_SERVER                    = "server";
    public static final String HDR_SET_COOKIE                = "set-cookie";
    public static final String HDR_STRICT_TRANSPORT_SECURITY = "strict-transport-security";
    public static final String HDR_TE                        = "te";
    public static final String HDR_TRAILER                   = "trailer";
    public static final String HDR_TRANSFER_ENCODING         = "transfer-encoding";
    public static final String HDR_UPGRADE                   = "upgrade";
    public static final String HDR_USER_AGENT                = "user-agent";
    public static final String HDR_VARY                      = "vary";
    public static final String HDR_VIA                       = "via";
    public static final String HDR_WARNING                   = "warning";
    public static final String HDR_WWW_AUTHENTICATE          = "www-authenticate";
    public static final String HDR_X_CONTENT_TYPE_OPTIONS    = "x-content-type-options";
    public static final String HDR_X_DO_NOT_TRACK            = "x-do-not-track";
    public static final String HDR_X_FORWARDED_FOR           = "x-forwarded-for";
    public static final String HDR_X_FORWARDED_PROTO         = "x-forwarded-proto";
    public static final String HDR_X_FRAME_OPTIONS           = "x-frame-options";
    public static final String HDR_X_POWERED_BY              = "x-powered-by";
    public static final String HDR_X_REQUESTED_WITH          = "x-requested-with";
    public static final String HDR_X_XSS_PROTECTION          = "x-xss-protection";

    public static final String VAL_CHUNKED = "chunked";
    public static final String VAL_CLOSE   = "close";
    public static final String VAL_UPGRADE = "upgrade";

    public static boolean isWhiteSpace(byte b) {
        return b == SP || b == HT;
    }

    
// line 500 "src/rl/picard/http/HttpParser.rl"


    public static final long ALMOST_MAX_LONG = Long.MAX_VALUE / 10 - 10;
    public static final int  MAX_HEADER_SIZE = 100 * 1024;
    public static final int  PARSING_HEAD    = 1 << 0;
    public static final int  IDENTITY_BODY   = 1 << 1;
    public static final int  CHUNKED_BODY    = 1 << 2;
    public static final int  CONN_CLOSE      = 1 << 3;
    public static final int  KEEP_ALIVE      = 1 << 4;
    public static final int  UPGRADE         = 1 << 5;
    public static final int  ERROR           = 1 << 6;


    
// line 163 "src/java/picard/http/HttpParser.java"
private static byte[] init__http_actions_0()
{
	return new byte [] {
	    0,    1,  108,    1,  109,    1,  110,    1,  111,    1,  113,    1,
	  115,    1,  116,    2,    0,  115,    2,    1,  115,    2,    2,  115,
	    2,    3,  115,    2,    4,  115,    2,    5,  115,    2,    6,  115,
	    2,    7,  115,    2,    8,  115,    2,    9,  115,    2,   10,  115,
	    2,   11,  115,    2,   12,  115,    2,   13,  115,    2,   14,  115,
	    2,   15,  115,    2,   16,  115,    2,   17,  115,    2,   18,  115,
	    2,   19,  115,    2,   20,  115,    2,   21,  115,    2,   22,  115,
	    2,   23,  115,    2,   88,  115,    2,   89,  115,    2,   90,  115,
	    2,   91,  115,    2,   92,  115,    2,   93,  115,    2,   94,  115,
	    2,   95,  115,    2,   96,  115,    2,   97,  115,    2,   98,  115,
	    2,   99,  115,    2,  100,  115,    2,  101,  115,    2,  101,  116,
	    2,  106,  115,    2,  107,  115,    2,  112,  113,    2,  114,  116,
	    3,   24,   95,  115,    3,   25,   95,  115,    3,   26,   95,  115,
	    3,   27,   95,  115,    3,   28,   95,  115,    3,   29,   95,  115,
	    3,   30,   95,  115,    3,   31,   95,  115,    3,   32,   95,  115,
	    3,   33,   95,  115,    3,   34,   95,  115,    3,   35,   95,  115,
	    3,   36,   95,  115,    3,   37,   95,  115,    3,   38,   95,  115,
	    3,   39,   95,  115,    3,   40,   95,  115,    3,   41,   95,  115,
	    3,   42,   95,  115,    3,   43,   95,  115,    3,   44,   95,  115,
	    3,   45,   95,  115,    3,   46,   95,  115,    3,   47,   95,  115,
	    3,   48,   95,  115,    3,   49,   95,  115,    3,   50,   95,  115,
	    3,   51,   95,  115,    3,   52,   95,  115,    3,   53,   95,  115,
	    3,   54,   95,  115,    3,   55,   95,  115,    3,   56,   95,  115,
	    3,   57,   95,  115,    3,   58,   95,  115,    3,   59,   95,  115,
	    3,   60,   95,  115,    3,   61,   95,  115,    3,   62,   95,  115,
	    3,   63,   95,  115,    3,   64,   95,  115,    3,   65,   95,  115,
	    3,   66,   95,  115,    3,   67,   95,  115,    3,   68,   95,  115,
	    3,   69,   95,  115,    3,   70,   95,  115,    3,   71,   95,  115,
	    3,   72,   95,  115,    3,   73,   95,  115,    3,   74,   95,  115,
	    3,   75,   95,  115,    3,   76,   95,  115,    3,   77,   95,  115,
	    3,   78,   95,  115,    3,   79,   95,  115,    3,   80,   95,  115,
	    3,   81,   95,  115,    3,   82,   95,  115,    3,   83,   95,  115,
	    3,   84,   95,  115,    3,   85,   95,  115,    3,   86,   95,  115,
	    3,   87,   95,  115,    3,   92,   93,  115,    3,   96,   98,  115,
	    3,   97,   98,  115,    3,   99,   94,  115,    3,  100,   96,  115,
	    3,  101,   96,  115,    3,  102,   97,  115,    3,  103,   97,  115,
	    3,  104,   97,  115,    3,  105,   97,  115,    4,  101,   96,   98,
	  115,    4,  102,   97,   98,  115,    4,  103,   97,   98,  115,    4,
	  104,   97,   98,  115,    4,  105,   97,   98,  115
	};
}

private static final byte _http_actions[] = init__http_actions_0();


private static byte[] init__http_cond_offsets_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    2
	};
}

private static final byte _http_cond_offsets[] = init__http_cond_offsets_0();


private static byte[] init__http_cond_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    1,    0
	};
}

private static final byte _http_cond_lengths[] = init__http_cond_lengths_0();


private static int[] init__http_cond_keys_0()
{
	return new int [] {
	    0,65535,    0,65535,    0
	};
}

private static final int _http_cond_keys[] = init__http_cond_keys_0();


private static byte[] init__http_cond_spaces_0()
{
	return new byte [] {
	    0,    0,    0
	};
}

private static final byte _http_cond_spaces[] = init__http_cond_spaces_0();


private static short[] init__http_key_offsets_0()
{
	return new short [] {
	    0,    0,   14,   15,   29,   31,   32,   33,   34,   35,   36,   37,
	   38,   53,   69,   72,   74,   76,   78,   79,   81,   84,   86,   89,
	   90,  141,  142,  143,  144,  145,  146,  147,  148,  149,  150,  151,
	  152,  153,  154,  155,  156,  157,  158,  159,  163,  164,  165,  166,
	  167,  169,  170,  171,  172,  173,  174,  175,  176,  177,  178,  179,
	  180,  181,  182,  183,  184,  185,  186,  187,  188,  189,  190,  191,
	  192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  202,  206,
	  207,  208,  209,  210,  211,  212,  213,  214,  215,  217,  218,  219,
	  220,  221,  222,  223,  224,  225,  226,  227,  228,  229,  230,  231,
	  232,  233,  234,  235,  236,  237,  238,  239,  240,  241,  242,  243,
	  244,  245,  246,  247,  248,  249,  251,  252,  253,  254,  255,  256,
	  257,  258,  259,  260,  261,  262,  263,  264,  281,  284,  290,  291,
	  344,  369,  388,  407,  426,  445,  463,  488,  507,  526,  545,  564,
	  583,  602,  619,  638,  657,  676,  695,  714,  733,  752,  769,  788,
	  807,  826,  845,  864,  883,  902,  919,  938,  957,  976,  995, 1014,
	 1031, 1050, 1067, 1086, 1105, 1124, 1141, 1160, 1179, 1198, 1217, 1236,
	 1255, 1274, 1293, 1312, 1331, 1350, 1367, 1388, 1407, 1426, 1445, 1463,
	 1482, 1501, 1520, 1539, 1558, 1577, 1596, 1613, 1634, 1655, 1674, 1693,
	 1712, 1731, 1750, 1769, 1786, 1789, 1799, 1805, 1810, 1816, 1822, 1830,
	 1838, 1846, 1854, 1860, 1866, 1872, 1880, 1888, 1896, 1904, 1912, 1920,
	 1926, 1945, 1964, 1983, 2001, 2030, 2049, 2068, 2087, 2106, 2125, 2144,
	 2163, 2182, 2201, 2220, 2237, 2256, 2275, 2294, 2313, 2332, 2351, 2370,
	 2387, 2410, 2429, 2448, 2467, 2486, 2505, 2524, 2541, 2560, 2579, 2598,
	 2617, 2634, 2637, 2645, 2653, 2672, 2691, 2710, 2729, 2748, 2767, 2784,
	 2803, 2821, 2838, 2857, 2876, 2895, 2914, 2931, 2950, 2969, 2988, 3005,
	 3024, 3043, 3062, 3079, 3100, 3119, 3138, 3155, 3174, 3191, 3212, 3231,
	 3250, 3267, 3286, 3307, 3326, 3345, 3362, 3381, 3400, 3419, 3436, 3455,
	 3474, 3493, 3510, 3529, 3548, 3567, 3584, 3603, 3621, 3646, 3667, 3686,
	 3705, 3724, 3741, 3760, 3779, 3798, 3817, 3836, 3855, 3873, 3892, 3911,
	 3930, 3949, 3968, 3985, 4004, 4023, 4042, 4060, 4079, 4098, 4117, 4136,
	 4155, 4172, 4191, 4210, 4229, 4248, 4265, 4284, 4303, 4322, 4341, 4360,
	 4379, 4398, 4417, 4436, 4454, 4473, 4492, 4511, 4530, 4549, 4566, 4585,
	 4604, 4623, 4641, 4660, 4679, 4698, 4717, 4736, 4753, 4776, 4795, 4814,
	 4832, 4851, 4870, 4889, 4908, 4927, 4946, 4965, 4984, 5001, 5020, 5039,
	 5056, 5075, 5094, 5113, 5132, 5151, 5170, 5187, 5206, 5225, 5243, 5262,
	 5281, 5300, 5319, 5338, 5357, 5376, 5395, 5412, 5432, 5451, 5468, 5489,
	 5508, 5527, 5546, 5563, 5582, 5601, 5619, 5638, 5657, 5676, 5695, 5716,
	 5735, 5754, 5773, 5792, 5811, 5830, 5849, 5866, 5885, 5904, 5923, 5942,
	 5961, 5980, 5999, 6018, 6035, 6056, 6075, 6094, 6113, 6130, 6151, 6172,
	 6191, 6210, 6229, 6246, 6265, 6284, 6303, 6320, 6339, 6358, 6376, 6395,
	 6414, 6433, 6452, 6471, 6488, 6509, 6530, 6549, 6568, 6587, 6604, 6622,
	 6641, 6660, 6679, 6698, 6717, 6736, 6753, 6772, 6791, 6810, 6829, 6847,
	 6866, 6885, 6904, 6923, 6942, 6961, 6980, 6999, 7018, 7036, 7055, 7074,
	 7093, 7112, 7131, 7150, 7169, 7188, 7205, 7226, 7243, 7262, 7283, 7302,
	 7321, 7340, 7357, 7376, 7395, 7414, 7433, 7451, 7470, 7489, 7508, 7527,
	 7546, 7565, 7584, 7603, 7620, 7623, 7631, 7639, 7647, 7655, 7663, 7671,
	 7679, 7685, 7706, 7725, 7744, 7763, 7782, 7801, 7818, 7837, 7856, 7874,
	 7893, 7912, 7931, 7950, 7969, 7986, 8007, 8026, 8045, 8062, 8081, 8098,
	 8119, 8138, 8157, 8176, 8195, 8214, 8231, 8250, 8268, 8287, 8306, 8325,
	 8344, 8363, 8382, 8401, 8420, 8439, 8458, 8477, 8496, 8513, 8531, 8560,
	 8579, 8598, 8617, 8636, 8655, 8674, 8692, 8711, 8730, 8749, 8768, 8786,
	 8805, 8824, 8843, 8862, 8881, 8900, 8919, 8936, 8955, 8973, 8992, 9011,
	 9030, 9048, 9067, 9086, 9105, 9124, 9143, 9160, 9181, 9200, 9219, 9238,
	 9257, 9276, 9295, 9314, 9332, 9353, 9372, 9391, 9408, 9427, 9446, 9465,
	 9484, 9501, 9520, 9539, 9558, 9576, 9595, 9614, 9633, 9652, 9671, 9690,
	 9709, 9726, 9745, 9764, 9783, 9802, 9821, 9840, 9858, 9877, 9896, 9913,
	 9932, 9951, 9970, 9989,10008,10027,10046,10065,10083,10102,10121,10140,
	10159,10176,10195,10214,10232,10251,10270,10289,10308,10327,10346,10365,
	10384,10403,10422,10439,10449,10456,10462,10468,10475,10481,10487,10497,
	10504,10510,10516,10525,10534,10541,10547,10553,10564,10578,10585,10591,
	10597,10618,10628,10637,10644,10650,10656,10658,10659,10660,10661,10662,
	10663,10664,10665,10672,10679,10687,10688,10691,10692,10699,10708,10709,
	10713,10714,10718,10719,10723,10727,10731,10745,10745,10747
	};
}

private static final short _http_key_offsets[] = init__http_key_offsets_0();


private static int[] init__http_trans_keys_0()
{
	return new int [] {
	   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,
	   84,   85,   10,   13,   67,   68,   71,   72,   76,   77,   78,   79,
	   80,   82,   83,   84,   85,   72,   79,   69,   67,   75,   79,   85,
	   84,   32,   32,   33,   37,   47,   59,   61,   64,   95,  126,   36,
	   57,   65,   90,   97,  122,   32,   33,   35,   37,   47,   59,   61,
	   63,   95,  126,   36,   57,   64,   90,   97,  122,   32,   72,  104,
	   84,  116,   84,  116,   80,  112,   47,   48,   57,   46,   48,   57,
	   48,   57,   13,   48,   57,   10,   13,   34,   44,   47,   65,   67,
	   68,   69,   70,   72,   73,   75,   76,   77,   80,   82,   83,   84,
	   85,   86,   87,   88,   97,   99,  100,  101,  102,  104,  105,  107,
	  108,  109,  112,  114,  115,  116,  117,  118,  119,  120,  123,  125,
	  127,    0,   32,   40,   41,   58,   64,   91,   93,   10,   69,   76,
	   69,   84,   69,   32,   69,   84,   32,   69,   65,   68,   32,   79,
	   67,   75,   32,   69,   75,   79,   83,   82,   71,   69,   32,   65,
	   67,   67,   84,   73,   86,   73,   84,   89,   32,   79,   76,   32,
	   86,   69,   32,   69,   65,   82,   67,   72,   32,   79,   84,   73,
	   70,   89,   32,   80,   84,   73,   79,   78,   83,   32,   65,   79,
	   82,   85,   84,   67,   72,   32,   83,   84,   32,   79,   80,   70,
	   80,   73,   78,   68,   32,   65,   84,   67,   72,   32,   84,   32,
	   69,   80,   79,   82,   84,   32,   85,   66,   83,   67,   82,   73,
	   66,   69,   32,   82,   65,   67,   69,   32,   78,   76,   83,   79,
	   67,   75,   32,   85,   66,   83,   67,   82,   73,   66,   69,   32,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,  127,
	    0,   31,   10,    9,   13,   32,   34,   44,   47,   65,   67,   68,
	   69,   70,   72,   73,   75,   76,   77,   80,   82,   83,   84,   85,
	   86,   87,   88,   97,   99,  100,  101,  102,  104,  105,  107,  108,
	  109,  112,  114,  115,  116,  117,  118,  119,  120,  123,  125,  127,
	    0,   31,   40,   41,   58,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   71,   76,   85,   99,  103,  108,  117,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   69,   76,   82,   99,  101,  108,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   90,  122,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   79,   97,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,
	  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	   79,  110,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,   84,  110,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   58,    9,   13,   32,   67,   85,   99,  117,  127,    0,   31,    9,
	   13,   32,  127,    0,   31,    9,   32,  127,    0,   31,    9,   13,
	   32,  127,    0,   31,    9,   13,   32,  127,    0,   31,    9,   13,
	   32,   76,  108,  127,    0,   31,    9,   13,   32,   79,  111,  127,
	    0,   31,    9,   13,   32,   83,  115,  127,    0,   31,    9,   13,
	   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   13,   32,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   13,   32,   80,  112,  127,    0,   31,    9,   13,   32,   71,
	  103,  127,    0,   31,    9,   13,   32,   82,  114,  127,    0,   31,
	    9,   13,   32,   65,   97,  127,    0,   31,    9,   13,   32,   68,
	  100,  127,    0,   31,    9,   13,   32,   69,  101,  127,    0,   31,
	    9,   13,   32,  127,    0,   31,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,   69,   76,   77,   82,   84,  100,  101,  108,
	  109,  114,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   69,   79,   97,  101,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,
	  127,    0,   31,   48,   57,    9,   13,   32,  127,    0,   31,   48,
	   57,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   53,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,
	  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   78,   97,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,   88,  116,  120,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,   73,  101,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   77,   78,   82,   85,  109,  110,  114,  117,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   79,   97,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,  108,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   86,  118,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   73,   79,   97,  105,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   88,  120,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   51,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   79,   97,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   88,  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,   79,  101,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   90,  122,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   69,   97,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   70,   84,  102,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,   82,  101,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,   84,  101,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	   84,  114,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   86,  118,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,
	  121,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	   82,  101,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,   78,  105,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   58,    9,   13,   32,   67,   99,  127,    0,   31,    9,
	   13,   32,   72,  104,  127,    0,   31,    9,   13,   32,   85,  117,
	  127,    0,   31,    9,   13,   32,   78,  110,  127,    0,   31,    9,
	   13,   32,   75,  107,  127,    0,   31,    9,   13,   32,   69,  101,
	  127,    0,   31,    9,   13,   32,   68,  100,  127,    0,   31,    9,
	   13,   32,  127,    0,   31,    9,   32,   34,   44,   47,   58,   80,
	   83,  112,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   73,   97,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   87,   97,  119,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110
	};
};
private static int[] init__http_trans_keys_1()
{
	return new int [] {
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   67,   68,   70,   80,   82,   88,   99,
	  100,  102,  112,  114,  120,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,   82,
	  111,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   70,   80,  102,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,
	  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   66,   98,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   81,  113,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,   32,
	   37,   95,  126,   33,   34,   36,   90,   97,  122,  117,   48,   57,
	   65,   70,   97,  102,   48,   57,   65,   70,   97,  102,   48,   57,
	   65,   70,   97,  102,  117,   48,   57,   65,   70,   97,  102,   48,
	   57,   65,   70,   97,  102,   48,   57,   65,   70,   97,  102,   32,
	   35,   37,   63,   95,  126,   33,   90,   97,  122,  117,   48,   57,
	   65,   70,   97,  102,   48,   57,   65,   70,   97,  102,   48,   57,
	   65,   70,   97,  102,   32,   35,   37,   95,  126,   33,   90,   97,
	  122,   32,   35,   37,   95,  126,   33,   90,   97,  122,  117,   48,
	   57,   65,   70,   97,  102,   48,   57,   65,   70,   97,  102,   48,
	   57,   65,   70,   97,  102,   32,   35,   37,   47,   63,   95,  126,
	   33,   90,   97,  122,   32,   34,   35,   37,   47,   60,   62,   63,
	   95,  126,   33,   90,   97,  122,  117,   48,   57,   65,   70,   97,
	  102,   48,   57,   65,   70,   97,  102,   48,   57,   65,   70,   97,
	  102,   32,   33,   35,   37,   43,   47,   58,   59,   61,   63,   64,
	   95,  126,   36,   44,   45,   57,   65,   90,   97,  122,   37,   47,
	   95,  126,   33,   34,   36,   90,   97,  122,   32,   35,   37,   95,
	  126,   33,   90,   97,  122,  117,   48,   57,   65,   70,   97,  102,
	   48,   57,   65,   70,   97,  102,   48,   57,   65,   70,   97,  102,
	   78,   80,   78,   69,   67,   84,   32,   89,   32,   48,   49,   57,
	   65,   70,   97,  102,   48,   49,   57,   65,   70,   97,  102,   13,
	   59,   48,   57,   65,   70,   97,  102,   10,65549,131072,196607,   10,
	   48,   49,   57,   65,   70,   97,  102,   13,   48,   59,   49,   57,
	   65,   70,   97,  102,   10,   13,  127,    0,   31,   10,   13,  127,
	    0,   31,   10,   13,  127,    0,   31,   13,  127,    0,   31,   13,
	  127,    0,   31,   13,   67,   68,   71,   72,   76,   77,   78,   79,
	   80,   82,   83,   84,   85,131072,196607,    0
	};
}

private static final int [] combine__http_trans_keys() {
	int [] combined = new int [ 10748 ];
	System.arraycopy ( init__http_trans_keys_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_trans_keys_1(), 0, combined, 8184, 2564 );
	return combined;
}
private static final int [] _http_trans_keys = combine__http_trans_keys();
private static byte[] init__http_single_lengths_0()
{
	return new byte [] {
	    0,   14,    1,   14,    2,    1,    1,    1,    1,    1,    1,    1,
	    9,   10,    3,    2,    2,    2,    1,    0,    1,    0,    1,    1,
	   43,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    4,    1,    1,    1,    1,
	    2,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    2,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    2,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    9,    3,    4,    1,   45,
	   17,   11,   11,   11,   11,   10,   17,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,    9,
	   11,    9,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,    9,   13,   11,   11,   11,   10,   11,
	   11,   11,   11,   11,   11,   11,    9,   13,   13,   11,   11,   11,
	   11,   11,   11,    9,    3,    8,    4,    3,    4,    4,    6,    6,
	    6,    6,    4,    4,    4,    6,    6,    6,    6,    6,    6,    4,
	   11,   11,   11,   10,   21,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,    9,
	   15,   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,
	    9,    3,    4,    4,   11,   11,   11,   11,   11,   11,    9,   11,
	   10,    9,   11,   11,   11,   11,    9,   11,   11,   11,    9,   11,
	   11,   11,    9,   13,   11,   11,    9,   11,    9,   13,   11,   11,
	    9,   11,   13,   11,   11,    9,   11,   11,   11,    9,   11,   11,
	   11,    9,   11,   11,   11,    9,   11,   10,   17,   13,   11,   11,
	   11,    9,   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,    9,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	    9,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   10,   11,   11,   11,   11,   11,    9,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,    9,   15,   11,   11,   10,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,    9,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   10,   11,   11,
	   11,   11,   11,   11,   11,   11,    9,   12,   11,    9,   13,   11,
	   11,   11,    9,   11,   11,   10,   11,   11,   11,   11,   13,   11,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   11,   11,    9,   13,   11,   11,   11,    9,   13,   13,   11,
	   11,   11,    9,   11,   11,   11,    9,   11,   11,   10,   11,   11,
	   11,   11,   11,    9,   13,   13,   11,   11,   11,    9,   10,   11,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   10,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,   11,   11,   11,    9,   13,    9,   11,   13,   11,   11,
	   11,    9,   11,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	   11,   11,   11,    9,    3,    6,    6,    6,    6,    6,    6,    6,
	    4,   13,   11,   11,   11,   11,   11,    9,   11,   11,   10,   11,
	   11,   11,   11,   11,    9,   13,   11,   11,    9,   11,    9,   13,
	   11,   11,   11,   11,   11,    9,   11,   10,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,   10,   21,   11,
	   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,   10,   11,
	   11,   11,   11,   11,   11,   11,    9,   11,   10,   11,   11,   11,
	   10,   11,   11,   11,   11,   11,    9,   13,   11,   11,   11,   11,
	   11,   11,   11,   10,   13,   11,   11,    9,   11,   11,   11,   11,
	    9,   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,
	    9,   11,   11,   11,   11,   11,   11,   10,   11,   11,    9,   11,
	   11,   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,   11,
	    9,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,    9,    4,    1,    0,    0,    1,    0,    0,    6,    1,
	    0,    0,    5,    5,    1,    0,    0,    7,   10,    1,    0,    0,
	   13,    4,    5,    1,    0,    0,    2,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    2,    1,    1,    1,    1,    3,    1,    2,
	    1,    2,    1,    2,    2,    2,   14,    0,    0,    0
	};
}

private static final byte _http_single_lengths[] = init__http_single_lengths_0();


private static byte[] init__http_range_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    3,    3,    0,    0,    0,    0,    0,    1,    1,    1,    1,    0,
	    4,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    4,    0,    1,    0,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    0,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    0,    2,    2,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    0,    1,    1,    1,    1,    1,    1,    1,
	    1,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    3,    3,    3,    3,    3,    3,    3,    2,    3,
	    3,    3,    2,    2,    3,    3,    3,    2,    2,    3,    3,    3,
	    4,    3,    2,    3,    3,    3,    0,    0,    0,    0,    0,    0,
	    0,    0,    3,    3,    3,    0,    1,    0,    3,    3,    0,    1,
	    0,    1,    0,    1,    1,    1,    0,    0,    1,    0
	};
}

private static final byte _http_range_lengths[] = init__http_range_lengths_0();


private static short[] init__http_index_offsets_0()
{
	return new short [] {
	    0,    0,   15,   17,   32,   35,   37,   39,   41,   43,   45,   47,
	   49,   62,   76,   80,   83,   86,   89,   91,   93,   96,   98,  101,
	  103,  151,  153,  155,  157,  159,  161,  163,  165,  167,  169,  171,
	  173,  175,  177,  179,  181,  183,  185,  187,  192,  194,  196,  198,
	  200,  203,  205,  207,  209,  211,  213,  215,  217,  219,  221,  223,
	  225,  227,  229,  231,  233,  235,  237,  239,  241,  243,  245,  247,
	  249,  251,  253,  255,  257,  259,  261,  263,  265,  267,  269,  274,
	  276,  278,  280,  282,  284,  286,  288,  290,  292,  295,  297,  299,
	  301,  303,  305,  307,  309,  311,  313,  315,  317,  319,  321,  323,
	  325,  327,  329,  331,  333,  335,  337,  339,  341,  343,  345,  347,
	  349,  351,  353,  355,  357,  359,  362,  364,  366,  368,  370,  372,
	  374,  376,  378,  380,  382,  384,  386,  388,  402,  406,  412,  414,
	  464,  486,  502,  518,  534,  550,  565,  587,  603,  619,  635,  651,
	  667,  683,  697,  713,  729,  745,  761,  777,  793,  809,  823,  839,
	  855,  871,  887,  903,  919,  935,  949,  965,  981,  997, 1013, 1029,
	 1043, 1059, 1073, 1089, 1105, 1121, 1135, 1151, 1167, 1183, 1199, 1215,
	 1231, 1247, 1263, 1279, 1295, 1311, 1325, 1343, 1359, 1375, 1391, 1406,
	 1422, 1438, 1454, 1470, 1486, 1502, 1518, 1532, 1550, 1568, 1584, 1600,
	 1616, 1632, 1648, 1664, 1678, 1682, 1692, 1698, 1703, 1709, 1715, 1723,
	 1731, 1739, 1747, 1753, 1759, 1765, 1773, 1781, 1789, 1797, 1805, 1813,
	 1819, 1835, 1851, 1867, 1882, 1908, 1924, 1940, 1956, 1972, 1988, 2004,
	 2020, 2036, 2052, 2068, 2082, 2098, 2114, 2130, 2146, 2162, 2178, 2194,
	 2208, 2228, 2244, 2260, 2276, 2292, 2308, 2324, 2338, 2354, 2370, 2386,
	 2402, 2416, 2420, 2427, 2434, 2450, 2466, 2482, 2498, 2514, 2530, 2544,
	 2560, 2575, 2589, 2605, 2621, 2637, 2653, 2667, 2683, 2699, 2715, 2729,
	 2745, 2761, 2777, 2791, 2809, 2825, 2841, 2855, 2871, 2885, 2903, 2919,
	 2935, 2949, 2965, 2983, 2999, 3015, 3029, 3045, 3061, 3077, 3091, 3107,
	 3123, 3139, 3153, 3169, 3185, 3201, 3215, 3231, 3246, 3268, 3286, 3302,
	 3318, 3334, 3348, 3364, 3380, 3396, 3412, 3428, 3444, 3459, 3475, 3491,
	 3507, 3523, 3539, 3553, 3569, 3585, 3601, 3616, 3632, 3648, 3664, 3680,
	 3696, 3710, 3726, 3742, 3758, 3774, 3788, 3804, 3820, 3836, 3852, 3868,
	 3884, 3900, 3916, 3932, 3947, 3963, 3979, 3995, 4011, 4027, 4041, 4057,
	 4073, 4089, 4104, 4120, 4136, 4152, 4168, 4184, 4198, 4218, 4234, 4250,
	 4265, 4281, 4297, 4313, 4329, 4345, 4361, 4377, 4393, 4407, 4423, 4439,
	 4453, 4469, 4485, 4501, 4517, 4533, 4549, 4563, 4579, 4595, 4610, 4626,
	 4642, 4658, 4674, 4690, 4706, 4722, 4738, 4752, 4769, 4785, 4799, 4817,
	 4833, 4849, 4865, 4879, 4895, 4911, 4926, 4942, 4958, 4974, 4990, 5008,
	 5024, 5040, 5056, 5072, 5088, 5104, 5120, 5134, 5150, 5166, 5182, 5198,
	 5214, 5230, 5246, 5262, 5276, 5294, 5310, 5326, 5342, 5356, 5374, 5392,
	 5408, 5424, 5440, 5454, 5470, 5486, 5502, 5516, 5532, 5548, 5563, 5579,
	 5595, 5611, 5627, 5643, 5657, 5675, 5693, 5709, 5725, 5741, 5755, 5770,
	 5786, 5802, 5818, 5834, 5850, 5866, 5880, 5896, 5912, 5928, 5944, 5959,
	 5975, 5991, 6007, 6023, 6039, 6055, 6071, 6087, 6103, 6118, 6134, 6150,
	 6166, 6182, 6198, 6214, 6230, 6246, 6260, 6278, 6292, 6308, 6326, 6342,
	 6358, 6374, 6388, 6404, 6420, 6436, 6452, 6467, 6483, 6499, 6515, 6531,
	 6547, 6563, 6579, 6595, 6609, 6613, 6621, 6629, 6637, 6645, 6653, 6661,
	 6669, 6675, 6693, 6709, 6725, 6741, 6757, 6773, 6787, 6803, 6819, 6834,
	 6850, 6866, 6882, 6898, 6914, 6928, 6946, 6962, 6978, 6992, 7008, 7022,
	 7040, 7056, 7072, 7088, 7104, 7120, 7134, 7150, 7165, 7181, 7197, 7213,
	 7229, 7245, 7261, 7277, 7293, 7309, 7325, 7341, 7357, 7371, 7386, 7412,
	 7428, 7444, 7460, 7476, 7492, 7508, 7523, 7539, 7555, 7571, 7587, 7602,
	 7618, 7634, 7650, 7666, 7682, 7698, 7714, 7728, 7744, 7759, 7775, 7791,
	 7807, 7822, 7838, 7854, 7870, 7886, 7902, 7916, 7934, 7950, 7966, 7982,
	 7998, 8014, 8030, 8046, 8061, 8079, 8095, 8111, 8125, 8141, 8157, 8173,
	 8189, 8203, 8219, 8235, 8251, 8266, 8282, 8298, 8314, 8330, 8346, 8362,
	 8378, 8392, 8408, 8424, 8440, 8456, 8472, 8488, 8503, 8519, 8535, 8549,
	 8565, 8581, 8597, 8613, 8629, 8645, 8661, 8677, 8692, 8708, 8724, 8740,
	 8756, 8770, 8786, 8802, 8817, 8833, 8849, 8865, 8881, 8897, 8913, 8929,
	 8945, 8961, 8977, 8991, 8999, 9004, 9008, 9012, 9017, 9021, 9025, 9034,
	 9039, 9043, 9047, 9055, 9063, 9068, 9072, 9076, 9086, 9099, 9104, 9108,
	 9112, 9130, 9138, 9146, 9151, 9155, 9159, 9162, 9164, 9166, 9168, 9170,
	 9172, 9174, 9176, 9181, 9186, 9192, 9194, 9197, 9199, 9204, 9211, 9213,
	 9217, 9219, 9223, 9225, 9229, 9233, 9237, 9252, 9253, 9255
	};
}

private static final short _http_index_offsets[] = init__http_index_offsets_0();


private static short[] init__http_indicies_0()
{
	return new short [] {
	    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
	   13,   14,    0,   15,    0,   16,   17,   18,   19,   20,   21,   22,
	   23,   24,   25,   26,   27,   28,   29,    0,   30,   31,    0,   32,
	    0,   33,    0,   34,    0,   35,    0,   36,    0,   37,    0,   38,
	    0,   39,   40,   41,   42,   40,   40,   40,   40,   40,   40,   43,
	   43,    0,   44,   40,   45,   41,   46,   40,   40,   47,   40,   40,
	   40,   40,   40,    0,   44,   48,   48,    0,   49,   49,    0,   50,
	   50,    0,   51,   51,    0,   52,    0,   53,    0,   54,   53,    0,
	   55,    0,   56,   55,    0,   57,    0,   58,    0,    0,    0,   60,
	   61,   62,   63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
	   73,   74,   75,   76,   77,   60,   61,   62,   63,   64,   65,   66,
	   67,   68,   69,   70,   71,   72,   73,   74,   75,   76,   77,    0,
	    0,    0,    0,    0,    0,    0,   59,   78,    0,   79,    0,   80,
	    0,   81,    0,   82,    0,   83,    0,   84,    0,   85,    0,   86,
	    0,   87,    0,   88,    0,   89,    0,   90,    0,   91,    0,   92,
	    0,   93,    0,   94,    0,   95,    0,   96,   97,   98,   99,    0,
	  100,    0,  101,    0,  102,    0,  103,    0,  104,  105,    0,  106,
	    0,  107,    0,  108,    0,  109,    0,  110,    0,  111,    0,  112,
	    0,  113,    0,  114,    0,  115,    0,  116,    0,  117,    0,  118,
	    0,  119,    0,  120,    0,  121,    0,  122,    0,  123,    0,  124,
	    0,  125,    0,  126,    0,  127,    0,  128,    0,  129,    0,  130,
	    0,  131,    0,  132,    0,  133,    0,  134,    0,  135,    0,  136,
	    0,  137,    0,  138,    0,  139,  140,  141,  142,    0,  143,    0,
	  144,    0,  145,    0,  146,    0,  147,    0,  148,    0,  149,    0,
	  150,    0,  151,    0,  152,  153,    0,  154,    0,  155,    0,  156,
	    0,  157,    0,  158,    0,  159,    0,  160,    0,  161,    0,  162,
	    0,  163,    0,  164,    0,  165,    0,  166,    0,  167,    0,  168,
	    0,  169,    0,  170,    0,  171,    0,  172,    0,  173,    0,  174,
	    0,  175,    0,  176,    0,  177,    0,  178,    0,  179,    0,  180,
	    0,  181,    0,  182,    0,  183,    0,  184,    0,  185,    0,  186,
	  187,    0,  188,    0,  189,    0,  190,    0,  191,    0,  192,    0,
	  193,    0,  194,    0,  195,    0,  196,    0,  197,    0,  198,    0,
	  199,    0,  200,    0,  201,  201,    0,    0,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  204,  204,  205,    0,  205,  206,
	  205,    0,    0,  207,  208,    0,  205,  209,  205,    0,    0,    0,
	  211,  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,
	  223,  224,  225,  226,  227,  228,  211,  212,  213,  214,  215,  216,
	  217,  218,  219,  220,  221,  222,  223,  224,  225,  226,  227,  228,
	    0,    0,    0,    0,    0,    0,    0,  210,  201,  201,    0,    0,
	    0,  203,  229,  230,  231,  232,  229,  230,  231,  232,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  233,  233,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  234,  234,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  235,  235,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  236,  236,    0,    0,    0,    0,    0,    0,    0,  202,  237,  237,
	    0,    0,  238,    0,  239,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  240,  241,  242,  243,  240,
	  241,  242,  243,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  244,  244,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  245,  245,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  246,  246,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  247,  247,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  248,  248,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  249,  249,    0,    0,    0,    0,    0,    0,    0,  202,  250,
	  250,    0,    0,    0,  251,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  252,  252,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  253,
	  253,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  254,  254,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  255,  255,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  256,
	  256,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  257,  257,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  258,  258,    0,    0,    0,
	    0,    0,    0,    0,  202,  259,  259,    0,    0,    0,  260,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  261,  261,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  262,  262,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  263,  263,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  264,  264,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  265,  265,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  266,  266,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  267,  267,    0,    0,    0,    0,    0,    0,    0,  202,  268,
	  268,    0,    0,    0,  269,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  270,  270,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  271,
	  271,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  272,  272,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  273,  273,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  274,
	  274,    0,    0,    0,    0,    0,    0,    0,  202,  275,  275,    0,
	    0,    0,  276,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  277,  277,    0,    0,    0,    0,    0,
	    0,    0,  202,  278,  278,    0,    0,    0,  279,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  280,
	  280,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  281,  281,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  282,  282,    0,    0,    0,
	    0,    0,    0,    0,  202,  283,  283,    0,    0,    0,  284,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  285,  285,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  286,  286,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  287,  287,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  288,  288,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  289,  289,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  290,  290,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  291,  291,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  292,  292,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  293,  293,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  294,  294,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  295,  295,    0,    0,    0,    0,    0,
	    0,    0,  202,  296,  296,    0,    0,    0,  297,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  298,
	  299,  298,  299,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  300,  300,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  301,  301,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  302,  302,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,  303,    0,  203,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  304,  304,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  305,  305,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  306,  306,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  307,  307,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  308,  308,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  309,  309,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  310,  310,    0,    0,
	    0,    0,    0,    0,    0,  202,  311,  311,    0,    0,    0,  312,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  313,  314,  313,  314,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  315,  316,  315,  316,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  317,  317,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  318,  318,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  319,  319,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  320,  320,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  321,  321,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  322,  322,
	    0,    0,    0,    0,    0,    0,    0,  202,  323,  323,    0,    0,
	    0,  324,    0,    0,    0,    0,    0,    0,    0,  202,  325,  325,
	  326,    0,  326,  206,  326,  327,  328,  327,  328,    0,    0,  207,
	  329,  330,  331,    0,    0,  332,  333,  333,    0,    0,  334,  329,
	  335,  329,    0,    0,  334,  333,  336,  337,    0,    0,  332,  329,
	  330,  331,  338,  338,    0,    0,  332,  329,  330,  331,  339,  339,
	    0,    0,  332,  329,  330,  331,  340,  340,    0,    0,  332,  329,
	  330,  331,  341,  341,    0,    0,  332,  342,  343,  344,    0,    0,
	  332,  345,   56,  345,    0,    0,  334,  345,  336,  346,    0,    0,
	  332,  329,  330,  331,  347,  347,    0,    0,  332,  329,  330,  331,
	  348,  348,    0,    0,  332,  329,  330,  331,  349,  349,    0,    0,
	  332,  329,  330,  331,  350,  350,    0,    0,  332,  329,  330,  331,
	  351,  351,    0,    0,  332,  329,  330,  331,  352,  352,    0,    0,
	  332,  353,  354,  355,    0,    0,  332,  201,  201,    0,    0,    0,
	  203,  356,  356,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  357,  357,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  358,  358,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  359,
	    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  360,  361,  362,  363,  364,  365,  360,  361,
	  362,  363,  364,  365,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  366,  366,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  367,  367,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  368,  368,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  369,  369,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  370,  370,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  371,  371,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  372,  372,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  373,  373,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  374,  374,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  375,  375,    0,    0,    0,    0,
	    0,    0,    0,  202,  376,  376,    0,    0,    0,  377,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  378,  378,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  379,  379,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  380,  380,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  381,  381,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  382,  382,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  383,  383,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  384,  384,    0,    0,    0,    0,    0,    0,    0,  202,  385,  385,
	    0,    0,    0,  386,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  387,  388,  389,  387,  388,  389,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  390,  390,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  391,  391,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  392,  392,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  393,  393,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  394,  394,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  395,  395,
	    0,    0,    0,    0,    0,    0,    0,  202,  396,  396,    0,    0,
	    0,  397,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  398,  398,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  399,  399,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  400,  400,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  401,  401,    0,    0,    0,    0,    0,    0,
	    0,  202,  402,  402,    0,    0,    0,  403,    0,    0,    0,    0,
	    0,    0,    0,  202,  404,  404,  405,    0,  405,  407,  405,  406,
	  406,  409,  408,  410,  411,  412,  406,  406,  414,  413,  201,  201,
	    0,    0,    0,  203,  415,  415,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  416,  416,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  417,  417,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  418,  418,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  419,  419,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  420,  420,    0,    0,    0,    0,    0,    0,    0,  202,  421,  421,
	    0,    0,    0,  422,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  423,  423,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  424,  203,    0,
	    0,    0,    0,    0,    0,    0,  202,  425,  425,    0,    0,    0,
	  426,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  427,  427,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  428,  428,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  429,
	  429,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  430,  430,    0,    0,    0,    0,    0,    0,    0,
	  202,  431,  431,    0,    0,    0,  432,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  433,  433,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  434,  434,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  435,  435,    0,    0,    0,    0,    0,
	    0,    0,  202,  436,  436,    0,    0,    0,  437,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  438,
	  438,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  439,  439,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  440,  440,    0,    0,    0,
	    0,    0,    0,    0,  202,  441,  441,    0,    0,    0,  442,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  443,  444,  443,  444,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  445,  445,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  446,
	  446,    0,    0,    0,    0,    0,    0,    0,  202,  447,  447,    0,
	    0,    0,  448,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  449,  449,    0,    0,    0,    0,    0,
	    0,    0,  202,  450,  450,    0,    0,    0,  451,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  452,
	  453,  452,  453,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  454,  454,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  455,  455,    0,
	    0,    0,    0,    0,    0,    0,  202,  456,  456,    0,    0,    0,
	  457,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  458,  458,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  459,  460,  459,  460,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  461,  461,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  462,  462,    0,    0,    0,    0,    0,
	    0,    0,  202,  463,  463,    0,    0,    0,  464,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  465,
	  465,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  466,  466,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  467,  467,    0,    0,    0,
	    0,    0,    0,    0,  202,  468,  468,    0,    0,    0,  469,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  470,  470,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  471,  471,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  472,  472,    0,
	    0,    0,    0,    0,    0,    0,  202,  473,  473,    0,    0,    0,
	  474,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  475,  475,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  476,  476,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  477,
	  477,    0,    0,    0,    0,    0,    0,    0,  202,  478,  478,    0,
	    0,    0,  479,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  480,  480,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,  481,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  482,  483,  484,  485,  482,  483,  484,  485,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  486,  487,
	  486,  487,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  488,  488,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  489,  489,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  490,  490,    0,    0,    0,    0,    0,    0,    0,  202,  491,  491,
	    0,    0,    0,  492,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  493,  493,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  494,  494,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  495,  495,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  496,  496,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  497,  497,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  498,  498,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,  499,    0,  203,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  500,  500,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  501,  501,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  502,  502,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  503,  503,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  504,  504,    0,    0,    0,    0,    0,    0,    0,  202,  505,
	  505,    0,    0,    0,  506,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  507,  507,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  508,
	  508,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  509,  509,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,  510,    0,  203,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  511,  511,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  512,  512,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  513,  513,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  514,  514,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  515,  515,    0,    0,    0,    0,    0,    0,    0,  202,
	  516,  516,    0,    0,    0,  517,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  518,  518,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  519,  519,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  520,  520,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  521,  521,    0,    0,
	    0,    0,    0,    0,    0,  202,  522,  522,    0,    0,    0,  523,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  524,  524,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  525,  525,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  526,  526,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  527,  527,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  528,  528,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  529,  529,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  530,  530,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  531,  531,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  532,  532,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	  533,    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  534,  534,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  535,  535,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  536,  536,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  537,  537,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  538,  538,    0,
	    0,    0,    0,    0,    0,    0,  202,  539,  539,    0,    0,    0,
	  540,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  541,  541,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  542,  542,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  543,
	  543,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,  544,    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  545,  545,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  546,  546,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  547,  547,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  548,  548,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  549,  549,
	    0,    0,    0,    0,    0,    0,    0,  202,  550,  550,    0,    0,
	    0,  551,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  552,  553,  554,  552,  553,  554,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  555,  555,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  556,  556,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,  557,    0,  203,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  558,
	  558,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  559,  559,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  560,  560,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  561,
	  561,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  562,  562,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  563,  563,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  564,
	  564,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  565,  565,    0,    0,    0,    0,    0,    0,    0,
	  202,  566,  566,    0,    0,    0,  567,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  568,  568,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  569,  569,    0,    0,    0,    0,    0,    0,    0,  202,  570,
	  570,    0,    0,    0,  571,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  572,  572,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  573,
	  573,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  574,  574,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  575,  575,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  576,
	  576,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  577,  577,    0,    0,    0,    0,    0,    0,    0,
	  202,  578,  578,    0,    0,    0,  579,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  580,  580,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  581,  581,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,  582,    0,  203,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  583,  583,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  584,  584,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  585,  585,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  586,  586,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  587,  587,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  588,  588,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  589,  589,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  590,  590,    0,    0,    0,    0,    0,    0,    0,  202,  591,  591,
	    0,    0,    0,  592,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  593,  203,  594,  594,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  595,
	  595,    0,    0,    0,    0,    0,    0,    0,  202,  596,  596,    0,
	    0,    0,  597,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  598,  599,  598,  599,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  600,
	  600,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  601,  601,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  602,  602,    0,    0,    0,
	    0,    0,    0,    0,  202,  603,  603,    0,    0,    0,  604,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  605,  605,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  606,  606,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,  607,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  608,  608,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  609,  609,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  610,  610,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  611,  611,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  612,  613,  612,  613,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  614,  614,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  615,  615,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  616,  616,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  617,  617,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  618,  618,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  619,  619,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  620,  620,
	    0,    0,    0,    0,    0,    0,    0,  202,  621,  621,    0,    0,
	    0,  622,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  623,  623,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  624,  624,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  625,  625,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  626,  626,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  627,  627,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  628,  628,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  629,  629,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  630,  630,    0,    0,
	    0,    0,    0,    0,    0,  202,  631,  631,    0,    0,    0,  632,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  633,  634,  633,  634,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  635,  635,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  636,  636,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  637,  637,    0,    0,    0,    0,    0,    0,
	    0,  202,  638,  638,    0,    0,    0,  639,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  640,  641,
	  640,  641,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  642,  643,  642,  643,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  644,  644,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  645,  645,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  646,  646,    0,    0,    0,    0,
	    0,    0,    0,  202,  647,  647,    0,    0,    0,  648,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  649,  649,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  650,  650,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  651,  651,    0,    0,
	    0,    0,    0,    0,    0,  202,  652,  652,    0,    0,    0,  653,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  654,  654,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  655,  655,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,  656,    0,  203,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  657,  657,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  658,  658,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  659,  659,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  660,  660,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  661,  661,    0,    0,    0,    0,    0,
	    0,    0,  202,  662,  662,    0,    0,    0,  663,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  664,
	  665,  664,  665,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  666,  667,  666,  667,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  668,
	  668,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  669,  669,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  670,  670,    0,    0,    0,
	    0,    0,    0,    0,  202,  671,  671,    0,    0,    0,  672,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  673,
	    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  674,  674,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  675,  675,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  676,  676,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  677,  677,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  678,  678,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  679,  679,    0,    0,    0,    0,    0,    0,    0,  202,  680,  680,
	    0,    0,    0,  681,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  682,  682,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  683,  683,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  684,  684,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  685,  685,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,  686,    0,  203,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  687,  687,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  688,  688,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  689,  689,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  690,  690,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  691,  691,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  692,  692,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  693,  693,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  694,  694,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  695,  695,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  696,
	    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  697,  697,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  698,  698,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  699,  699,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  700,  700,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  701,  701,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  702,  702,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  703,  703,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  704,  704,    0,    0,
	    0,    0,    0,    0,    0,  202,  705,  705,    0,    0,    0,  706,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  707,  708,  707,  708,    0,    0,    0,    0,    0,    0,
	    0,  202,  709,  709,    0,    0,    0,  710,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  711,  711,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  712,  713,  712,  713,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  714,  714,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  715,  715,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  716,  716,    0,    0,    0,    0,    0,    0,
	    0,  202,  717,  717,    0,    0,    0,  718,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  719,  719,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  720,  720,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  721,  721,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  722,  722,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	  723,    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  724,  724,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  725,  725,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  726,  726,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  727,  727,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  728,  728,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  729,  729,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  730,  730,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  731,  731,    0,
	    0,    0,    0,    0,    0,    0,  202,  732,  732,    0,    0,    0,
	  733,    0,    0,    0,    0,    0,    0,    0,  202,  734,  734,  735,
	    0,  735,  206,  735,  736,  736,    0,    0,  207,  329,  330,  331,
	  737,  737,    0,    0,  332,  329,  330,  331,  738,  738,    0,    0,
	  332,  329,  330,  331,  739,  739,    0,    0,  332,  329,  330,  331,
	  740,  740,    0,    0,  332,  329,  330,  331,  741,  741,    0,    0,
	  332,  329,  330,  331,  742,  742,    0,    0,  332,  743,  744,  745,
	    0,    0,  332,  201,  201,    0,    0,    0,  203,  746,  747,  746,
	  747,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  748,  748,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  749,  749,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  750,
	  750,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  751,  751,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  752,  752,    0,    0,    0,
	    0,    0,    0,    0,  202,  753,  753,    0,    0,    0,  754,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  755,  755,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  756,  756,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,  757,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  758,  758,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  759,  759,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  760,  760,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  761,  761,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  762,  762,    0,    0,    0,    0,    0,    0,
	    0,  202,  763,  763,    0,    0,    0,  764,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  765,  766,
	  765,  766,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  767,  767,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  768,  768,    0,    0,
	    0,    0,    0,    0,    0,  202,  769,  769,    0,    0,    0,  770,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  771,  771,    0,    0,    0,    0,    0,    0,    0,  202,
	  772,  772,    0,    0,    0,  773,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  774,  775,  774,  775,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  776,  776,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  777,  777,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  778,  778,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  779,  779,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  780,  780,    0,    0,    0,    0,
	    0,    0,    0,  202,  781,  781,    0,    0,    0,  782,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  783,  783,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,  784,    0,  203,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  785,  785,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  786,
	  786,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  787,  787,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  788,  788,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  789,
	  789,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  790,  790,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  791,  791,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  792,
	  792,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  793,  793,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  794,  794,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  795,
	  795,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  796,  796,    0,    0,    0,    0,    0,    0,    0,
	  202,  797,  797,    0,    0,    0,  798,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,  799,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  800,  801,  802,  803,  804,  805,  800,  801,  802,  803,  804,  805,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  806,  806,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  807,  807,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  808,  808,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  809,  809,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  810,  810,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  811,  811,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	  812,    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  813,  813,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  814,  814,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  815,  815,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  816,  816,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,  817,    0,  203,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  818,  818,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  819,  819,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  820,  820,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  821,  821,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  822,  822,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  823,  823,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  824,  824,    0,    0,    0,    0,    0,    0,    0,  202,  825,  825,
	    0,    0,    0,  826,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  827,  827,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,  828,    0,  203,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  829,  829,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  830,  830,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  831,  831,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  832,
	    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  833,  833,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  834,  834,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  835,  835,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  836,  836,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  837,  837,    0,    0,
	    0,    0,    0,    0,    0,  202,  838,  838,    0,    0,    0,  839,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  840,  841,  840,  841,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  842,  842,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  843,  843,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  844,  844,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  845,  845,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  846,  846,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  847,  847,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  848,  848,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  849,    0,
	  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  850,  851,  850,  851,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  852,  852,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  853,  853,    0,    0,    0,    0,    0,    0,    0,  202,  854,
	  854,    0,    0,    0,  855,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  856,  856,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  857,
	  857,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  858,  858,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  859,  859,    0,    0,    0
	};
};
private static short[] init__http_indicies_1()
{
	return new short [] {
	    0,    0,    0,    0,  202,  860,  860,    0,    0,    0,  861,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  862,  862,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  863,  863,    0,    0,    0,    0,    0,
	    0,    0,  202,  201,  201,    0,    0,    0,  203,  864,  864,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  865,
	    0,  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  866,  866,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  867,  867,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  868,  868,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  869,  869,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  870,  870,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,
	  871,  871,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  872,  872,    0,    0,    0,    0,    0,    0,
	    0,  202,  873,  873,    0,    0,    0,  874,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  875,  875,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  876,  876,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  877,  877,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  878,  878,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  879,  879,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  880,  880,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,  881,    0,  203,    0,
	    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,
	  203,  882,  882,    0,    0,    0,    0,    0,    0,    0,  202,  201,
	  201,    0,    0,    0,  203,  883,  883,    0,    0,    0,    0,    0,
	    0,    0,  202,  884,  884,    0,    0,    0,  885,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  886,
	  886,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  887,  887,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  888,  888,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  889,
	  889,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  890,  890,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  891,  891,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  892,
	  892,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  893,  893,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,  894,    0,  203,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  895,  895,
	    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,
	    0,  203,  896,  896,    0,    0,    0,    0,    0,    0,    0,  202,
	  201,  201,    0,    0,    0,  203,  897,  897,    0,    0,    0,    0,
	    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  898,  898,
	    0,    0,    0,    0,    0,    0,    0,  202,  899,  899,    0,    0,
	    0,  900,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,
	    0,    0,    0,  203,  901,  901,    0,    0,    0,    0,    0,    0,
	    0,  202,  201,  201,    0,    0,    0,  203,  902,  902,    0,    0,
	    0,    0,    0,    0,    0,  202,  201,  201,    0,    0,  903,    0,
	  203,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  904,  904,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  905,  905,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  906,
	  906,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  907,  907,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  908,  908,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  909,
	  909,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  910,  910,    0,    0,    0,    0,    0,    0,    0,
	  202,  201,  201,    0,    0,    0,  203,  911,  911,    0,    0,    0,
	    0,    0,    0,    0,  202,  201,  201,    0,    0,    0,  203,  912,
	  912,    0,    0,    0,    0,    0,    0,    0,  202,  201,  201,    0,
	    0,    0,  203,  913,  913,    0,    0,    0,    0,    0,    0,    0,
	  202,  914,  914,    0,    0,    0,  915,    0,    0,    0,    0,    0,
	    0,    0,  202,   44,  916,   45,   45,   45,   45,   45,    0,  918,
	  917,  917,  917,    0,   45,   45,   45,    0,  917,  917,  917,    0,
	  920,  919,  919,  919,    0,   40,   40,   40,    0,  919,  919,  919,
	    0,  921,  923,  924,  925,  922,  922,  922,  922,    0,  927,  926,
	  926,  926,    0,  922,  922,  922,    0,  926,  926,  926,    0,  928,
	  930,  931,  929,  929,  929,  929,    0,  932,  934,  935,  933,  933,
	  933,  933,    0,  937,  936,  936,  936,    0,  933,  933,  933,    0,
	  936,  936,  936,    0,  921,  923,  924,  938,  925,  922,  922,  922,
	  922,    0,  921,  922,  923,  939,   46,  922,  922,  925,  938,  938,
	  938,  938,    0,  941,  940,  940,  940,    0,  938,  938,  938,    0,
	  940,  940,  940,    0,   44,   40,   45,   41,   43,   46,  942,   40,
	   40,   47,   40,   40,   40,   40,   43,   43,   43,    0,  944,   42,
	  943,  943,  943,  943,  943,    0,   44,   45,  944,  943,  943,  943,
	  943,    0,  946,  945,  945,  945,    0,  943,  943,  943,    0,  945,
	  945,  945,    0,  947,  948,    0,  949,    0,  950,    0,  951,    0,
	  952,    0,  953,    0,  954,    0,  955,    0,  957,  958,  958,  958,
	  956,  959,  960,  960,  960,  956,  961,  962,  960,  960,  960,  956,
	  963,    0,  964,  965,    0,  966,    0,  967,  958,  958,  958,  956,
	  968,  969,  970,  960,  960,  960,  956,  971,    0,  972,    0,    0,
	  973,  974,    0,  975,    0,    0,  976,  977,    0,  978,    0,    0,
	  976,  968,    0,    0,  970,  961,    0,    0,  962,    1,    2,    3,
	    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,   14,    0,
	    0,  979,    0,  980,    0
	};
}

private static final short [] combine__http_indicies() {
	short [] combined = new short [ 9257 ];
	System.arraycopy ( init__http_indicies_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_indicies_1(), 0, combined, 8184, 1073 );
	return combined;
}
private static final short [] _http_indicies = combine__http_indicies();
private static short[] init__http_trans_targs_0()
{
	return new short [] {
	    0,    2,    4,   26,   32,   35,   39,   43,   69,   75,   82,  104,
	  110,  119,  124,    3,    2,    4,   26,   32,   35,   39,   43,   69,
	   75,   82,  104,  110,  119,  124,    5,  726,    6,    7,    8,    9,
	   10,   11,   12,   12,   13,  703,  715,  720,   14,  699,  706,  710,
	   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,  139,
	  144,  198,  303,  309,  322,  326,  330,  382,  392,  415,  427,  460,
	  484,  522,  553,  569,  575,  597,  750,   27,   28,   29,   30,   31,
	   12,   33,   34,   12,   36,   37,   38,   12,   40,   41,   42,   12,
	   44,   48,   60,   63,   45,   46,   47,   12,   49,   57,   50,   51,
	   52,   53,   54,   55,   56,   12,   58,   59,   12,   61,   62,   12,
	   64,   65,   66,   67,   68,   12,   70,   71,   72,   73,   74,   12,
	   76,   77,   78,   79,   80,   81,   12,   83,   87,   90,  102,   84,
	   85,   86,   12,   88,   89,   12,   91,   92,   93,   97,   94,   95,
	   96,   12,   98,   99,  100,  101,   12,  103,   12,  105,  106,  107,
	  108,  109,   12,  111,  112,  113,  114,  115,  116,  117,  118,   12,
	  120,  121,  122,  123,   12,  125,  126,  130,  127,  128,  129,   12,
	  131,  132,  133,  134,  135,  136,  137,  138,   12,  140,  139,  141,
	  140,  141,  142,  222,  143,   25,  139,  144,  198,  303,  309,  322,
	  326,  330,  382,  392,  415,  427,  460,  484,  522,  553,  569,  575,
	  597,  145,  180,  182,  186,  146,  147,  148,  149,  140,  150,  141,
	  151,  158,  166,  174,  152,  153,  154,  155,  156,  157,  140,  141,
	  159,  160,  161,  162,  163,  164,  165,  140,  141,  167,  168,  169,
	  170,  171,  172,  173,  140,  141,  175,  176,  177,  178,  179,  140,
	  141,  181,  140,  141,  183,  184,  185,  140,  141,  187,  188,  189,
	  190,  191,  192,  193,  194,  195,  196,  197,  140,  141,  199,  211,
	  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,  210,  140,
	  141,  212,  299,  213,  240,  214,  215,  216,  217,  218,  219,  220,
	  221,  220,  221,  226,  233,  223,  142,  225,  222,  223,  224,  142,
	  142,  225,  227,  228,  229,  230,  231,  142,  232,  231,  232,  234,
	  235,  236,  237,  238,  239,  231,  142,  232,  241,  242,  243,  244,
	  245,  256,  264,  287,  290,  295,  246,  247,  248,  249,  250,  251,
	  252,  253,  254,  255,  140,  141,  257,  258,  259,  260,  261,  262,
	  263,  140,  141,  265,  272,  280,  266,  267,  268,  269,  270,  271,
	  140,  141,  273,  274,  275,  276,  277,  278,  277,  278,    0,  142,
	  222,  279,  231,  142,  232,  222,  279,  281,  282,  283,  284,  285,
	  286,  140,  141,  288,  289,  140,  141,  291,  292,  293,  294,  140,
	  141,  296,  297,  298,  140,  141,  300,  301,  302,  140,  141,  304,
	  307,  305,  306,  140,  141,  308,  140,  141,  310,  313,  311,  312,
	  140,  141,  314,  315,  318,  316,  317,  140,  141,  319,  320,  321,
	  140,  141,  323,  324,  325,  140,  141,  327,  328,  329,  140,  141,
	  331,  332,  333,  351,  361,  366,  334,  338,  335,  336,  337,  140,
	  141,  339,  340,  341,  342,  343,  344,  345,  346,  347,  348,  349,
	  350,  140,  141,  352,  353,  354,  355,  356,  357,  358,  359,  360,
	  140,  141,  362,  363,  364,  365,  140,  141,  367,  368,  369,  370,
	  371,  372,  373,  374,  375,  376,  377,  378,  379,  380,  381,  140,
	  141,  383,  384,  385,  386,  387,  388,  389,  390,  391,  140,  141,
	  393,  405,  408,  394,  395,  396,  397,  398,  399,  400,  401,  402,
	  403,  404,  140,  141,  406,  407,  140,  141,  409,  410,  411,  412,
	  413,  414,  140,  141,  416,  417,  418,  419,  420,  421,  422,  423,
	  424,  425,  426,  140,  141,  428,  430,  429,  140,  141,  431,  435,
	  432,  433,  434,  140,  141,  436,  437,  438,  439,  440,  441,  442,
	  443,  451,  444,  445,  446,  447,  448,  449,  450,  140,  141,  452,
	  453,  454,  455,  456,  457,  458,  459,  140,  141,  461,  465,  462,
	  463,  464,  140,  141,  466,  475,  467,  471,  468,  469,  470,  140,
	  141,  472,  473,  474,  140,  141,  476,  477,  478,  479,  480,  481,
	  482,  483,  140,  141,  485,  498,  486,  490,  487,  488,  489,  140,
	  141,  491,  492,  493,  494,  495,  496,  497,  140,  141,  499,  500,
	  501,  502,  503,  504,  505,  506,  507,  508,  509,  510,  511,  512,
	  513,  514,  515,  516,  517,  518,  519,  520,  521,  140,  141,  523,
	  524,  140,  141,  525,  526,  530,  527,  528,  529,  140,  141,  531,
	  532,  533,  534,  535,  536,  537,  538,  539,  540,  541,  542,  543,
	  544,  545,  544,  545,  546,  547,  548,  549,  550,  551,  552,  231,
	  142,  232,  554,  560,  555,  556,  557,  558,  559,  140,  141,  561,
	  562,  563,  564,  565,  566,  567,  568,  140,  141,  570,  573,  571,
	  572,  140,  141,  574,  140,  141,  576,  582,  577,  578,  579,  580,
	  581,  140,  141,  583,  584,  585,  586,  587,  588,  589,  590,  591,
	  592,  593,  594,  595,  596,  140,  141,  598,  599,  619,  631,  661,
	  671,  685,  600,  601,  602,  603,  604,  605,  606,  607,  608,  609,
	  610,  611,  612,  613,  614,  615,  616,  617,  618,  140,  141,  620,
	  621,  622,  623,  624,  625,  626,  627,  628,  629,  630,  140,  141,
	  632,  649,  633,  634,  635,  636,  637,  638,  639,  640,  641,  644,
	  642,  643,  140,  141,  645,  646,  647,  648,  140,  141,  650,  651,
	  652,  653,  654,  655,  656,  657,  658,  659,  660,  140,  141,  662,
	  663,  664,  665,  666,  667,  668,  669,  670,  140,  141,  672,  673,
	  674,  675,  676,  677,  678,  679,  680,  681,  682,  683,  684,  140,
	  141,  686,  687,  688,  689,  690,  691,  692,  693,  694,  695,  696,
	  697,  698,  140,  141,  700,  701,  702,  704,  705,   14,  706,  699,
	  707,  710,  708,  709,   14,  711,  699,  712,   14,  711,  699,  712,
	  713,  714,  716,  717,  718,  719,  721,  722,  723,  724,  725,  727,
	  732,  728,  729,  730,  731,   12,  733,   12,    0,  735,  736,  735,
	  736,  737,  749,  738,  739,  738,  740,  741,  742,  741,  748,  743,
	  744,  745,  751,  746,  745,  747,  744,  752,  753
	};
}

private static final short _http_trans_targs[] = init__http_trans_targs_0();


private static short[] init__http_trans_actions_0()
{
	return new short [] {
	   13,  132,  132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
	  132,  132,  132,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   66,   11,   11,   11,   93,   11,   11,   11,   93,   11,
	   11,   11,   11,   11,   11,   87,   11,   90,   11,   11,   11,  105,
	  105,  105,  105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
	  105,  105,  105,  105,  105,  105,  135,   11,   11,   11,   11,   11,
	   27,   11,   11,   18,   11,   11,   11,   15,   11,   11,   11,   42,
	   11,   11,   11,   11,   11,   11,   11,   69,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   63,   11,   11,   45,   11,   11,   48,
	   11,   11,   11,   11,   11,   72,   11,   11,   11,   11,   11,   75,
	   11,   11,   11,   11,   11,   11,   33,   11,   11,   11,   11,   11,
	   11,   11,   84,   11,   11,   21,   11,   11,   11,   11,   11,   11,
	   11,   51,   11,   11,   11,   11,   54,   11,   24,   11,   11,   11,
	   11,   11,   60,   11,   11,   11,   11,   11,   11,   11,   11,   78,
	   11,   11,   11,   11,   36,   11,   11,   11,   11,   11,   11,   57,
	   11,   11,   11,   11,   11,   11,   11,   11,   81,  108,   11,  108,
	   11,   11,  404,  111,   11,  120,  412,  412,  412,  412,  412,  412,
	  412,  412,  412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
	  412,   11,   11,   11,   11,   11,   11,   11,   11,  144,   11,  144,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  148,  148,
	   11,   11,   11,   11,   11,   11,   11,  152,  152,   11,   11,   11,
	   11,   11,   11,   11,  156,  156,   11,   11,   11,   11,   11,  160,
	  160,   11,  164,  164,   11,   11,   11,  168,  168,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,  172,  172,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  176,
	  176,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  180,
	  180,   11,   11,  111,  111,  114,  408,  114,   11,   11,   11,  114,
	  117,   11,   11,   11,   11,   11,  432,  455,  432,   11,   11,   11,
	   11,   11,   11,   11,   11,  436,  460,  436,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,  204,  204,   11,   11,   11,   11,   11,   11,
	   11,  184,  184,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	  188,  188,   11,   11,   11,   11,  192,  192,   11,   11,  129,  440,
	  420,  416,  424,  445,  424,  126,  123,   11,   11,   11,   11,   11,
	   11,  196,  196,   11,   11,  200,  200,   11,   11,   11,   11,  208,
	  208,   11,   11,   11,  212,  212,   11,   11,   11,  216,  216,   11,
	   11,   11,   11,  220,  220,   11,  224,  224,   11,   11,   11,   11,
	  228,  228,   11,   11,   11,   11,   11,  232,  232,   11,   11,   11,
	  236,  236,   11,   11,   11,  240,  240,   11,   11,   11,  244,  244,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  248,
	  248,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,  252,  252,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	  256,  256,   11,   11,   11,   11,  260,  260,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  264,
	  264,   11,   11,   11,   11,   11,   11,   11,   11,   11,  268,  268,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,  272,  272,   11,   11,  276,  276,   11,   11,   11,   11,
	   11,   11,  280,  280,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,  284,  284,   11,   11,   11,  288,  288,   11,   11,
	   11,   11,   11,  292,  292,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,  296,  296,   11,
	   11,   11,   11,   11,   11,   11,   11,  300,  300,   11,   11,   11,
	   11,   11,  304,  304,   11,   11,   11,   11,   11,   11,   11,  308,
	  308,   11,   11,   11,  312,  312,   11,   11,   11,   11,   11,   11,
	   11,   11,  316,  316,   11,   11,   11,   11,   11,   11,   11,  320,
	  320,   11,   11,   11,   11,   11,   11,   11,  324,  324,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,  328,  328,   11,
	   11,  332,  332,   11,   11,   11,   11,   11,   11,  336,  336,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	  340,  340,   11,   11,  111,   11,   11,   11,   11,   11,   11,  428,
	  450,  428,   11,   11,   11,   11,   11,   11,   11,  344,  344,   11,
	   11,   11,   11,   11,   11,   11,   11,  348,  348,   11,   11,   11,
	   11,  352,  352,   11,  356,  356,   11,   11,   11,   11,   11,   11,
	   11,  360,  360,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,  364,  364,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,  368,  368,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  372,  372,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,  376,  376,   11,   11,   11,   11,  380,  380,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,  384,  384,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,  388,  388,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,  392,
	  392,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,  396,  396,   11,   11,   11,   11,   11,   96,   11,   96,
	   11,   96,   11,   11,  400,   99,  400,   99,  102,   11,  102,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   30,   11,   39,  141,  138,  138,    9,
	    9,    0,    0,    0,    0,    3,    0,  138,    0,    9,    0,    0,
	    7,    7,    0,    0,    0,    0,    0,    1,    5
	};
}

private static final short _http_trans_actions[] = init__http_trans_actions_0();


private static short[] init__http_eof_actions_0()
{
	return new short [] {
	    0,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  129,  129,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  141,  141,  141,   13,   13,   13,  141,  141,   13,   13,
	   13,   13,   13,   13,   13,   13,    0,    0,    0,    0
	};
}

private static final short _http_eof_actions[] = init__http_eof_actions_0();


static final int http_start = 1;
static final int http_first_final = 750;
static final int http_error = 0;

static final int http_en_chunked_body = 734;
static final int http_en_identity_body = 752;
static final int http_en_upgraded = 753;
static final int http_en_main = 1;


// line 514 "src/rl/picard/http/HttpParser.rl"

    // Variable used by ragel to represent the current state of the
    // parser. This must be an integer and it should persist across
    // invocations of the machine when the data is broken into blocks
    // that are processed independently. This variable may be modified
    // from outside the execution loop, but not from within.
    private int cs;

    // Stores some miscellaneous parser state such as whether or not
    // the body is chunked or not, whether or not the connection is
    // keep alive or upgraded, etc...
    private int flags;

    // The number of bytes read while parsing the HTTP message
    // head. This is to protect against a possible attack where
    // somebody sends unbounded HTTP message heads and causes out of
    // memory errors.
    private int hread;

    // When starting to parse an HTTP message head, an object is
    // requested from the callback. This object should be the
    // structure that contains HTTP headers for the message being
    // processed.
    private Object headers;

    // The HTTP protocol version used by the current message being
    // parsed. The major and minor numbers are broken up since they
    // will be moved into a clojure vector.
    private short httpMajor;
    private short httpMinor;

    // Tracks whether the current parser instance is parsing an HTTP
    // request or an HTTP response. Even though the parser can be
    // reused to parse multiple messages, each message must be of the
    // same type. In other words, if the first message a parser
    // instance parses is an HTTP request, then all subsequent
    // messages parsed by the same instance must also be HTTP
    // requests.
    private MessageType type;

    // Tracks the HTTP method of the currently parsed request. If the
    // HTTP message being currently parsed is a response, then this
    // will be nil.
    private HttpMethod method;

    // The response status if the current message being parsed is a
    // response.
    private short status;

    // Tracks the various message information
    private String pathInfo;
    private Mark   pathInfoMark;
    private String queryString;
    private Mark   queryStringMark;
    private String headerName;
    private Mark   headerNameMark;

    private HeaderValue headerValue;

    // Track the content length of the HTTP message
    private long contentLength;

    // The object that gets called on various parse events.
    private HttpParserCallback callback;

    public HttpParser(HttpParserCallback callback) {
        
// line 2700 "src/java/picard/http/HttpParser.java"
	{
	cs = http_start;
	}

// line 581 "src/rl/picard/http/HttpParser.rl"
        this.callback = callback;
    }

    public boolean isRequest() {
        return type == MessageType.REQUEST;
    }

    public boolean isResponse() {
        return type == MessageType.RESPONSE;
    }

    public boolean isParsingHead() {
        return ( flags & PARSING_HEAD ) == PARSING_HEAD;
    }

    public boolean hasBody() {
        return isIdentityBody() || isChunkedBody();
    }

    public boolean isIdentityBody() {
        return ( flags & IDENTITY_BODY ) == IDENTITY_BODY;
    }

    public boolean isChunkedBody() {
        return ( flags & CHUNKED_BODY ) == CHUNKED_BODY;
    }

    public boolean isKeepAlive() {
        return ( flags & KEEP_ALIVE ) == KEEP_ALIVE;
    }

    public boolean isUpgrade() {
        return ( flags & UPGRADE ) == UPGRADE || method == HttpMethod.CONNECT;
    }

    public boolean isError() {
        return ( flags & ERROR ) == ERROR;
    }

    public HttpMethod getMethod() {
        return method;
    }

    public short getHttpMajor() {
        return httpMajor;
    }

    public short getHttpMinor() {
        return httpMinor;
    }

    public String getPathInfo() {
        if (pathInfo == null) {
            return "";
        }

        return pathInfo;
    }

    public String getQueryString() {
        if (queryString == null) {
            return "";
        }

        return queryString;
    }

    public int execute(String str) {
        ByteBuffer buf = ByteBuffer.wrap(str.getBytes());
        return execute(buf);
    }

    public int execute(ByteBuffer buf) {
        // First make sure that the parser isn't in an error state
        if (isError()) {
            throw new HttpParserException("The parser is in an error state.");
        }

        // Setup ragel variables
        int p   = buf.position();
        int pe  = buf.limit();
        int eof = pe + 1;

        if (isParsingHead()) {
            pathInfoMark    = bridge(buf, pathInfoMark);
            queryStringMark = bridge(buf, queryStringMark);
            headerNameMark  = bridge(buf, headerNameMark);

            if (headerValue != null) {
                headerValue.bridge(buf);
            }
        }

        try {
            parseLoop: {
                
// line 677 "src/rl/picard/http/HttpParser.rl"
                
// line 2804 "src/java/picard/http/HttpParser.java"
	{
	int _klen;
	int _trans = 0;
	int _widec;
	int _acts;
	int _nacts;
	int _keys;
	int _goto_targ = 0;

	_goto: while (true) {
	switch ( _goto_targ ) {
	case 0:
	if ( p == pe ) {
		_goto_targ = 4;
		continue _goto;
	}
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
case 1:
	_widec = ( buf.get(p));
	_keys = _http_cond_offsets[cs]*2
;	_klen = _http_cond_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys
;		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_cond_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_cond_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				switch ( _http_cond_spaces[_http_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = 65536 + (( buf.get(p)) - 0);
		if ( 
// line 411 "src/rl/picard/http/HttpParser.rl"

            contentLength > 0
         ) _widec += 65536;
		break;
	}
				}
				break;
			}
		}
	}

	_match: do {
	_keys = _http_key_offsets[cs];
	_trans = _http_index_offsets[cs];
	_klen = _http_single_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + _klen - 1;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 1;
			else if ( _widec > _http_trans_keys[_mid] )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				break _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _http_range_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_trans_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				break _match;
			}
		}
		_trans += _klen;
	}
	} while (false);

	_trans = _http_indicies[_trans];
	cs = _http_trans_targs[_trans];

	if ( _http_trans_actions[_trans] != 0 ) {
		_acts = _http_trans_actions[_trans];
		_nacts = (int) _http_actions[_acts++];
		while ( _nacts-- > 0 )
	{
			switch ( _http_actions[_acts++] )
			{
	case 0:
// line 147 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.HEAD;        }
	break;
	case 1:
// line 148 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.GET;         }
	break;
	case 2:
// line 149 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.POST;        }
	break;
	case 3:
// line 150 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PUT;         }
	break;
	case 4:
// line 151 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.DELETE;      }
	break;
	case 5:
// line 152 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CONNECT;     }
	break;
	case 6:
// line 153 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.OPTIONS;     }
	break;
	case 7:
// line 154 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.TRACE;       }
	break;
	case 8:
// line 155 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.COPY;        }
	break;
	case 9:
// line 156 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.LOCK;        }
	break;
	case 10:
// line 157 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKCOL;       }
	break;
	case 11:
// line 158 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MOVE;        }
	break;
	case 12:
// line 159 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPFIND;    }
	break;
	case 13:
// line 160 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPPATCH;   }
	break;
	case 14:
// line 161 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNLOCK;      }
	break;
	case 15:
// line 162 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.REPORT;      }
	break;
	case 16:
// line 163 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKACTIVITY;  }
	break;
	case 17:
// line 164 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CHECKOUT;    }
	break;
	case 18:
// line 165 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MERGE;       }
	break;
	case 19:
// line 166 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MSEARCH;     }
	break;
	case 20:
// line 167 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.NOTIFY;      }
	break;
	case 21:
// line 168 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.SUBSCRIBE;   }
	break;
	case 22:
// line 169 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNSUBSCRIBE; }
	break;
	case 23:
// line 170 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PATCH;       }
	break;
	case 24:
// line 172 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT);                    }
	break;
	case 25:
// line 173 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_CHARSET);            }
	break;
	case 26:
// line 174 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_ENCODING);           }
	break;
	case 27:
// line 175 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_LANGUAGE);           }
	break;
	case 28:
// line 176 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_RANGES);             }
	break;
	case 29:
// line 177 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AGE);                       }
	break;
	case 30:
// line 178 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ALLOW);                     }
	break;
	case 31:
// line 179 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AUTHORIZATION);             }
	break;
	case 32:
// line 180 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CACHE_CONTROL);             }
	break;
	case 33:
// line 181 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONNECTION);                }
	break;
	case 34:
// line 182 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_ENCODING);          }
	break;
	case 35:
// line 183 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LANGUAGE);          }
	break;
	case 36:
// line 184 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LENGTH);            }
	break;
	case 37:
// line 185 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LOCATION);          }
	break;
	case 38:
// line 186 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_MD5);               }
	break;
	case 39:
// line 187 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_DISPOSITION);       }
	break;
	case 40:
// line 188 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_RANGE);             }
	break;
	case 41:
// line 189 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_TYPE);              }
	break;
	case 42:
// line 190 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_COOKIE);                    }
	break;
	case 43:
// line 191 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DATE);                      }
	break;
	case 44:
// line 192 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DNT);                       }
	break;
	case 45:
// line 193 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ETAG);                      }
	break;
	case 46:
// line 194 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPECT);                    }
	break;
	case 47:
// line 195 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPIRES);                   }
	break;
	case 48:
// line 196 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_FROM);                      }
	break;
	case 49:
// line 197 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_HOST);                      }
	break;
	case 50:
// line 198 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MATCH);                  }
	break;
	case 51:
// line 199 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MODIFIED_SINCE);         }
	break;
	case 52:
// line 200 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_NONE_MATCH);             }
	break;
	case 53:
// line 201 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_RANGE);                  }
	break;
	case 54:
// line 202 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_UNMODIFIED_SINCE);       }
	break;
	case 55:
// line 203 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_KEEP_ALIVE);                }
	break;
	case 56:
// line 204 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LAST_MODIFIED);             }
	break;
	case 57:
// line 205 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LINK);                      }
	break;
	case 58:
// line 206 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LOCATION);                  }
	break;
	case 59:
// line 207 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_MAX_FORWARDS);              }
	break;
	case 60:
// line 208 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_P3P);                       }
	break;
	case 61:
// line 209 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PRAGMA);                    }
	break;
	case 62:
// line 210 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHENTICATE);        }
	break;
	case 63:
// line 211 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHORIZATION);       }
	break;
	case 64:
// line 212 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RANGE);                     }
	break;
	case 65:
// line 213 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFERER);                   }
	break;
	case 66:
// line 214 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFRESH);                   }
	break;
	case 67:
// line 215 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RETRY_AFTER);               }
	break;
	case 68:
// line 216 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SERVER);                    }
	break;
	case 69:
// line 217 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SET_COOKIE);                }
	break;
	case 70:
// line 218 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_STRICT_TRANSPORT_SECURITY); }
	break;
	case 71:
// line 219 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TE);                        }
	break;
	case 72:
// line 220 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRAILER);                   }
	break;
	case 73:
// line 221 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRANSFER_ENCODING);         }
	break;
	case 74:
// line 222 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_UPGRADE);                   }
	break;
	case 75:
// line 223 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_USER_AGENT);                }
	break;
	case 76:
// line 224 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VARY);                      }
	break;
	case 77:
// line 225 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VIA);                       }
	break;
	case 78:
// line 226 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WARNING);                   }
	break;
	case 79:
// line 227 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WWW_AUTHENTICATE);          }
	break;
	case 80:
// line 228 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_CONTENT_TYPE_OPTIONS);    }
	break;
	case 81:
// line 229 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_DO_NOT_TRACK);            }
	break;
	case 82:
// line 230 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_FOR);           }
	break;
	case 83:
// line 231 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_PROTO);         }
	break;
	case 84:
// line 232 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FRAME_OPTIONS);           }
	break;
	case 85:
// line 233 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_POWERED_BY);              }
	break;
	case 86:
// line 234 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_REQUESTED_WITH);          }
	break;
	case 87:
// line 235 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_XSS_PROTECTION);          }
	break;
	case 88:
// line 237 "src/rl/picard/http/HttpParser.rl"
	{
            httpMajor *= 10;
            httpMajor += ( buf.get(p)) - '0';

            if (httpMajor > 999) {
                throw new HttpParserException("The HTTP major version is invalid.");
            }
        }
	break;
	case 89:
// line 246 "src/rl/picard/http/HttpParser.rl"
	{
            httpMinor *= 10;
            httpMinor += ( buf.get(p)) - '0';

            if (httpMinor > 999) {
                throw new HttpParserException("The HTTP minor version is invalid.");
            }
        }
	break;
	case 90:
// line 255 "src/rl/picard/http/HttpParser.rl"
	{
            pathInfoMark = new Mark(buf, p);
        }
	break;
	case 91:
// line 259 "src/rl/picard/http/HttpParser.rl"
	{
            pathInfoMark.finalize(p);

            pathInfo     = pathInfoMark.materialize();
            pathInfoMark = null;
        }
	break;
	case 92:
// line 266 "src/rl/picard/http/HttpParser.rl"
	{
            queryStringMark = new Mark(buf, p);
        }
	break;
	case 93:
// line 270 "src/rl/picard/http/HttpParser.rl"
	{
            queryStringMark.finalize(p);

            queryString     = queryStringMark.materialize();
            queryStringMark = null;
        }
	break;
	case 94:
// line 277 "src/rl/picard/http/HttpParser.rl"
	{
            headerNameMark = new Mark(buf, p);
        }
	break;
	case 95:
// line 281 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerNameMark != null) {
                headerNameMark.finalize(p);

                headerName     = headerNameMark.materialize().toLowerCase();
                headerNameMark = null;
            }
        }
	break;
	case 96:
// line 290 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue == null) {
                headerValue = new HeaderValue(buf, p);
            }
            else {
                headerValue.startLine(buf, p);
            }
        }
	break;
	case 97:
// line 299 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.mark(p);
            }
        }
	break;
	case 98:
// line 305 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.endLine();
            }
        }
	break;
	case 99:
// line 311 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                callback.header(headers, headerName, headerValue.materialize());
                headerValue = null;
            }
        }
	break;
	case 100:
// line 318 "src/rl/picard/http/HttpParser.rl"
	{
            if (contentLength >= ALMOST_MAX_LONG) {
                throw new HttpParserException("The content-length is WAY too big");
            }

            contentLength *= 10;
            contentLength += ( buf.get(p)) - '0';
        }
	break;
	case 101:
// line 327 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 102:
// line 334 "src/rl/picard/http/HttpParser.rl"
	{
            if (isChunkedBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= IDENTITY_BODY;

            headerValue = null;
            callback.header(headers, HDR_CONTENT_LENGTH, String.valueOf(contentLength));
        }
	break;
	case 103:
// line 345 "src/rl/picard/http/HttpParser.rl"
	{
            if (isIdentityBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= CHUNKED_BODY;

            headerValue = null;
            callback.header(headers, HDR_TRANSFER_ENCODING, VAL_CHUNKED);
        }
	break;
	case 104:
// line 356 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= CONN_CLOSE;

            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_CLOSE);
        }
	break;
	case 105:
// line 363 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= UPGRADE;

            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_UPGRADE);
        }
	break;
	case 106:
// line 370 "src/rl/picard/http/HttpParser.rl"
	{
            reset();

            flags  |= PARSING_HEAD;
            headers = callback.blankHeaders();
        }
	break;
	case 107:
// line 377 "src/rl/picard/http/HttpParser.rl"
	{
            // Not parsing the HTTP message head anymore
            flags ^= PARSING_HEAD;

            ByteBuffer body = null;

            if (isUpgrade()) {
                cs = 753;
            }
            else if (isIdentityBody()) {
                int remaining = buf.limit() - p;
                // If the remaining content length is present in the
                // buffer, just include it in the callback.
                if (remaining >= contentLength) {
                    int toRead = (int) contentLength;
                    ++p;
                    body = slice(buf, p, p + toRead);
                    p += toRead - 1;
                    contentLength = 0;
                }
                else {
                    cs = 752;
                }
            }
            else if (isChunkedBody()) {
                cs = 734;
            }

            callback.message(this, headers, body);

            // Unset references to allow the GC to reclaim the memory
            resetHeadState();
        }
	break;
	case 108:
// line 415 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead;

            toRead = (int) Math.min((long) Integer.MAX_VALUE, contentLength);
            toRead = Math.min(buf.remaining(), toRead);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;

                if (contentLength == 0) {
                    callback.body(this, null);
                }

                if (contentLength == 0) {
                    cs = 1;
                }
            }
        }
	break;
	case 109:
// line 438 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead;

            toRead = (int) Math.min((long) Integer.MAX_VALUE, contentLength);
            toRead = Math.min(buf.remaining(), toRead);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;
            }
        }
	break;
	case 110:
// line 453 "src/rl/picard/http/HttpParser.rl"
	{
            int remaining = buf.limit() - p;

            if (remaining > 0) {
                callback.message(this, slice(buf, p, buf.limit()));
                break parseLoop;
            }
        }
	break;
	case 111:
// line 462 "src/rl/picard/http/HttpParser.rl"
	{
            callback.body(this, null);
        }
	break;
	case 112:
// line 466 "src/rl/picard/http/HttpParser.rl"
	{
            contentLength = 0;
        }
	break;
	case 113:
// line 470 "src/rl/picard/http/HttpParser.rl"
	{
            contentLength *= 16;
            contentLength += HEX_MAP[( buf.get(p))];
        }
	break;
	case 114:
// line 475 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 115:
// line 485 "src/rl/picard/http/HttpParser.rl"
	{
            if (++hread > MAX_HEADER_SIZE) {
                throw new HttpParserException("The HTTP message head is too large");
            }
        }
	break;
	case 116:
// line 491 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3581 "src/java/picard/http/HttpParser.java"
			}
		}
	}

case 2:
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
	if ( ++p != pe ) {
		_goto_targ = 1;
		continue _goto;
	}
case 4:
	if ( p == eof )
	{
	int __acts = _http_eof_actions[cs];
	int __nacts = (int) _http_actions[__acts++];
	while ( __nacts-- > 0 ) {
		switch ( _http_actions[__acts++] ) {
	case 101:
// line 327 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 114:
// line 475 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 116:
// line 491 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3628 "src/java/picard/http/HttpParser.java"
		}
	}
	}

case 5:
	}
	break; }
	}

// line 678 "src/rl/picard/http/HttpParser.rl"
            }
        }
        catch (RuntimeException e) {
            flags |= ERROR;
            throw e;
        }

        return p;
    }

    private void setHeaderName(String name) {
        headerName     = name;
        headerNameMark = null;
    }

    private Mark bridge(ByteBuffer buf, Mark mark) {
        if (mark == null) {
            return null;
        }

        return mark.bridge(buf);
    }

    private void reset() {
        flags         = 0;
        hread         = 0;
        status        = 0;
        httpMajor     = 0;
        httpMinor     = 0;
        contentLength = 0;
    }

    private void resetHeadState() {
        headers         = null;
        method          = null;
        pathInfo        = null;
        pathInfoMark    = null;
        queryString     = null;
        queryStringMark = null;
        headerName      = null;
        headerNameMark  = null;
        headerValue     = null;
    }

    private ByteBuffer slice(ByteBuffer buf, int from, int to) {
        ByteBuffer retval = buf.asReadOnlyBuffer();

        retval.position(from);
        retval.limit(to);

        return retval;
    }

    private String parseErrorMsg(ByteBuffer buf, int fpc) {
        int from = Math.max(0, fpc - 35);
        int to   = Math.min(fpc + 35, buf.limit());

        ByteBuffer before = slice(buf, from, fpc);
        ByteBuffer after  = slice(buf, fpc, to);

        byte[] beforeBytes = new byte[before.remaining()];
        byte[] afterBytes  = new byte[after.remaining()];

        before.get(beforeBytes);
        after.get(afterBytes);

        return new String(beforeBytes) + "|" + new String(afterBytes);
    }
}
