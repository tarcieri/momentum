
// line 1 "src/rl/picard/http/HttpParser.rl"
package picard.http;

import clojure.lang.AFn;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.ByteBuffer;

/**
 * TODO:
 *   - Limit the number of times marks can be bridged.
 *   - Unify HeaderValue and marks.
 *   - Improve the handling of Connection header values
 *   - Handle full URIs in the request line
 *   - Limit the maximum number of URI characters
 *   - Possibly handle quotes in URIs (old Mozilla bug)
 */
public final class HttpParser extends AFn {
    public enum MessageType {
        REQUEST,
        RESPONSE
    }

    public enum HttpMethod {
        HEAD,
        GET,
        POST,
        PUT,
        DELETE,
        CONNECT,
        OPTIONS,
        TRACE,

        // webdav
        COPY,
        LOCK,
        MKCOL,
        MOVE,
        PROPFIND,
        PROPPATCH,
        UNLOCK,

        // subversion
        REPORT,
        MKACTIVITY,
        CHECKOUT,
        MERGE,

        // upnp
        MSEARCH,
        NOTIFY,
        SUBSCRIBE,
        UNSUBSCRIBE,

        // RFC-5789
        PATCH
    }

    public static final byte SP = (byte) 0x20; // Space
    public static final byte HT = (byte) 0x09; // Horizontal tab
    public static final String SLASH = new String("/");
    public static final String EMPTY_STRING = new String("");
    public static final ByteBuffer SPACE = ByteBuffer.wrap(new byte[] { SP });

    // Map of hexadecimal chars to their numeric value
    public static final byte[] HEX_MAP = new byte [] {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
         0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
    };

    // Listing out all of the headers that we are going to use
    public static final String HDR_ACCEPT                    = "accept".intern();
    public static final String HDR_ACCEPT_CHARSET            = "accept-charset".intern();
    public static final String HDR_ACCEPT_ENCODING           = "accept-encoding".intern();
    public static final String HDR_ACCEPT_LANGUAGE           = "accept-language".intern();
    public static final String HDR_ACCEPT_RANGES             = "accept-ranges".intern();
    public static final String HDR_AGE                       = "age".intern();
    public static final String HDR_ALLOW                     = "allow".intern();
    public static final String HDR_AUTHORIZATION             = "authorization".intern();
    public static final String HDR_CACHE_CONTROL             = "cache-control".intern();
    public static final String HDR_CONNECTION                = "connection".intern();
    public static final String HDR_CONTENT_ENCODING          = "content-encoding".intern();
    public static final String HDR_CONTENT_LANGUAGE          = "content-language".intern();
    public static final String HDR_CONTENT_LENGTH            = "content-length".intern();
    public static final String HDR_CONTENT_LOCATION          = "content-location".intern();
    public static final String HDR_CONTENT_MD5               = "content-md5".intern();
    public static final String HDR_CONTENT_DISPOSITION       = "content-disposition".intern();
    public static final String HDR_CONTENT_RANGE             = "content-range".intern();
    public static final String HDR_CONTENT_TYPE              = "content-type".intern();
    public static final String HDR_COOKIE                    = "cookie".intern();
    public static final String HDR_DATE                      = "date".intern();
    public static final String HDR_DNT                       = "dnt".intern();
    public static final String HDR_ETAG                      = "etag".intern();
    public static final String HDR_EXPECT                    = "expect".intern();
    public static final String HDR_EXPIRES                   = "expires".intern();
    public static final String HDR_FROM                      = "from".intern();
    public static final String HDR_HOST                      = "host".intern();
    public static final String HDR_IF_MATCH                  = "if-match".intern();
    public static final String HDR_IF_MODIFIED_SINCE         = "if-modified-since".intern();
    public static final String HDR_IF_NONE_MATCH             = "if-none-match".intern();
    public static final String HDR_IF_RANGE                  = "if-range".intern();
    public static final String HDR_IF_UNMODIFIED_SINCE       = "if-unmodified-since".intern();
    public static final String HDR_KEEP_ALIVE                = "keep-alive".intern();
    public static final String HDR_LAST_MODIFIED             = "last-modified".intern();
    public static final String HDR_LINK                      = "link".intern();
    public static final String HDR_LOCATION                  = "location".intern();
    public static final String HDR_MAX_FORWARDS              = "max-forwards".intern();
    public static final String HDR_P3P                       = "p3p".intern();
    public static final String HDR_PRAGMA                    = "pragma".intern();
    public static final String HDR_PROXY_AUTHENTICATE        = "proxy-authenticate".intern();
    public static final String HDR_PROXY_AUTHORIZATION       = "proxy-authorization".intern();
    public static final String HDR_RANGE                     = "range".intern();
    public static final String HDR_REFERER                   = "referer".intern();
    public static final String HDR_REFRESH                   = "refresh".intern();
    public static final String HDR_RETRY_AFTER               = "retry-after".intern();
    public static final String HDR_SERVER                    = "server".intern();
    public static final String HDR_SET_COOKIE                = "set-cookie".intern();
    public static final String HDR_STRICT_TRANSPORT_SECURITY = "strict-transport-security".intern();
    public static final String HDR_TE                        = "te".intern();
    public static final String HDR_TRAILER                   = "trailer".intern();
    public static final String HDR_TRANSFER_ENCODING         = "transfer-encoding".intern();
    public static final String HDR_UPGRADE                   = "upgrade".intern();
    public static final String HDR_USER_AGENT                = "user-agent".intern();
    public static final String HDR_VARY                      = "vary".intern();
    public static final String HDR_VIA                       = "via".intern();
    public static final String HDR_WARNING                   = "warning".intern();
    public static final String HDR_WWW_AUTHENTICATE          = "www-authenticate".intern();
    public static final String HDR_X_CONTENT_TYPE_OPTIONS    = "x-content-type-options".intern();
    public static final String HDR_X_DO_NOT_TRACK            = "x-do-not-track".intern();
    public static final String HDR_X_FORWARDED_FOR           = "x-forwarded-for".intern();
    public static final String HDR_X_FORWARDED_PROTO         = "x-forwarded-proto".intern();
    public static final String HDR_X_FRAME_OPTIONS           = "x-frame-options".intern();
    public static final String HDR_X_POWERED_BY              = "x-powered-by".intern();
    public static final String HDR_X_REQUESTED_WITH          = "x-requested-with".intern();
    public static final String HDR_X_XSS_PROTECTION          = "x-xss-protection".intern();

    public static final String VAL_100_CONTINUE = "100-continue".intern();
    public static final String VAL_CHUNKED      = "chunked".intern();
    public static final String VAL_CLOSE        = "close".intern();
    public static final String VAL_UPGRADE      = "upgrade".intern();

    public static boolean isWhiteSpace(byte b) {
        return b == SP || b == HT;
    }

    
// line 512 "src/rl/picard/http/HttpParser.rl"


    public static final long ALMOST_MAX_LONG     = Long.MAX_VALUE / 10;
    public static final long ALMOST_MAX_LONG_HEX = Long.MAX_VALUE / 16;

    public static final int  MAX_HEADER_SIZE = 100 * 1024;
    public static final int  PARSING_HEAD    = 1 << 0;
    public static final int  IDENTITY_BODY   = 1 << 1;
    public static final int  CHUNKED_BODY    = 1 << 2;
    public static final int  CONN_CLOSE      = 1 << 3;
    public static final int  KEEP_ALIVE      = 1 << 4;
    public static final int  UPGRADE         = 1 << 5;
    public static final int  EXPECT_CONTINUE = 1 << 6;
    public static final int  ERROR           = 1 << 7;

    
// line 172 "src/java/picard/http/HttpParser.java"
private static byte[] init__http_actions_0()
{
	return new byte [] {
	    0,    1,  108,    1,  109,    1,  110,    1,  111,    1,  113,    1,
	  115,    1,  116,    1,  117,    2,    0,  116,    2,    1,  116,    2,
	    2,  116,    2,    3,  116,    2,    4,  116,    2,    5,  116,    2,
	    6,  116,    2,    7,  116,    2,    8,  116,    2,    9,  116,    2,
	   10,  116,    2,   11,  116,    2,   12,  116,    2,   13,  116,    2,
	   14,  116,    2,   15,  116,    2,   16,  116,    2,   17,  116,    2,
	   18,  116,    2,   19,  116,    2,   20,  116,    2,   21,  116,    2,
	   22,  116,    2,   23,  116,    2,   88,  116,    2,   89,  116,    2,
	   90,  116,    2,   91,  116,    2,   92,  116,    2,   93,  116,    2,
	   94,  116,    2,   95,  116,    2,   96,  116,    2,   97,  116,    2,
	   98,  116,    2,   99,  116,    2,  100,  116,    2,  100,  117,    2,
	  106,  116,    2,  107,  116,    2,  112,  113,    2,  114,  117,    3,
	   24,   94,  116,    3,   25,   94,  116,    3,   26,   94,  116,    3,
	   27,   94,  116,    3,   28,   94,  116,    3,   29,   94,  116,    3,
	   30,   94,  116,    3,   31,   94,  116,    3,   32,   94,  116,    3,
	   33,   94,  116,    3,   34,   94,  116,    3,   35,   94,  116,    3,
	   36,   94,  116,    3,   37,   94,  116,    3,   38,   94,  116,    3,
	   39,   94,  116,    3,   40,   94,  116,    3,   41,   94,  116,    3,
	   42,   94,  116,    3,   43,   94,  116,    3,   44,   94,  116,    3,
	   45,   94,  116,    3,   46,   94,  116,    3,   47,   94,  116,    3,
	   48,   94,  116,    3,   49,   94,  116,    3,   50,   94,  116,    3,
	   51,   94,  116,    3,   52,   94,  116,    3,   53,   94,  116,    3,
	   54,   94,  116,    3,   55,   94,  116,    3,   56,   94,  116,    3,
	   57,   94,  116,    3,   58,   94,  116,    3,   59,   94,  116,    3,
	   60,   94,  116,    3,   61,   94,  116,    3,   62,   94,  116,    3,
	   63,   94,  116,    3,   64,   94,  116,    3,   65,   94,  116,    3,
	   66,   94,  116,    3,   67,   94,  116,    3,   68,   94,  116,    3,
	   69,   94,  116,    3,   70,   94,  116,    3,   71,   94,  116,    3,
	   72,   94,  116,    3,   73,   94,  116,    3,   74,   94,  116,    3,
	   75,   94,  116,    3,   76,   94,  116,    3,   77,   94,  116,    3,
	   78,   94,  116,    3,   79,   94,  116,    3,   80,   94,  116,    3,
	   81,   94,  116,    3,   82,   94,  116,    3,   83,   94,  116,    3,
	   84,   94,  116,    3,   85,   94,  116,    3,   86,   94,  116,    3,
	   87,   94,  116,    3,   95,   97,  116,    3,   96,   97,  116,    3,
	   98,   93,  116,    3,   99,   95,  116,    3,  100,   95,  116,    3,
	  101,   96,  116,    3,  102,   96,  116,    3,  103,   96,  116,    3,
	  104,   96,  116,    3,  105,   96,  116,    4,  100,   95,   97,  116,
	    4,  101,   96,   97,  116,    4,  102,   96,   97,  116,    4,  103,
	   96,   97,  116,    4,  104,   96,   97,  116,    4,  105,   96,   97,
	  116
	};
}

private static final byte _http_actions[] = init__http_actions_0();


private static byte[] init__http_cond_offsets_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    2
	};
}

private static final byte _http_cond_offsets[] = init__http_cond_offsets_0();


private static byte[] init__http_cond_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    1,    0
	};
}

private static final byte _http_cond_lengths[] = init__http_cond_lengths_0();


private static int[] init__http_cond_keys_0()
{
	return new int [] {
	    0,65535,    0,65535,    0
	};
}

private static final int _http_cond_keys[] = init__http_cond_keys_0();


private static byte[] init__http_cond_spaces_0()
{
	return new byte [] {
	    0,    0,    0
	};
}

private static final byte _http_cond_spaces[] = init__http_cond_spaces_0();


private static short[] init__http_key_offsets_0()
{
	return new short [] {
	    0,    0,   14,   15,   29,   31,   32,   33,   34,   35,   36,   37,
	   38,   42,   47,   48,   99,  100,  101,  102,  103,  104,  105,  106,
	  107,  108,  109,  110,  111,  112,  113,  114,  115,  116,  117,  121,
	  122,  123,  124,  125,  127,  128,  129,  130,  131,  132,  133,  134,
	  135,  136,  137,  138,  139,  140,  141,  142,  143,  144,  145,  146,
	  147,  148,  149,  150,  151,  152,  153,  154,  155,  156,  157,  158,
	  159,  160,  164,  165,  166,  167,  168,  169,  170,  171,  172,  173,
	  175,  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,
	  187,  188,  189,  190,  191,  192,  193,  194,  195,  196,  197,  198,
	  199,  200,  201,  202,  203,  204,  205,  206,  207,  209,  210,  211,
	  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,  239,
	  242,  248,  249,  302,  327,  346,  365,  384,  403,  421,  446,  465,
	  484,  503,  522,  541,  560,  577,  596,  615,  634,  653,  672,  691,
	  710,  727,  746,  765,  784,  803,  822,  841,  860,  877,  896,  915,
	  934,  953,  972,  989, 1008, 1025, 1044, 1063, 1082, 1099, 1118, 1137,
	 1156, 1175, 1194, 1213, 1232, 1251, 1270, 1289, 1308, 1325, 1346, 1365,
	 1384, 1403, 1421, 1440, 1459, 1478, 1497, 1516, 1535, 1554, 1571, 1592,
	 1613, 1632, 1651, 1670, 1689, 1708, 1727, 1744, 1747, 1757, 1763, 1768,
	 1774, 1780, 1788, 1796, 1804, 1812, 1818, 1824, 1830, 1838, 1846, 1854,
	 1862, 1870, 1878, 1884, 1903, 1922, 1941, 1959, 1988, 2007, 2026, 2045,
	 2064, 2083, 2102, 2121, 2140, 2159, 2178, 2195, 2214, 2233, 2252, 2271,
	 2290, 2309, 2328, 2345, 2368, 2387, 2406, 2425, 2444, 2463, 2482, 2499,
	 2518, 2537, 2556, 2575, 2592, 2595, 2603, 2611, 2630, 2649, 2668, 2687,
	 2706, 2725, 2742, 2761, 2779, 2796, 2815, 2834, 2853, 2872, 2889, 2908,
	 2927, 2946, 2963, 2982, 3001, 3020, 3037, 3058, 3077, 3096, 3113, 3132,
	 3149, 3170, 3189, 3208, 3225, 3244, 3265, 3284, 3303, 3320, 3323, 3330,
	 3337, 3344, 3351, 3359, 3367, 3375, 3383, 3391, 3399, 3407, 3415, 3421,
	 3440, 3459, 3478, 3495, 3514, 3533, 3552, 3569, 3588, 3607, 3626, 3643,
	 3662, 3680, 3705, 3726, 3745, 3764, 3783, 3800, 3819, 3838, 3857, 3876,
	 3895, 3914, 3932, 3951, 3970, 3989, 4008, 4027, 4044, 4063, 4082, 4101,
	 4119, 4138, 4157, 4176, 4195, 4214, 4231, 4250, 4269, 4288, 4307, 4324,
	 4343, 4362, 4381, 4400, 4419, 4438, 4457, 4476, 4495, 4513, 4532, 4551,
	 4570, 4589, 4608, 4625, 4644, 4663, 4682, 4700, 4719, 4738, 4757, 4776,
	 4795, 4812, 4835, 4854, 4873, 4891, 4910, 4929, 4948, 4967, 4986, 5005,
	 5024, 5043, 5060, 5079, 5098, 5115, 5134, 5153, 5172, 5191, 5210, 5229,
	 5246, 5265, 5284, 5302, 5321, 5340, 5359, 5378, 5397, 5416, 5435, 5454,
	 5471, 5491, 5510, 5527, 5548, 5567, 5586, 5605, 5622, 5641, 5660, 5678,
	 5697, 5716, 5735, 5754, 5775, 5794, 5813, 5832, 5851, 5870, 5889, 5908,
	 5925, 5944, 5963, 5982, 6001, 6020, 6039, 6058, 6077, 6094, 6115, 6134,
	 6153, 6172, 6189, 6210, 6231, 6250, 6269, 6288, 6305, 6324, 6343, 6362,
	 6379, 6398, 6417, 6435, 6454, 6473, 6492, 6511, 6530, 6547, 6568, 6589,
	 6608, 6627, 6646, 6663, 6681, 6700, 6719, 6738, 6757, 6776, 6795, 6812,
	 6831, 6850, 6869, 6888, 6906, 6925, 6944, 6963, 6982, 7001, 7020, 7039,
	 7058, 7077, 7095, 7114, 7133, 7152, 7171, 7190, 7209, 7228, 7247, 7264,
	 7285, 7302, 7321, 7342, 7361, 7380, 7399, 7416, 7435, 7454, 7473, 7492,
	 7510, 7529, 7548, 7567, 7586, 7605, 7624, 7643, 7662, 7679, 7682, 7690,
	 7698, 7706, 7714, 7722, 7730, 7738, 7744, 7765, 7784, 7803, 7822, 7841,
	 7860, 7877, 7896, 7915, 7933, 7952, 7971, 7990, 8009, 8028, 8045, 8066,
	 8085, 8104, 8121, 8140, 8157, 8178, 8197, 8216, 8235, 8254, 8273, 8290,
	 8309, 8327, 8346, 8365, 8384, 8403, 8422, 8441, 8460, 8479, 8498, 8517,
	 8536, 8555, 8572, 8590, 8619, 8638, 8657, 8676, 8695, 8714, 8733, 8751,
	 8770, 8789, 8808, 8827, 8845, 8864, 8883, 8902, 8921, 8940, 8959, 8978,
	 8995, 9014, 9032, 9051, 9070, 9089, 9107, 9126, 9145, 9164, 9183, 9202,
	 9219, 9240, 9259, 9278, 9297, 9316, 9335, 9354, 9373, 9391, 9412, 9431,
	 9450, 9467, 9486, 9505, 9524, 9543, 9560, 9579, 9598, 9617, 9635, 9654,
	 9673, 9692, 9711, 9730, 9749, 9768, 9785, 9804, 9823, 9842, 9861, 9880,
	 9899, 9917, 9936, 9955, 9972, 9991,10010,10029,10048,10067,10086,10105,
	10124,10142,10161,10180,10199,10218,10235,10254,10273,10291,10310,10329,
	10348,10367,10386,10405,10424,10443,10462,10481,10498,10501,10503,10505,
	10507,10508,10510,10513,10515,10518,10520,10521,10522,10523,10524,10525,
	10526,10527,10534,10541,10549,10550,10553,10554,10561,10570,10571,10575,
	10576,10580,10581,10585,10589,10593,10607,10607,10609
	};
}

private static final short _http_key_offsets[] = init__http_key_offsets_0();


private static int[] init__http_trans_keys_0()
{
	return new int [] {
	   13,   67,   68,   71,   72,   76,   77,   78,   79,   80,   82,   83,
	   84,   85,   10,   13,   67,   68,   71,   72,   76,   77,   78,   79,
	   80,   82,   83,   84,   85,   72,   79,   69,   67,   75,   79,   85,
	   84,   32,   32,  127,    0,   31,   13,   32,  127,    0,   31,   10,
	   13,   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,
	   76,   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,
	  100,  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,
	  117,  118,  119,  120,  123,  125,  127,    0,   32,   40,   41,   58,
	   64,   91,   93,   10,   69,   76,   69,   84,   69,   32,   69,   84,
	   32,   69,   65,   68,   32,   79,   67,   75,   32,   69,   75,   79,
	   83,   82,   71,   69,   32,   65,   67,   67,   84,   73,   86,   73,
	   84,   89,   32,   79,   76,   32,   86,   69,   32,   69,   65,   82,
	   67,   72,   32,   79,   84,   73,   70,   89,   32,   80,   84,   73,
	   79,   78,   83,   32,   65,   79,   82,   85,   84,   67,   72,   32,
	   83,   84,   32,   79,   80,   70,   80,   73,   78,   68,   32,   65,
	   84,   67,   72,   32,   84,   32,   69,   80,   79,   82,   84,   32,
	   85,   66,   83,   67,   82,   73,   66,   69,   32,   82,   65,   67,
	   69,   32,   78,   76,   83,   79,   67,   75,   32,   85,   66,   83,
	   67,   82,   73,   66,   69,   32,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   58,    9,   13,   32,  127,    0,   31,   10,    9,   13,   32,
	   34,   44,   47,   65,   67,   68,   69,   70,   72,   73,   75,   76,
	   77,   80,   82,   83,   84,   85,   86,   87,   88,   97,   99,  100,
	  101,  102,  104,  105,  107,  108,  109,  112,  114,  115,  116,  117,
	  118,  119,  120,  123,  125,  127,    0,   31,   40,   41,   58,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   71,   76,   85,
	   99,  103,  108,  117,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   69,   76,   82,   99,
	  101,  108,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,
	  108,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   90,  122,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,   79,  110,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,   84,  110,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   58,    9,   13,   32,   67,   85,
	   99,  117,  127,    0,   31,    9,   13,   32,  127,    0,   31,    9,
	   32,  127,    0,   31,    9,   13,   32,  127,    0,   31,    9,   13,
	   32,  127,    0,   31,    9,   13,   32,   76,  108,  127,    0,   31,
	    9,   13,   32,   79,  111,  127,    0,   31,    9,   13,   32,   83,
	  115,  127,    0,   31,    9,   13,   32,   69,  101,  127,    0,   31,
	    9,   13,   32,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   13,   32,  127,    0,   31,    9,   13,   32,   80,  112,  127,
	    0,   31,    9,   13,   32,   71,  103,  127,    0,   31,    9,   13,
	   32,   82,  114,  127,    0,   31,    9,   13,   32,   65,   97,  127,
	    0,   31,    9,   13,   32,   68,  100,  127,    0,   31,    9,   13,
	   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,    0,   31,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,   69,   76,
	   77,   82,   84,  100,  101,  108,  109,  114,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,
	  103,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   69,   79,   97,  101,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   58,    9,   13,   32,  127,    0,   31,   48,   57,    9,
	   13,   32,  127,    0,   31,   48,   57,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   53,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,  112,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   75,  107,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   78,   97,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	   88,  116,  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,   73,
	  101,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   58,    9,
	   13,   32,   49,  127,    0,   31,    9,   13,   32,   48,  127,    0,
	   31,    9,   13,   32,   48,  127,    0,   31,    9,   13,   32,   45,
	  127,    0,   31,    9,   13,   32,   67,   99,  127,    0,   31,    9,
	   13,   32,   79,  111,  127,    0,   31,    9,   13,   32,   78,  110,
	  127,    0,   31,    9,   13,   32,   84,  116,  127,    0,   31,    9,
	   13,   32,   73,  105,  127,    0,   31,    9,   13,   32,   78,  110,
	  127,    0,   31,    9,   13,   32,   85,  117,  127,    0,   31,    9,
	   13,   32,   69,  101,  127,    0,   31,    9,   13,   32,  127,    0,
	   31,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,
	  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   77,   78,   82,   85,  109,  110,  114,  117,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   79,   97,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   70,  102,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   76,  108,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   86,
	  118,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   65,   73,   79,   97,  105,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   77,  109,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,   99,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   88,  120,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   51,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   79,   97,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   77,  109,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   88,  120,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   85,  117,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,   79,  101,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,
	  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   90,  122,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   65,   69,   97,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   70,   84,  102,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,   82,  101,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   70,  102,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,   84,  101,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,   84,
	  114,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   86,  118,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   75,  107,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   84,  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   67,
	   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   89,  121,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,   82,
	  101,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   73,   78,  105,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   76,  108,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   70,  102,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,
	  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   67,   99,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   58,    9,   13,   32,   67,   99,  127,    0,   31,    9,   13,
	   32,   72,  104,  127,    0,   31,    9,   13,   32,   85,  117,  127,
	    0,   31,    9,   13,   32,   78,  110,  127,    0,   31,    9,   13,
	   32,   75,  107,  127,    0,   31,    9,   13,   32,   69,  101,  127,
	    0,   31,    9,   13,   32,   68,  100,  127,    0,   31,    9,   13,
	   32,  127,    0,   31,    9,   32,   34,   44,   47,   58,   80,   83,
	  112,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   71,  103,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   68,  100,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,
	  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   65,
	   73,   97,  105,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   65,   87,   97,  119,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58
	};
};
private static int[] init__http_trans_keys_1()
{
	return new int [] {
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   78,  110,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   71,  103,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   85,  117,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   72,  104,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   69,  101,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   67,   68,   70,   80,   82,   88,   99,  100,
	  102,  112,  114,  120,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,
	  116,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   80,
	  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,
	   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   82,  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   75,  107,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,   82,  111,
	  114,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   87,  119,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   65,   97,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   68,  100,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   70,   80,  102,  112,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   82,  114,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   65,   97,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   77,  109,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   45,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,
	  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,
	  111,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   68,  100,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   66,
	   98,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   89,  121,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,
	    9,   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   81,  113,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   85,  117,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   83,  115,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   69,  101,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   68,  100,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   45,   47,   58,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   87,  119,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   72,  104,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   83,  115,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   83,  115,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   45,   47,   58,  123,  125,  127,    0,
	   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,
	   58,   80,  112,  123,  125,  127,    0,   31,   40,   41,   59,   64,
	   91,   93,    9,   32,   34,   44,   47,   58,   82,  114,  123,  125,
	  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,
	   44,   47,   58,   79,  111,  123,  125,  127,    0,   31,   40,   41,
	   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,   84,  116,
	  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,
	   32,   34,   44,   47,   58,   69,  101,  123,  125,  127,    0,   31,
	   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,
	   67,   99,  123,  125,  127,    0,   31,   40,   41,   59,   64,   91,
	   93,    9,   32,   34,   44,   47,   58,   84,  116,  123,  125,  127,
	    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,   34,   44,
	   47,   58,   73,  105,  123,  125,  127,    0,   31,   40,   41,   59,
	   64,   91,   93,    9,   32,   34,   44,   47,   58,   79,  111,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,    9,   32,
	   34,   44,   47,   58,   78,  110,  123,  125,  127,    0,   31,   40,
	   41,   59,   64,   91,   93,    9,   32,   34,   44,   47,   58,  123,
	  125,  127,    0,   31,   40,   41,   59,   64,   91,   93,   32,   72,
	  104,   84,  116,   84,  116,   80,  112,   47,   48,   57,   46,   48,
	   57,   48,   57,   13,   48,   57,   78,   80,   78,   69,   67,   84,
	   32,   89,   32,   48,   49,   57,   65,   70,   97,  102,   48,   49,
	   57,   65,   70,   97,  102,   13,   59,   48,   57,   65,   70,   97,
	  102,   10,65549,131072,196607,   10,   48,   49,   57,   65,   70,   97,
	  102,   13,   48,   59,   49,   57,   65,   70,   97,  102,   10,   13,
	  127,    0,   31,   10,   13,  127,    0,   31,   10,   13,  127,    0,
	   31,   13,  127,    0,   31,   13,  127,    0,   31,   13,   67,   68,
	   71,   72,   76,   77,   78,   79,   80,   82,   83,   84,   85,131072,
	196607,    0
	};
}

private static final int [] combine__http_trans_keys() {
	int [] combined = new int [ 10610 ];
	System.arraycopy ( init__http_trans_keys_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_trans_keys_1(), 0, combined, 8184, 2426 );
	return combined;
}
private static final int [] _http_trans_keys = combine__http_trans_keys();
private static byte[] init__http_single_lengths_0()
{
	return new byte [] {
	    0,   14,    1,   14,    2,    1,    1,    1,    1,    1,    1,    1,
	    2,    3,    1,   43,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,    1,
	    1,    1,    1,    2,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    4,    1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    2,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    9,    3,
	    4,    1,   45,   17,   11,   11,   11,   11,   10,   17,   11,   11,
	   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,
	    9,   11,   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,
	   11,   11,    9,   11,    9,   11,   11,   11,    9,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,   13,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,   11,   11,    9,   13,   13,
	   11,   11,   11,   11,   11,   11,    9,    3,    8,    4,    3,    4,
	    4,    6,    6,    6,    6,    4,    4,    4,    6,    6,    6,    6,
	    6,    6,    4,   11,   11,   11,   10,   21,   11,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   11,    9,   15,   11,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,    9,    3,    4,    4,   11,   11,   11,   11,   11,
	   11,    9,   11,   10,    9,   11,   11,   11,   11,    9,   11,   11,
	   11,    9,   11,   11,   11,    9,   13,   11,   11,    9,   11,    9,
	   13,   11,   11,    9,   11,   13,   11,   11,    9,    3,    5,    5,
	    5,    5,    6,    6,    6,    6,    6,    6,    6,    6,    4,   11,
	   11,   11,    9,   11,   11,   11,    9,   11,   11,   11,    9,   11,
	   10,   17,   13,   11,   11,   11,    9,   11,   11,   11,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,    9,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,   11,   11,   11,   11,   11,   10,   11,   11,   11,
	   11,   11,    9,   11,   11,   11,   10,   11,   11,   11,   11,   11,
	    9,   15,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,
	   11,    9,   11,   11,    9,   11,   11,   11,   11,   11,   11,    9,
	   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,    9,
	   12,   11,    9,   13,   11,   11,   11,    9,   11,   11,   10,   11,
	   11,   11,   11,   13,   11,   11,   11,   11,   11,   11,   11,    9,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,   13,   11,   11,
	   11,    9,   13,   13,   11,   11,   11,    9,   11,   11,   11,    9,
	   11,   11,   10,   11,   11,   11,   11,   11,    9,   13,   13,   11,
	   11,   11,    9,   10,   11,   11,   11,   11,   11,   11,    9,   11,
	   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,   10,   11,   11,   11,   11,   11,   11,   11,   11,    9,   13,
	    9,   11,   13,   11,   11,   11,    9,   11,   11,   11,   11,   10,
	   11,   11,   11,   11,   11,   11,   11,   11,    9,    3,    6,    6,
	    6,    6,    6,    6,    6,    4,   13,   11,   11,   11,   11,   11,
	    9,   11,   11,   10,   11,   11,   11,   11,   11,    9,   13,   11,
	   11,    9,   11,    9,   13,   11,   11,   11,   11,   11,    9,   11,
	   10,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
	   11,    9,   10,   21,   11,   11,   11,   11,   11,   11,   10,   11,
	   11,   11,   11,   10,   11,   11,   11,   11,   11,   11,   11,    9,
	   11,   10,   11,   11,   11,   10,   11,   11,   11,   11,   11,    9,
	   13,   11,   11,   11,   11,   11,   11,   11,   10,   13,   11,   11,
	    9,   11,   11,   11,   11,    9,   11,   11,   11,   10,   11,   11,
	   11,   11,   11,   11,   11,    9,   11,   11,   11,   11,   11,   11,
	   10,   11,   11,    9,   11,   11,   11,   11,   11,   11,   11,   11,
	   10,   11,   11,   11,   11,    9,   11,   11,   10,   11,   11,   11,
	   11,   11,   11,   11,   11,   11,   11,    9,    3,    2,    2,    2,
	    1,    0,    1,    0,    1,    2,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    2,    1,    1,    1,    1,    3,    1,    2,    1,
	    2,    1,    2,    2,    2,   14,    0,    0,    0
	};
}

private static final byte _http_single_lengths[] = init__http_single_lengths_0();


private static byte[] init__http_range_lengths_0()
{
	return new byte [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    0,    4,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,    0,
	    1,    0,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    0,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    0,    2,    2,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    0,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    0,    1,    1,
	    1,    1,    1,    1,    1,    1,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,    0,    0,    0,    0,
	    0,    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,
	    0,    3,    3,    3,    0,    1,    0,    3,    3,    0,    1,    0,
	    1,    0,    1,    1,    1,    0,    0,    1,    0
	};
}

private static final byte _http_range_lengths[] = init__http_range_lengths_0();


private static short[] init__http_index_offsets_0()
{
	return new short [] {
	    0,    0,   15,   17,   32,   35,   37,   39,   41,   43,   45,   47,
	   49,   53,   58,   60,  108,  110,  112,  114,  116,  118,  120,  122,
	  124,  126,  128,  130,  132,  134,  136,  138,  140,  142,  144,  149,
	  151,  153,  155,  157,  160,  162,  164,  166,  168,  170,  172,  174,
	  176,  178,  180,  182,  184,  186,  188,  190,  192,  194,  196,  198,
	  200,  202,  204,  206,  208,  210,  212,  214,  216,  218,  220,  222,
	  224,  226,  231,  233,  235,  237,  239,  241,  243,  245,  247,  249,
	  252,  254,  256,  258,  260,  262,  264,  266,  268,  270,  272,  274,
	  276,  278,  280,  282,  284,  286,  288,  290,  292,  294,  296,  298,
	  300,  302,  304,  306,  308,  310,  312,  314,  316,  319,  321,  323,
	  325,  327,  329,  331,  333,  335,  337,  339,  341,  343,  345,  359,
	  363,  369,  371,  421,  443,  459,  475,  491,  507,  522,  544,  560,
	  576,  592,  608,  624,  640,  654,  670,  686,  702,  718,  734,  750,
	  766,  780,  796,  812,  828,  844,  860,  876,  892,  906,  922,  938,
	  954,  970,  986, 1000, 1016, 1030, 1046, 1062, 1078, 1092, 1108, 1124,
	 1140, 1156, 1172, 1188, 1204, 1220, 1236, 1252, 1268, 1282, 1300, 1316,
	 1332, 1348, 1363, 1379, 1395, 1411, 1427, 1443, 1459, 1475, 1489, 1507,
	 1525, 1541, 1557, 1573, 1589, 1605, 1621, 1635, 1639, 1649, 1655, 1660,
	 1666, 1672, 1680, 1688, 1696, 1704, 1710, 1716, 1722, 1730, 1738, 1746,
	 1754, 1762, 1770, 1776, 1792, 1808, 1824, 1839, 1865, 1881, 1897, 1913,
	 1929, 1945, 1961, 1977, 1993, 2009, 2025, 2039, 2055, 2071, 2087, 2103,
	 2119, 2135, 2151, 2165, 2185, 2201, 2217, 2233, 2249, 2265, 2281, 2295,
	 2311, 2327, 2343, 2359, 2373, 2377, 2384, 2391, 2407, 2423, 2439, 2455,
	 2471, 2487, 2501, 2517, 2532, 2546, 2562, 2578, 2594, 2610, 2624, 2640,
	 2656, 2672, 2686, 2702, 2718, 2734, 2748, 2766, 2782, 2798, 2812, 2828,
	 2842, 2860, 2876, 2892, 2906, 2922, 2940, 2956, 2972, 2986, 2990, 2997,
	 3004, 3011, 3018, 3026, 3034, 3042, 3050, 3058, 3066, 3074, 3082, 3088,
	 3104, 3120, 3136, 3150, 3166, 3182, 3198, 3212, 3228, 3244, 3260, 3274,
	 3290, 3305, 3327, 3345, 3361, 3377, 3393, 3407, 3423, 3439, 3455, 3471,
	 3487, 3503, 3518, 3534, 3550, 3566, 3582, 3598, 3612, 3628, 3644, 3660,
	 3675, 3691, 3707, 3723, 3739, 3755, 3769, 3785, 3801, 3817, 3833, 3847,
	 3863, 3879, 3895, 3911, 3927, 3943, 3959, 3975, 3991, 4006, 4022, 4038,
	 4054, 4070, 4086, 4100, 4116, 4132, 4148, 4163, 4179, 4195, 4211, 4227,
	 4243, 4257, 4277, 4293, 4309, 4324, 4340, 4356, 4372, 4388, 4404, 4420,
	 4436, 4452, 4466, 4482, 4498, 4512, 4528, 4544, 4560, 4576, 4592, 4608,
	 4622, 4638, 4654, 4669, 4685, 4701, 4717, 4733, 4749, 4765, 4781, 4797,
	 4811, 4828, 4844, 4858, 4876, 4892, 4908, 4924, 4938, 4954, 4970, 4985,
	 5001, 5017, 5033, 5049, 5067, 5083, 5099, 5115, 5131, 5147, 5163, 5179,
	 5193, 5209, 5225, 5241, 5257, 5273, 5289, 5305, 5321, 5335, 5353, 5369,
	 5385, 5401, 5415, 5433, 5451, 5467, 5483, 5499, 5513, 5529, 5545, 5561,
	 5575, 5591, 5607, 5622, 5638, 5654, 5670, 5686, 5702, 5716, 5734, 5752,
	 5768, 5784, 5800, 5814, 5829, 5845, 5861, 5877, 5893, 5909, 5925, 5939,
	 5955, 5971, 5987, 6003, 6018, 6034, 6050, 6066, 6082, 6098, 6114, 6130,
	 6146, 6162, 6177, 6193, 6209, 6225, 6241, 6257, 6273, 6289, 6305, 6319,
	 6337, 6351, 6367, 6385, 6401, 6417, 6433, 6447, 6463, 6479, 6495, 6511,
	 6526, 6542, 6558, 6574, 6590, 6606, 6622, 6638, 6654, 6668, 6672, 6680,
	 6688, 6696, 6704, 6712, 6720, 6728, 6734, 6752, 6768, 6784, 6800, 6816,
	 6832, 6846, 6862, 6878, 6893, 6909, 6925, 6941, 6957, 6973, 6987, 7005,
	 7021, 7037, 7051, 7067, 7081, 7099, 7115, 7131, 7147, 7163, 7179, 7193,
	 7209, 7224, 7240, 7256, 7272, 7288, 7304, 7320, 7336, 7352, 7368, 7384,
	 7400, 7416, 7430, 7445, 7471, 7487, 7503, 7519, 7535, 7551, 7567, 7582,
	 7598, 7614, 7630, 7646, 7661, 7677, 7693, 7709, 7725, 7741, 7757, 7773,
	 7787, 7803, 7818, 7834, 7850, 7866, 7881, 7897, 7913, 7929, 7945, 7961,
	 7975, 7993, 8009, 8025, 8041, 8057, 8073, 8089, 8105, 8120, 8138, 8154,
	 8170, 8184, 8200, 8216, 8232, 8248, 8262, 8278, 8294, 8310, 8325, 8341,
	 8357, 8373, 8389, 8405, 8421, 8437, 8451, 8467, 8483, 8499, 8515, 8531,
	 8547, 8562, 8578, 8594, 8608, 8624, 8640, 8656, 8672, 8688, 8704, 8720,
	 8736, 8751, 8767, 8783, 8799, 8815, 8829, 8845, 8861, 8876, 8892, 8908,
	 8924, 8940, 8956, 8972, 8988, 9004, 9020, 9036, 9050, 9054, 9057, 9060,
	 9063, 9065, 9067, 9070, 9072, 9075, 9078, 9080, 9082, 9084, 9086, 9088,
	 9090, 9092, 9097, 9102, 9108, 9110, 9113, 9115, 9120, 9127, 9129, 9133,
	 9135, 9139, 9141, 9145, 9149, 9153, 9168, 9169, 9171
	};
}

private static final short _http_index_offsets[] = init__http_index_offsets_0();


private static short[] init__http_indicies_0()
{
	return new short [] {
	    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
	   13,   14,    0,   15,    0,   16,   17,   18,   19,   20,   21,   22,
	   23,   24,   25,   26,   27,   28,   29,    0,   30,   31,    0,   32,
	    0,   33,    0,   34,    0,   35,    0,   36,    0,   37,    0,   38,
	    0,   39,    0,    0,   40,   41,   42,    0,    0,   43,   44,    0,
	   45,    0,    0,    0,   47,   48,   49,   50,   51,   52,   53,   54,
	   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   47,   48,
	   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,
	   61,   62,   63,   64,    0,    0,    0,    0,    0,    0,    0,   46,
	   65,    0,   66,    0,   67,    0,   68,    0,   69,    0,   70,    0,
	   71,    0,   72,    0,   73,    0,   74,    0,   75,    0,   76,    0,
	   77,    0,   78,    0,   79,    0,   80,    0,   81,    0,   82,    0,
	   83,   84,   85,   86,    0,   87,    0,   88,    0,   89,    0,   90,
	    0,   91,   92,    0,   93,    0,   94,    0,   95,    0,   96,    0,
	   97,    0,   98,    0,   99,    0,  100,    0,  101,    0,  102,    0,
	  103,    0,  104,    0,  105,    0,  106,    0,  107,    0,  108,    0,
	  109,    0,  110,    0,  111,    0,  112,    0,  113,    0,  114,    0,
	  115,    0,  116,    0,  117,    0,  118,    0,  119,    0,  120,    0,
	  121,    0,  122,    0,  123,    0,  124,    0,  125,    0,  126,  127,
	  128,  129,    0,  130,    0,  131,    0,  132,    0,  133,    0,  134,
	    0,  135,    0,  136,    0,  137,    0,  138,    0,  139,  140,    0,
	  141,    0,  142,    0,  143,    0,  144,    0,  145,    0,  146,    0,
	  147,    0,  148,    0,  149,    0,  150,    0,  151,    0,  152,    0,
	  153,    0,  154,    0,  155,    0,  156,    0,  157,    0,  158,    0,
	  159,    0,  160,    0,  161,    0,  162,    0,  163,    0,  164,    0,
	  165,    0,  166,    0,  167,    0,  168,    0,  169,    0,  170,    0,
	  171,    0,  172,    0,  173,  174,    0,  175,    0,  176,    0,  177,
	    0,  178,    0,  179,    0,  180,    0,  181,    0,  182,    0,  183,
	    0,  184,    0,  185,    0,  186,    0,  187,    0,  188,  188,    0,
	    0,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  191,
	  191,  192,    0,  192,  193,  192,    0,    0,  194,  195,    0,  192,
	  196,  192,    0,    0,    0,  198,  199,  200,  201,  202,  203,  204,
	  205,  206,  207,  208,  209,  210,  211,  212,  213,  214,  215,  198,
	  199,  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,  210,
	  211,  212,  213,  214,  215,    0,    0,    0,    0,    0,    0,    0,
	  197,  188,  188,    0,    0,    0,  190,  216,  217,  218,  219,  216,
	  217,  218,  219,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  220,  220,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  221,  221,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  222,  222,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  223,  223,    0,    0,    0,    0,    0,
	    0,    0,  189,  224,  224,    0,    0,  225,    0,  226,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  227,  228,  229,  230,  227,  228,  229,  230,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  231,  231,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  232,  232,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  233,  233,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  234,  234,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  235,  235,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  236,  236,    0,    0,    0,    0,
	    0,    0,    0,  189,  237,  237,    0,    0,    0,  238,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  239,  239,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  240,  240,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  241,  241,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  242,  242,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  243,  243,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  244,  244,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  245,  245,    0,    0,    0,    0,    0,    0,    0,  189,  246,  246,
	    0,    0,    0,  247,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  248,  248,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  249,  249,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  250,  250,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  251,  251,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  252,  252,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  253,  253,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  254,  254,    0,    0,    0,    0,
	    0,    0,    0,  189,  255,  255,    0,    0,    0,  256,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  257,  257,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  258,  258,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  259,  259,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  260,  260,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  261,  261,    0,    0,    0,    0,    0,    0,
	    0,  189,  262,  262,    0,    0,    0,  263,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  264,  264,
	    0,    0,    0,    0,    0,    0,    0,  189,  265,  265,    0,    0,
	    0,  266,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  267,  267,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  268,  268,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  269,  269,    0,    0,    0,    0,    0,    0,    0,  189,  270,  270,
	    0,    0,    0,  271,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  272,  272,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  273,  273,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  274,  274,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  275,  275,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  276,  276,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  277,  277,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  278,  278,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  279,  279,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  280,  280,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  281,  281,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  282,  282,
	    0,    0,    0,    0,    0,    0,    0,  189,  283,  283,    0,    0,
	    0,  284,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  285,  286,  285,  286,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  287,  287,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  288,  288,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  289,  289,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,  290,    0,  190,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  291,  291,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  292,  292,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  293,  293,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  294,  294,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  295,  295,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  296,  296,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  297,  297,    0,    0,    0,    0,    0,    0,    0,  189,  298,
	  298,    0,    0,    0,  299,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  300,  301,  300,  301,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  302,  303,  302,  303,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  304,  304,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  305,
	  305,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  306,  306,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  307,  307,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  308,
	  308,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  309,  309,    0,    0,    0,    0,    0,    0,    0,
	  189,  310,  310,    0,    0,    0,  311,    0,    0,    0,    0,    0,
	    0,    0,  189,  312,  312,  313,    0,  313,  193,  313,  314,  315,
	  314,  315,    0,    0,  194,  316,  317,  318,    0,    0,  319,  320,
	  320,    0,    0,  321,  316,  322,  316,    0,    0,  321,  320,  323,
	  324,    0,    0,  319,  316,  317,  318,  325,  325,    0,    0,  319,
	  316,  317,  318,  326,  326,    0,    0,  319,  316,  317,  318,  327,
	  327,    0,    0,  319,  316,  317,  318,  328,  328,    0,    0,  319,
	  329,  330,  331,    0,    0,  319,  332,  333,  332,    0,    0,  321,
	  332,  323,  334,    0,    0,  319,  316,  317,  318,  335,  335,    0,
	    0,  319,  316,  317,  318,  336,  336,    0,    0,  319,  316,  317,
	  318,  337,  337,    0,    0,  319,  316,  317,  318,  338,  338,    0,
	    0,  319,  316,  317,  318,  339,  339,    0,    0,  319,  316,  317,
	  318,  340,  340,    0,    0,  319,  341,  342,  343,    0,    0,  319,
	  188,  188,    0,    0,    0,  190,  344,  344,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  345,  345,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  346,  346,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,  347,    0,  190,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  348,  349,  350,
	  351,  352,  353,  348,  349,  350,  351,  352,  353,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  354,
	  354,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  355,  355,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  356,  356,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  357,
	  357,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  358,  358,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  359,  359,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  360,
	  360,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  361,  361,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  362,  362,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  363,
	  363,    0,    0,    0,    0,    0,    0,    0,  189,  364,  364,    0,
	    0,    0,  365,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  366,  366,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  367,  367,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  368,  368,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  369,  369,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  370,  370,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  371,  371,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  372,  372,    0,    0,    0,    0,    0,
	    0,    0,  189,  373,  373,    0,    0,    0,  374,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  375,
	  376,  377,  375,  376,  377,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  378,  378,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  379,
	  379,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  380,  380,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  381,  381,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  382,
	  382,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  383,  383,    0,    0,    0,    0,    0,    0,    0,
	  189,  384,  384,    0,    0,    0,  385,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  386,  386,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  387,  387,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  388,  388,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  389,  389,    0,
	    0,    0,    0,    0,    0,    0,  189,  390,  390,    0,    0,    0,
	  391,    0,    0,    0,    0,    0,    0,    0,  189,  392,  392,  393,
	    0,  393,  395,  393,  394,  394,  397,  396,  398,  399,  400,  394,
	  394,  402,  401,  188,  188,    0,    0,    0,  190,  403,  403,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  404,  404,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  405,  405,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  406,  406,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  407,  407,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  408,  408,    0,    0,    0,    0,    0,
	    0,    0,  189,  409,  409,    0,    0,    0,  410,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  411,
	  411,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  412,  190,    0,    0,    0,    0,    0,    0,    0,  189,
	  413,  413,    0,    0,    0,  414,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  415,  415,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  416,  416,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  417,  417,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  418,  418,    0,    0,
	    0,    0,    0,    0,    0,  189,  419,  419,    0,    0,    0,  420,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  421,  421,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  422,  422,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  423,  423,
	    0,    0,    0,    0,    0,    0,    0,  189,  424,  424,    0,    0,
	    0,  425,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  426,  426,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  427,  427,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  428,  428,    0,    0,    0,    0,    0,    0,    0,  189,  429,  429,
	    0,    0,    0,  430,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  431,  432,  431,  432,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  433,  433,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  434,  434,    0,    0,    0,    0,    0,    0,
	    0,  189,  435,  435,    0,    0,    0,  436,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  437,  437,
	    0,    0,    0,    0,    0,    0,    0,  189,  438,  438,    0,    0,
	    0,  439,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  440,  441,  440,  441,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  442,  442,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  443,  443,    0,    0,    0,    0,    0,    0,    0,  189,
	  444,  444,    0,    0,    0,  445,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  446,  446,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  447,  448,  447,  448,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  449,  449,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  450,  450,
	    0,    0,    0,    0,    0,    0,    0,  189,  451,  451,    0,    0,
	    0,  452,    0,    0,    0,    0,    0,    0,    0,  189,  453,  453,
	  454,    0,  454,  193,  454,  455,    0,    0,  194,  316,  317,  318,
	  456,    0,    0,  319,  316,  317,  318,  457,    0,    0,  319,  316,
	  317,  318,  458,    0,    0,  319,  316,  317,  318,  459,  459,    0,
	    0,  319,  316,  317,  318,  460,  460,    0,    0,  319,  316,  317,
	  318,  461,  461,    0,    0,  319,  316,  317,  318,  462,  462,    0,
	    0,  319,  316,  317,  318,  463,  463,    0,    0,  319,  316,  317,
	  318,  464,  464,    0,    0,  319,  316,  317,  318,  465,  465,    0,
	    0,  319,  316,  317,  318,  466,  466,    0,    0,  319,  467,  468,
	  469,    0,    0,  319,  188,  188,    0,    0,    0,  190,  470,  470,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  471,  471,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  472,  472,    0,    0,    0,    0,
	    0,    0,    0,  189,  473,  473,    0,    0,    0,  474,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  475,  475,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  476,  476,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  477,  477,    0,    0,
	    0,    0,    0,    0,    0,  189,  478,  478,    0,    0,    0,  479,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  480,  480,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  481,  481,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  482,  482,
	    0,    0,    0,    0,    0,    0,    0,  189,  483,  483,    0,    0,
	    0,  484,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  485,  485,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  486,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  487,
	  488,  489,  490,  487,  488,  489,  490,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  491,  492,  491,
	  492,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  493,  493,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  494,  494,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  495,
	  495,    0,    0,    0,    0,    0,    0,    0,  189,  496,  496,    0,
	    0,    0,  497,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  498,  498,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  499,  499,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  500,  500,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  501,  501,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  502,  502,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  503,  503,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,  504,    0,  190,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  505,  505,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  506,  506,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  507,  507,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  508,  508,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  509,  509,    0,    0,    0,    0,    0,    0,    0,  189,  510,  510,
	    0,    0,    0,  511,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  512,  512,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  513,  513,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  514,  514,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,  515,    0,  190,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  516,  516,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  517,  517,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  518,  518,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  519,  519,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  520,  520,    0,    0,    0,    0,    0,    0,    0,  189,  521,
	  521,    0,    0,    0,  522,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  523,  523,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  524,
	  524,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  525,  525,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  526,  526,    0,    0,    0,
	    0,    0,    0,    0,  189,  527,  527,    0,    0,    0,  528,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  529,  529,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  530,  530,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  531,  531,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  532,  532,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  533,  533,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  534,  534,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  535,  535,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  536,  536,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  537,  537,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  538,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  539,  539,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  540,  540,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  541,  541,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  542,  542,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  543,  543,    0,    0,
	    0,    0,    0,    0,    0,  189,  544,  544,    0,    0,    0,  545,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  546,  546,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  547,  547,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  548,  548,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	  549,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  550,  550,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  551,  551,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  552,  552,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  553,  553,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  554,  554,    0,
	    0,    0,    0,    0,    0,    0,  189,  555,  555,    0,    0,    0,
	  556,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  557,  558,  559,  557,  558,  559,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  560,
	  560,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  561,  561,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,  562,    0,  190,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  563,  563,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  564,  564,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  565,  565,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  566,  566,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  567,  567,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  568,  568,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  569,  569,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  570,  570,    0,    0,    0,    0,    0,    0,    0,  189,
	  571,  571,    0,    0,    0,  572,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  573,  573,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  574,  574,    0,    0,    0,    0,    0,    0,    0,  189,  575,  575,
	    0,    0,    0,  576,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  577,  577,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  578,  578,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  579,  579,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  580,  580,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  581,  581,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  582,  582,    0,    0,    0,    0,    0,    0,    0,  189,
	  583,  583,    0,    0,    0,  584,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  585,  585,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  586,  586,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,  587,    0,  190,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  588,  588,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  589,
	  589,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  590,  590,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  591,  591,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  592,
	  592,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  593,  593,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  594,  594,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  595,
	  595,    0,    0,    0,    0,    0,    0,    0,  189,  596,  596,    0,
	    0,    0,  597,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  598,  190,  599,  599,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  600,  600,
	    0,    0,    0,    0,    0,    0,    0,  189,  601,  601,    0,    0,
	    0,  602,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  603,  604,  603,  604,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  605,  605,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  606,  606,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  607,  607,    0,    0,    0,    0,
	    0,    0,    0,  189,  608,  608,    0,    0,    0,  609,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  610,  610,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  611,  611,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  612,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  613,
	  613,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  614,  614,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  615,  615,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  616,
	  616,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  617,  618,  617,  618,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  619,  619,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  620,  620,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  621,  621,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  622,  622,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  623,  623,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  624,  624,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  625,  625,    0,
	    0,    0,    0,    0,    0,    0,  189,  626,  626,    0,    0,    0,
	  627,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  628,  628,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  629,  629,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  630,
	  630,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  631,  631,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  632,  632,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  633,
	  633,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  634,  634,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  635,  635,    0,    0,    0,
	    0,    0,    0,    0,  189,  636,  636,    0,    0,    0,  637,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  638,  639,  638,  639,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  640,  640,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  641,
	  641,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  642,  642,    0,    0,    0,    0,    0,    0,    0,
	  189,  643,  643,    0,    0,    0,  644,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  645,  646,  645,
	  646,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  647,  648,  647,  648,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  649,  649,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  650,  650,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  651,  651,    0,    0,    0,    0,    0,
	    0,    0,  189,  652,  652,    0,    0,    0,  653,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  654,
	  654,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  655,  655,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  656,  656,    0,    0,    0,
	    0,    0,    0,    0,  189,  657,  657,    0,    0,    0,  658,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  659,  659,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  660,  660,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  661,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  662,  662,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  663,  663,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  664,  664,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  665,  665,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  666,  666,    0,    0,    0,    0,    0,    0,
	    0,  189,  667,  667,    0,    0,    0,  668,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  669,  670,
	  669,  670,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  671,  672,  671,  672,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  673,  673,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  674,  674,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  675,  675,    0,    0,    0,    0,
	    0,    0,    0,  189,  676,  676,    0,    0,    0,  677,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  678,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  679,  679,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  680,  680,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  681,
	  681,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  682,  682,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  683,  683,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  684,
	  684,    0,    0,    0,    0,    0,    0,    0,  189,  685,  685,    0,
	    0,    0,  686,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  687,  687,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  688,  688,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  689,  689,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  690,  690,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  691,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  692,  692,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  693,  693,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  694,  694,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  695,  695,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  696,  696,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  697,  697,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  698,  698,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  699,  699,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  700,  700,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  701,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  702,  702,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  703,  703,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  704,
	  704,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  705,  705,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  706,  706,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  707,
	  707,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  708,  708,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  709,  709,    0,    0,    0,
	    0,    0,    0,    0,  189,  710,  710,    0,    0,    0,  711,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  712,  713,  712,  713,    0,    0,    0,    0,    0,    0,    0,
	  189,  714,  714,    0,    0,    0,  715,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  716,  716,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  717,  718,  717,  718,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  719,  719,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  720,
	  720,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  721,  721,    0,    0,    0,    0,    0,    0,    0,
	  189,  722,  722,    0,    0,    0,  723,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  724,  724,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  725,  725,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  726,  726,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  727,  727,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  728,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  729,  729,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  730,  730,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  731,  731,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  732,  732,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  733,  733,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  734,  734,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  735,  735,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  736,  736,    0,    0,
	    0,    0,    0,    0,    0,  189,  737,  737,    0,    0,    0,  738,
	    0,    0,    0,    0,    0,    0,    0,  189,  739,  739,  740,    0,
	  740,  193,  740,  741,  741,    0,    0,  194,  316,  317,  318,  742,
	  742,    0,    0,  319,  316,  317,  318,  743,  743,    0,    0,  319,
	  316,  317,  318,  744,  744,    0,    0,  319,  316,  317,  318,  745,
	  745,    0,    0,  319,  316,  317,  318,  746,  746,    0,    0,  319,
	  316,  317,  318,  747,  747,    0,    0,  319,  748,  749,  750,    0,
	    0,  319,  188,  188,    0,    0,    0,  190,  751,  752,  751,  752,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  753,  753,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  754,  754,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  755,  755,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  756,  756,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  757,  757,    0,    0,    0,    0,
	    0,    0,    0,  189,  758,  758,    0,    0,    0,  759,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  760,  760,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  761,  761,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  762,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  763,
	  763,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  764,  764,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  765,  765,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  766,
	  766,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  767,  767,    0,    0,    0,    0,    0,    0,    0,
	  189,  768,  768,    0,    0,    0,  769,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  770,  771,  770,
	  771,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  772,  772,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  773,  773,    0,    0,    0,
	    0,    0,    0,    0,  189,  774,  774,    0,    0,    0,  775,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  776,  776,    0,    0,    0,    0,    0,    0,    0,  189,  777,
	  777,    0,    0,    0,  778,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  779,  780,  779,  780,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  781,  781,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  782,  782,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  783,  783,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  784,  784,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  785,  785,    0,    0,    0,    0,    0,
	    0,    0,  189,  786,  786,    0,    0,    0,  787,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  788,
	  788,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,  789,    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  790,  790,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  791,  791,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  792,  792,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  793,  793,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  794,  794,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  795,  795,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  796,  796,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  797,  797,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  798,  798,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  799,  799,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  800,  800,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  801,  801,    0,    0,    0,    0,    0,    0,    0,  189,
	  802,  802,    0,    0,    0,  803,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  804,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  805,
	  806,  807,  808,  809,  810,  805,  806,  807,  808,  809,  810,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  811,  811,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  812,  812,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  813,  813,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  814,  814,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  815,  815,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  816,  816,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  817,
	    0,  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  818,  818,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  819,  819,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  820,  820,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  821,  821,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,  822,    0,  190,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  823,
	  823,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  824,  824,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  825,  825,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  826,
	  826,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  827,  827,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  828,  828,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  829,
	  829,    0,    0,    0,    0,    0,    0,    0,  189,  830,  830,    0,
	    0,    0,  831,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  832,  832,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  833,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  834,  834,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  835,  835,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  836,  836,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  837,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  838,  838,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  839,  839,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  840,
	  840,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  841,  841,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  842,  842,    0,    0,    0,
	    0,    0,    0,    0,  189,  843,  843,    0,    0,    0,  844,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  845,  846,  845,  846,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  847,  847,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  848,
	  848,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  849,  849,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  850,  850,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  851,
	  851,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  852,  852,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  853,  853,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,  854,    0,  190,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  855,  856,  855,  856,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  857,  857,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  858,  858,    0,    0,    0,    0,    0,    0,    0,  189,  859,  859,
	    0,    0,    0,  860,    0,    0,    0,    0,    0,    0,    0,  189
	};
};
private static short[] init__http_indicies_1()
{
	return new short [] {
	  188,  188,    0,    0,    0,  190,  861,  861,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  862,  862,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  863,  863,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  864,  864,    0,    0,    0,    0,
	    0,    0,    0,  189,  865,  865,    0,    0,    0,  866,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  867,  867,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  868,  868,    0,    0,    0,    0,    0,    0,
	    0,  189,  188,  188,    0,    0,    0,  190,  869,  869,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,  870,    0,
	  190,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  871,  871,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  872,  872,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  873,
	  873,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  874,  874,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  875,  875,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  876,
	  876,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  877,  877,    0,    0,    0,    0,    0,    0,    0,
	  189,  878,  878,    0,    0,    0,  879,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  880,  880,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  881,  881,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  882,  882,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  883,  883,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  884,  884,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  885,  885,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,  886,    0,  190,    0,    0,
	    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,
	  887,  887,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,
	    0,    0,    0,  190,  888,  888,    0,    0,    0,    0,    0,    0,
	    0,  189,  889,  889,    0,    0,    0,  890,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  891,  891,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  892,  892,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  893,  893,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  894,  894,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  895,  895,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  896,  896,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  897,  897,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  898,  898,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,  899,    0,  190,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  900,  900,    0,
	    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,    0,
	  190,  901,  901,    0,    0,    0,    0,    0,    0,    0,  189,  188,
	  188,    0,    0,    0,  190,  902,  902,    0,    0,    0,    0,    0,
	    0,    0,  189,  188,  188,    0,    0,    0,  190,  903,  903,    0,
	    0,    0,    0,    0,    0,    0,  189,  904,  904,    0,    0,    0,
	  905,    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,
	    0,    0,  190,  906,  906,    0,    0,    0,    0,    0,    0,    0,
	  189,  188,  188,    0,    0,    0,  190,  907,  907,    0,    0,    0,
	    0,    0,    0,    0,  189,  188,  188,    0,    0,  908,    0,  190,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  909,  909,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  910,  910,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  911,  911,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  912,  912,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  913,  913,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  914,  914,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  915,  915,    0,    0,    0,    0,    0,    0,    0,  189,
	  188,  188,    0,    0,    0,  190,  916,  916,    0,    0,    0,    0,
	    0,    0,    0,  189,  188,  188,    0,    0,    0,  190,  917,  917,
	    0,    0,    0,    0,    0,    0,    0,  189,  188,  188,    0,    0,
	    0,  190,  918,  918,    0,    0,    0,    0,    0,    0,    0,  189,
	  919,  919,    0,    0,    0,  920,    0,    0,    0,    0,    0,    0,
	    0,  189,  921,  922,  922,    0,  923,  923,    0,  924,  924,    0,
	  925,  925,    0,  926,    0,  927,    0,  928,  927,    0,  929,    0,
	  333,  929,    0,  930,  931,    0,  932,    0,  933,    0,  934,    0,
	  935,    0,  936,    0,  937,    0,  938,    0,  940,  941,  941,  941,
	  939,  942,  943,  943,  943,  939,  944,  945,  943,  943,  943,  939,
	  946,    0,  947,  948,    0,  949,    0,  950,  941,  941,  941,  939,
	  951,  952,  953,  943,  943,  943,  939,  954,    0,  955,    0,    0,
	  956,  957,    0,  958,    0,    0,  959,  960,    0,  961,    0,    0,
	  959,  951,    0,    0,  953,  944,    0,    0,  945,    1,    2,    3,
	    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,   14,    0,
	    0,  962,    0,  963,    0
	};
}

private static final short [] combine__http_indicies() {
	short [] combined = new short [ 9173 ];
	System.arraycopy ( init__http_indicies_0(), 0, combined, 0, 8184 );
	System.arraycopy ( init__http_indicies_1(), 0, combined, 8184, 989 );
	return combined;
}
private static final short [] _http_indicies = combine__http_indicies();
private static short[] init__http_trans_targs_0()
{
	return new short [] {
	    0,    2,    4,   17,   23,   26,   30,   34,   60,   66,   73,   95,
	  101,  110,  115,    3,    2,    4,   17,   23,   26,   30,   34,   60,
	   66,   73,   95,  101,  110,  115,    5,  713,    6,    7,    8,    9,
	   10,   11,   12,   12,   13,   14,  704,   13,   15,   16,  130,  135,
	  189,  294,  300,  327,  331,  335,  387,  397,  420,  432,  465,  489,
	  527,  558,  574,  580,  602,  737,   18,   19,   20,   21,   22,   12,
	   24,   25,   12,   27,   28,   29,   12,   31,   32,   33,   12,   35,
	   39,   51,   54,   36,   37,   38,   12,   40,   48,   41,   42,   43,
	   44,   45,   46,   47,   12,   49,   50,   12,   52,   53,   12,   55,
	   56,   57,   58,   59,   12,   61,   62,   63,   64,   65,   12,   67,
	   68,   69,   70,   71,   72,   12,   74,   78,   81,   93,   75,   76,
	   77,   12,   79,   80,   12,   82,   83,   84,   88,   85,   86,   87,
	   12,   89,   90,   91,   92,   12,   94,   12,   96,   97,   98,   99,
	  100,   12,  102,  103,  104,  105,  106,  107,  108,  109,   12,  111,
	  112,  113,  114,   12,  116,  117,  121,  118,  119,  120,   12,  122,
	  123,  124,  125,  126,  127,  128,  129,   12,  131,  130,  132,  131,
	  132,  133,  213,  134,   16,  130,  135,  189,  294,  300,  327,  331,
	  335,  387,  397,  420,  432,  465,  489,  527,  558,  574,  580,  602,
	  136,  171,  173,  177,  137,  138,  139,  140,  131,  141,  132,  142,
	  149,  157,  165,  143,  144,  145,  146,  147,  148,  131,  132,  150,
	  151,  152,  153,  154,  155,  156,  131,  132,  158,  159,  160,  161,
	  162,  163,  164,  131,  132,  166,  167,  168,  169,  170,  131,  132,
	  172,  131,  132,  174,  175,  176,  131,  132,  178,  179,  180,  181,
	  182,  183,  184,  185,  186,  187,  188,  131,  132,  190,  202,  191,
	  192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  131,  132,
	  203,  290,  204,  231,  205,  206,  207,  208,  209,  210,  211,  212,
	  211,  212,  217,  224,  214,  133,  216,  213,  214,  215,  133,  133,
	  216,  218,  219,  220,  221,  222,  133,  223,  222,   14,  223,  225,
	  226,  227,  228,  229,  230,  222,  133,  223,  232,  233,  234,  235,
	  236,  247,  255,  278,  281,  286,  237,  238,  239,  240,  241,  242,
	  243,  244,  245,  246,  131,  132,  248,  249,  250,  251,  252,  253,
	  254,  131,  132,  256,  263,  271,  257,  258,  259,  260,  261,  262,
	  131,  132,  264,  265,  266,  267,  268,  269,  268,  269,    0,  133,
	  213,  270,  222,  133,  223,  213,  270,  272,  273,  274,  275,  276,
	  277,  131,  132,  279,  280,  131,  132,  282,  283,  284,  285,  131,
	  132,  287,  288,  289,  131,  132,  291,  292,  293,  131,  132,  295,
	  298,  296,  297,  131,  132,  299,  131,  132,  301,  304,  302,  303,
	  131,  132,  305,  306,  323,  307,  308,  309,  310,  309,  310,  311,
	  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,  322,  222,
	  133,  223,  324,  325,  326,  131,  132,  328,  329,  330,  131,  132,
	  332,  333,  334,  131,  132,  336,  337,  338,  356,  366,  371,  339,
	  343,  340,  341,  342,  131,  132,  344,  345,  346,  347,  348,  349,
	  350,  351,  352,  353,  354,  355,  131,  132,  357,  358,  359,  360,
	  361,  362,  363,  364,  365,  131,  132,  367,  368,  369,  370,  131,
	  132,  372,  373,  374,  375,  376,  377,  378,  379,  380,  381,  382,
	  383,  384,  385,  386,  131,  132,  388,  389,  390,  391,  392,  393,
	  394,  395,  396,  131,  132,  398,  410,  413,  399,  400,  401,  402,
	  403,  404,  405,  406,  407,  408,  409,  131,  132,  411,  412,  131,
	  132,  414,  415,  416,  417,  418,  419,  131,  132,  421,  422,  423,
	  424,  425,  426,  427,  428,  429,  430,  431,  131,  132,  433,  435,
	  434,  131,  132,  436,  440,  437,  438,  439,  131,  132,  441,  442,
	  443,  444,  445,  446,  447,  448,  456,  449,  450,  451,  452,  453,
	  454,  455,  131,  132,  457,  458,  459,  460,  461,  462,  463,  464,
	  131,  132,  466,  470,  467,  468,  469,  131,  132,  471,  480,  472,
	  476,  473,  474,  475,  131,  132,  477,  478,  479,  131,  132,  481,
	  482,  483,  484,  485,  486,  487,  488,  131,  132,  490,  503,  491,
	  495,  492,  493,  494,  131,  132,  496,  497,  498,  499,  500,  501,
	  502,  131,  132,  504,  505,  506,  507,  508,  509,  510,  511,  512,
	  513,  514,  515,  516,  517,  518,  519,  520,  521,  522,  523,  524,
	  525,  526,  131,  132,  528,  529,  131,  132,  530,  531,  535,  532,
	  533,  534,  131,  132,  536,  537,  538,  539,  540,  541,  542,  543,
	  544,  545,  546,  547,  548,  549,  550,  549,  550,  551,  552,  553,
	  554,  555,  556,  557,  222,  133,  223,  559,  565,  560,  561,  562,
	  563,  564,  131,  132,  566,  567,  568,  569,  570,  571,  572,  573,
	  131,  132,  575,  578,  576,  577,  131,  132,  579,  131,  132,  581,
	  587,  582,  583,  584,  585,  586,  131,  132,  588,  589,  590,  591,
	  592,  593,  594,  595,  596,  597,  598,  599,  600,  601,  131,  132,
	  603,  604,  624,  636,  666,  676,  690,  605,  606,  607,  608,  609,
	  610,  611,  612,  613,  614,  615,  616,  617,  618,  619,  620,  621,
	  622,  623,  131,  132,  625,  626,  627,  628,  629,  630,  631,  632,
	  633,  634,  635,  131,  132,  637,  654,  638,  639,  640,  641,  642,
	  643,  644,  645,  646,  649,  647,  648,  131,  132,  650,  651,  652,
	  653,  131,  132,  655,  656,  657,  658,  659,  660,  661,  662,  663,
	  664,  665,  131,  132,  667,  668,  669,  670,  671,  672,  673,  674,
	  675,  131,  132,  677,  678,  679,  680,  681,  682,  683,  684,  685,
	  686,  687,  688,  689,  131,  132,  691,  692,  693,  694,  695,  696,
	  697,  698,  699,  700,  701,  702,  703,  131,  132,  704,  705,  706,
	  707,  708,  709,  710,  711,  712,  714,  719,  715,  716,  717,  718,
	   12,  720,   12,    0,  722,  723,  722,  723,  724,  736,  725,  726,
	  725,  727,  728,  729,  728,  735,  730,  731,  732,  738,  733,  732,
	  734,  731,  739,  740
	};
}

private static final short _http_trans_targs[] = init__http_trans_targs_0();


private static short[] init__http_trans_actions_0()
{
	return new short [] {
	   15,  131,  131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
	  131,  131,  131,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   68,   13,   98,  101,  101,   13,   13,   13,  104,  104,
	  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
	  104,  104,  104,  104,  104,  134,   13,   13,   13,   13,   13,   29,
	   13,   13,   20,   13,   13,   13,   17,   13,   13,   13,   44,   13,
	   13,   13,   13,   13,   13,   13,   71,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   65,   13,   13,   47,   13,   13,   50,   13,
	   13,   13,   13,   13,   74,   13,   13,   13,   13,   13,   77,   13,
	   13,   13,   13,   13,   13,   35,   13,   13,   13,   13,   13,   13,
	   13,   86,   13,   13,   23,   13,   13,   13,   13,   13,   13,   13,
	   53,   13,   13,   13,   13,   56,   13,   26,   13,   13,   13,   13,
	   13,   62,   13,   13,   13,   13,   13,   13,   13,   13,   80,   13,
	   13,   13,   13,   38,   13,   13,   13,   13,   13,   13,   59,   13,
	   13,   13,   13,   13,   13,   13,   13,   83,  107,   13,  107,   13,
	   13,  399,  110,   13,  119,  407,  407,  407,  407,  407,  407,  407,
	  407,  407,  407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
	   13,   13,   13,   13,   13,   13,   13,   13,  143,   13,  143,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,  147,  147,   13,
	   13,   13,   13,   13,   13,   13,  151,  151,   13,   13,   13,   13,
	   13,   13,   13,  155,  155,   13,   13,   13,   13,   13,  159,  159,
	   13,  163,  163,   13,   13,   13,  167,  167,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  171,  171,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  175,  175,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  179,  179,
	   13,   13,  110,  110,  113,  403,  113,   13,   13,   13,  113,  116,
	   13,   13,   13,   13,   13,  427,  454,  427,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,  431,  459,  431,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  203,  203,   13,   13,   13,   13,   13,   13,
	   13,  183,  183,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	  187,  187,   13,   13,   13,   13,  191,  191,   13,   13,  128,  439,
	  415,  411,  419,  444,  419,  125,  122,   13,   13,   13,   13,   13,
	   13,  195,  195,   13,   13,  199,  199,   13,   13,   13,   13,  207,
	  207,   13,   13,   13,  211,  211,   13,   13,   13,  215,  215,   13,
	   13,   13,   13,  219,  219,   13,  223,  223,   13,   13,   13,   13,
	  227,  227,   13,   13,   13,   13,   13,  231,  231,   13,   13,  110,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  435,
	  464,  435,   13,   13,   13,  235,  235,   13,   13,   13,  239,  239,
	   13,   13,   13,  243,  243,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  247,  247,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,  251,  251,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,  255,  255,   13,   13,   13,   13,  259,
	  259,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  263,  263,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  267,  267,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  271,  271,   13,   13,  275,
	  275,   13,   13,   13,   13,   13,   13,  279,  279,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,  283,  283,   13,   13,
	   13,  287,  287,   13,   13,   13,   13,   13,  291,  291,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  295,  295,   13,   13,   13,   13,   13,   13,   13,   13,
	  299,  299,   13,   13,   13,   13,   13,  303,  303,   13,   13,   13,
	   13,   13,   13,   13,  307,  307,   13,   13,   13,  311,  311,   13,
	   13,   13,   13,   13,   13,   13,   13,  315,  315,   13,   13,   13,
	   13,   13,   13,   13,  319,  319,   13,   13,   13,   13,   13,   13,
	   13,  323,  323,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  327,  327,   13,   13,  331,  331,   13,   13,   13,   13,
	   13,   13,  335,  335,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,  339,  339,   13,   13,  110,   13,   13,
	   13,   13,   13,   13,  423,  449,  423,   13,   13,   13,   13,   13,
	   13,   13,  343,  343,   13,   13,   13,   13,   13,   13,   13,   13,
	  347,  347,   13,   13,   13,   13,  351,  351,   13,  355,  355,   13,
	   13,   13,   13,   13,   13,   13,  359,  359,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,  363,  363,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  367,  367,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,  371,  371,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  375,  375,   13,   13,   13,
	   13,  379,  379,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,  383,  383,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,  387,  387,   13,   13,   13,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,  391,  391,   13,   13,   13,   13,   13,   13,
	   13,   13,   13,   13,   13,   13,   13,  395,  395,   13,   89,   13,
	   13,   13,   13,   92,   13,   95,   13,   13,   13,   13,   13,   13,
	   32,   13,   41,  140,  137,  137,    9,    9,    0,    0,    0,    0,
	    3,    0,  137,    0,    9,    0,    0,    7,    7,    0,    0,    0,
	    0,    0,    1,    5
	};
}

private static final short _http_trans_actions[] = init__http_trans_actions_0();


private static short[] init__http_to_state_actions_0()
{
	return new short [] {
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,   11,    0,    0
	};
}

private static final short _http_to_state_actions[] = init__http_to_state_actions_0();


private static short[] init__http_eof_actions_0()
{
	return new short [] {
	    0,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,  128,  128,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
	   15,  140,  140,  140,   15,   15,   15,  140,  140,   15,   15,   15,
	   15,   15,   15,   15,   15,    0,    0,    0,    0
	};
}

private static final short _http_eof_actions[] = init__http_eof_actions_0();


static final int http_start = 1;
static final int http_first_final = 737;
static final int http_error = 0;

static final int http_en_chunked_body = 721;
static final int http_en_identity_body = 739;
static final int http_en_upgraded = 740;
static final int http_en_main = 1;


// line 528 "src/rl/picard/http/HttpParser.rl"

    // Variable used by ragel to represent the current state of the
    // parser. This must be an integer and it should persist across
    // invocations of the machine when the data is broken into blocks
    // that are processed independently. This variable may be modified
    // from outside the execution loop, but not from within.
    private int cs;

    // Stores some miscellaneous parser state such as whether or not
    // the body is chunked or not, whether or not the connection is
    // keep alive or upgraded, etc...
    private int flags;

    // The number of bytes read while parsing the HTTP message
    // head. This is to protect against a possible attack where
    // somebody sends unbounded HTTP message heads and causes out of
    // memory errors.
    private int hread;

    // When starting to parse an HTTP message head, an object is
    // requested from the callback. This object should be the
    // structure that contains HTTP headers for the message being
    // processed.
    private Object headers;

    // The HTTP protocol version used by the current message being
    // parsed. The major and minor numbers are broken up since they
    // will be moved into a clojure vector.
    private short httpMajor;
    private short httpMinor;

    // Tracks whether the current parser instance is parsing an HTTP
    // request or an HTTP response. Even though the parser can be
    // reused to parse multiple messages, each message must be of the
    // same type. In other words, if the first message a parser
    // instance parses is an HTTP request, then all subsequent
    // messages parsed by the same instance must also be HTTP
    // requests.
    private MessageType type;

    // Tracks the HTTP method of the currently parsed request. If the
    // HTTP message being currently parsed is a response, then this
    // will be nil.
    private HttpMethod method;

    // The response status if the current message being parsed is a
    // response.
    private short status;

    // Tracks the various message information
    private URI    uri;
    private Mark   uriMark;
    private String headerName;
    private Mark   headerNameMark;

    private HeaderValue headerValue;

    // Track the content length of the HTTP message
    private long contentLength;

    // The object that gets called on various parse events.
    private HttpParserCallback callback;

    public HttpParser(HttpParserCallback callback) {
        
// line 2752 "src/java/picard/http/HttpParser.java"
	{
	cs = http_start;
	}

// line 593 "src/rl/picard/http/HttpParser.rl"

        this.callback = callback;
        reset();
    }

    public boolean isRequest() {
        return type == MessageType.REQUEST;
    }

    public boolean isResponse() {
        return type == MessageType.RESPONSE;
    }

    public boolean isParsingHead() {
        return ( flags & PARSING_HEAD ) == PARSING_HEAD;
    }

    public boolean hasBody() {
        return isIdentityBody() || isChunkedBody();
    }

    public boolean isIdentityBody() {
        return ( flags & IDENTITY_BODY ) == IDENTITY_BODY;
    }

    public boolean isChunkedBody() {
        return ( flags & CHUNKED_BODY ) == CHUNKED_BODY;
    }

    public boolean isKeepAlive() {
        return ( flags & KEEP_ALIVE ) == KEEP_ALIVE;
    }

    public boolean isUpgrade() {
        return ( flags & UPGRADE ) == UPGRADE || method == HttpMethod.CONNECT;
    }

    public boolean isExpectingContinue() {
        return ( flags & EXPECT_CONTINUE ) == EXPECT_CONTINUE;
    }

    public boolean isError() {
        return ( flags & ERROR ) == ERROR;
    }

    public HttpMethod getMethod() {
        return method;
    }

    public short getHttpMajor() {
        return httpMajor;
    }

    public short getHttpMinor() {
        return httpMinor;
    }

    public String getPathInfo() {
        String pathInfo = uri.getPath();

        if (pathInfo == null) {
            return SLASH;
        }
        else if (pathInfo.equals(EMPTY_STRING)) {
            return SLASH;
        }

        return pathInfo;
    }

    public String getQueryString() {
        String qs = uri.getQuery();

        if (qs == null) {
            return EMPTY_STRING;
        }

        return qs;
    }

    public int execute(String str) {
        ByteBuffer buf = ByteBuffer.wrap(str.getBytes());
        return execute(buf);
    }

    public int execute(ByteBuffer buf) {
        // First make sure that the parser isn't in an error state
        if (isError()) {
            throw new HttpParserException("The parser is in an error state.");
        }

        // Setup ragel variables
        int p   = buf.position();
        int pe  = buf.limit();
        int eof = pe + 1;

        if (isParsingHead()) {
            uriMark        = bridge(buf, uriMark);
            headerNameMark = bridge(buf, headerNameMark);

            if (headerValue != null) {
                headerValue.bridge(buf);
            }
        }

        try {
            parseLoop: {
                
// line 701 "src/rl/picard/http/HttpParser.rl"
                
// line 2868 "src/java/picard/http/HttpParser.java"
	{
	int _klen;
	int _trans = 0;
	int _widec;
	int _acts;
	int _nacts;
	int _keys;
	int _goto_targ = 0;

	_goto: while (true) {
	switch ( _goto_targ ) {
	case 0:
	if ( p == pe ) {
		_goto_targ = 4;
		continue _goto;
	}
	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
case 1:
	_widec = ( buf.get(p));
	_keys = _http_cond_offsets[cs]*2
;	_klen = _http_cond_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys
;		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_cond_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_cond_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				switch ( _http_cond_spaces[_http_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = 65536 + (( buf.get(p)) - 0);
		if ( 
// line 425 "src/rl/picard/http/HttpParser.rl"

            contentLength > 0
         ) _widec += 65536;
		break;
	}
				}
				break;
			}
		}
	}

	_match: do {
	_keys = _http_key_offsets[cs];
	_trans = _http_index_offsets[cs];
	_klen = _http_single_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + _klen - 1;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 1;
			else if ( _widec > _http_trans_keys[_mid] )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				break _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _http_range_lengths[cs];
	if ( _klen > 0 ) {
		int _lower = _keys;
		int _mid;
		int _upper = _keys + (_klen<<1) - 2;
		while (true) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _http_trans_keys[_mid] )
				_upper = _mid - 2;
			else if ( _widec > _http_trans_keys[_mid+1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				break _match;
			}
		}
		_trans += _klen;
	}
	} while (false);

	_trans = _http_indicies[_trans];
	cs = _http_trans_targs[_trans];

	if ( _http_trans_actions[_trans] != 0 ) {
		_acts = _http_trans_actions[_trans];
		_nacts = (int) _http_actions[_acts++];
		while ( _nacts-- > 0 )
	{
			switch ( _http_actions[_acts++] )
			{
	case 0:
// line 154 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.HEAD;        }
	break;
	case 1:
// line 155 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.GET;         }
	break;
	case 2:
// line 156 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.POST;        }
	break;
	case 3:
// line 157 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PUT;         }
	break;
	case 4:
// line 158 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.DELETE;      }
	break;
	case 5:
// line 159 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CONNECT;     }
	break;
	case 6:
// line 160 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.OPTIONS;     }
	break;
	case 7:
// line 161 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.TRACE;       }
	break;
	case 8:
// line 162 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.COPY;        }
	break;
	case 9:
// line 163 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.LOCK;        }
	break;
	case 10:
// line 164 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKCOL;       }
	break;
	case 11:
// line 165 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MOVE;        }
	break;
	case 12:
// line 166 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPFIND;    }
	break;
	case 13:
// line 167 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PROPPATCH;   }
	break;
	case 14:
// line 168 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNLOCK;      }
	break;
	case 15:
// line 169 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.REPORT;      }
	break;
	case 16:
// line 170 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MKACTIVITY;  }
	break;
	case 17:
// line 171 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.CHECKOUT;    }
	break;
	case 18:
// line 172 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MERGE;       }
	break;
	case 19:
// line 173 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.MSEARCH;     }
	break;
	case 20:
// line 174 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.NOTIFY;      }
	break;
	case 21:
// line 175 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.SUBSCRIBE;   }
	break;
	case 22:
// line 176 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.UNSUBSCRIBE; }
	break;
	case 23:
// line 177 "src/rl/picard/http/HttpParser.rl"
	{ method = HttpMethod.PATCH;       }
	break;
	case 24:
// line 179 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT);                    }
	break;
	case 25:
// line 180 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_CHARSET);            }
	break;
	case 26:
// line 181 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_ENCODING);           }
	break;
	case 27:
// line 182 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_LANGUAGE);           }
	break;
	case 28:
// line 183 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ACCEPT_RANGES);             }
	break;
	case 29:
// line 184 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AGE);                       }
	break;
	case 30:
// line 185 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ALLOW);                     }
	break;
	case 31:
// line 186 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_AUTHORIZATION);             }
	break;
	case 32:
// line 187 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CACHE_CONTROL);             }
	break;
	case 33:
// line 188 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONNECTION);                }
	break;
	case 34:
// line 189 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_ENCODING);          }
	break;
	case 35:
// line 190 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LANGUAGE);          }
	break;
	case 36:
// line 191 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LENGTH);            }
	break;
	case 37:
// line 192 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_LOCATION);          }
	break;
	case 38:
// line 193 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_MD5);               }
	break;
	case 39:
// line 194 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_DISPOSITION);       }
	break;
	case 40:
// line 195 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_RANGE);             }
	break;
	case 41:
// line 196 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_CONTENT_TYPE);              }
	break;
	case 42:
// line 197 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_COOKIE);                    }
	break;
	case 43:
// line 198 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DATE);                      }
	break;
	case 44:
// line 199 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_DNT);                       }
	break;
	case 45:
// line 200 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_ETAG);                      }
	break;
	case 46:
// line 201 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPECT);                    }
	break;
	case 47:
// line 202 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_EXPIRES);                   }
	break;
	case 48:
// line 203 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_FROM);                      }
	break;
	case 49:
// line 204 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_HOST);                      }
	break;
	case 50:
// line 205 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MATCH);                  }
	break;
	case 51:
// line 206 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_MODIFIED_SINCE);         }
	break;
	case 52:
// line 207 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_NONE_MATCH);             }
	break;
	case 53:
// line 208 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_RANGE);                  }
	break;
	case 54:
// line 209 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_IF_UNMODIFIED_SINCE);       }
	break;
	case 55:
// line 210 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_KEEP_ALIVE);                }
	break;
	case 56:
// line 211 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LAST_MODIFIED);             }
	break;
	case 57:
// line 212 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LINK);                      }
	break;
	case 58:
// line 213 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_LOCATION);                  }
	break;
	case 59:
// line 214 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_MAX_FORWARDS);              }
	break;
	case 60:
// line 215 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_P3P);                       }
	break;
	case 61:
// line 216 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PRAGMA);                    }
	break;
	case 62:
// line 217 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHENTICATE);        }
	break;
	case 63:
// line 218 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_PROXY_AUTHORIZATION);       }
	break;
	case 64:
// line 219 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RANGE);                     }
	break;
	case 65:
// line 220 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFERER);                   }
	break;
	case 66:
// line 221 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_REFRESH);                   }
	break;
	case 67:
// line 222 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_RETRY_AFTER);               }
	break;
	case 68:
// line 223 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SERVER);                    }
	break;
	case 69:
// line 224 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_SET_COOKIE);                }
	break;
	case 70:
// line 225 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_STRICT_TRANSPORT_SECURITY); }
	break;
	case 71:
// line 226 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TE);                        }
	break;
	case 72:
// line 227 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRAILER);                   }
	break;
	case 73:
// line 228 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_TRANSFER_ENCODING);         }
	break;
	case 74:
// line 229 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_UPGRADE);                   }
	break;
	case 75:
// line 230 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_USER_AGENT);                }
	break;
	case 76:
// line 231 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VARY);                      }
	break;
	case 77:
// line 232 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_VIA);                       }
	break;
	case 78:
// line 233 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WARNING);                   }
	break;
	case 79:
// line 234 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_WWW_AUTHENTICATE);          }
	break;
	case 80:
// line 235 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_CONTENT_TYPE_OPTIONS);    }
	break;
	case 81:
// line 236 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_DO_NOT_TRACK);            }
	break;
	case 82:
// line 237 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_FOR);           }
	break;
	case 83:
// line 238 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FORWARDED_PROTO);         }
	break;
	case 84:
// line 239 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_FRAME_OPTIONS);           }
	break;
	case 85:
// line 240 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_POWERED_BY);              }
	break;
	case 86:
// line 241 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_REQUESTED_WITH);          }
	break;
	case 87:
// line 242 "src/rl/picard/http/HttpParser.rl"
	{ setHeaderName(HDR_X_XSS_PROTECTION);          }
	break;
	case 88:
// line 244 "src/rl/picard/http/HttpParser.rl"
	{
            httpMinor = 0;
        }
	break;
	case 89:
// line 248 "src/rl/picard/http/HttpParser.rl"
	{
            httpMajor *= 10;
            httpMajor += ( buf.get(p)) - '0';

            if (httpMajor > 999) {
                throw new HttpParserException("The HTTP major version is invalid.");
            }
        }
	break;
	case 90:
// line 257 "src/rl/picard/http/HttpParser.rl"
	{
            httpMinor *= 10;
            httpMinor += ( buf.get(p)) - '0';

            if (httpMinor > 999) {
                throw new HttpParserException("The HTTP minor version is invalid.");
            }
        }
	break;
	case 91:
// line 266 "src/rl/picard/http/HttpParser.rl"
	{
            uriMark = new Mark(buf, p);
        }
	break;
	case 92:
// line 270 "src/rl/picard/http/HttpParser.rl"
	{
            uriMark.finalize(p);

            String uriStr = uriMark.materialize();

            try {
                uri = new URI(uriStr);
            }
            catch (URISyntaxException e) {
                throw new HttpParserException("The URI is not valid: " + uriStr);
            }
            uriMark = null;
        }
	break;
	case 93:
// line 284 "src/rl/picard/http/HttpParser.rl"
	{
            headerNameMark = new Mark(buf, p);
        }
	break;
	case 94:
// line 288 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerNameMark != null) {
                headerNameMark.finalize(p);

                headerName     = headerNameMark.materialize().toLowerCase();
                headerNameMark = null;
            }
        }
	break;
	case 95:
// line 297 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue == null) {
                headerValue = new HeaderValue(buf, p);
            }
            else {
                headerValue.startLine(buf, p);
            }
        }
	break;
	case 96:
// line 306 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.mark(p);
            }
        }
	break;
	case 97:
// line 312 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                headerValue.endLine();
            }
        }
	break;
	case 98:
// line 318 "src/rl/picard/http/HttpParser.rl"
	{
            if (headerValue != null) {
                callback.header(headers, headerName, headerValue.materialize());
                headerValue = null;
            }
        }
	break;
	case 99:
// line 325 "src/rl/picard/http/HttpParser.rl"
	{
            if (contentLength >= ALMOST_MAX_LONG) {
                throw new HttpParserException("The content-length is WAY too big");
            }

            contentLength *= 10;
            contentLength += ( buf.get(p)) - '0';
        }
	break;
	case 100:
// line 334 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 101:
// line 341 "src/rl/picard/http/HttpParser.rl"
	{
            if (isChunkedBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= IDENTITY_BODY;

            headerValue = null;
            callback.header(headers, HDR_CONTENT_LENGTH, String.valueOf(contentLength));
        }
	break;
	case 102:
// line 352 "src/rl/picard/http/HttpParser.rl"
	{
            if (isIdentityBody()) {
                throw new HttpParserException("The message head is invalid");
            }

            flags |= CHUNKED_BODY;

            headerValue = null;
            callback.header(headers, HDR_TRANSFER_ENCODING, VAL_CHUNKED);
        }
	break;
	case 103:
// line 363 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= CONN_CLOSE;

            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_CLOSE);
        }
	break;
	case 104:
// line 370 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= UPGRADE;

            headerValue = null;
            callback.header(headers, HDR_CONNECTION, VAL_UPGRADE);
        }
	break;
	case 105:
// line 377 "src/rl/picard/http/HttpParser.rl"
	{
            flags |= EXPECT_CONTINUE;

            headerValue = null;
            callback.header(headers, HDR_EXPECT, VAL_100_CONTINUE);
        }
	break;
	case 106:
// line 384 "src/rl/picard/http/HttpParser.rl"
	{
            reset();

            flags  |= PARSING_HEAD;
            headers = callback.blankHeaders();
        }
	break;
	case 107:
// line 391 "src/rl/picard/http/HttpParser.rl"
	{
            // Not parsing the HTTP message head anymore
            flags ^= PARSING_HEAD;

            ByteBuffer body = null;

            if (isUpgrade()) {
                cs = 740;
            }
            else if (isIdentityBody()) {
                int remaining = buf.limit() - p;
                // If the remaining content length is present in the
                // buffer, just include it in the callback.
                if (remaining >= contentLength && !isExpectingContinue()) {
                    int toRead = (int) contentLength;
                    ++p;
                    body = slice(buf, p, p + toRead);
                    p += toRead - 1;
                    contentLength = 0;
                }
                else {
                    cs = 739;
                }
            }
            else if (isChunkedBody()) {
                cs = 721;
            }

            callback.message(this, headers, body);

            // Unset references to allow the GC to reclaim the memory
            resetHeadState();
        }
	break;
	case 108:
// line 429 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead = min(contentLength, buf.limit() - p);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;

                if (contentLength == 0) {
                    callback.body(this, null);
                }

                if (contentLength == 0) {
                    cs = 1;
                }
            }
        }
	break;
	case 109:
// line 449 "src/rl/picard/http/HttpParser.rl"
	{
            int toRead = min(contentLength, buf.limit() - p);

            if (toRead > 0) {
                contentLength -= toRead;

                callback.body(this, slice(buf, p, p + toRead));

                p += toRead - 1;
            }
        }
	break;
	case 110:
// line 461 "src/rl/picard/http/HttpParser.rl"
	{
            int remaining = buf.limit() - p;

            if (remaining > 0) {
                callback.message(this, slice(buf, p, buf.limit()));
                break parseLoop;
            }
        }
	break;
	case 111:
// line 470 "src/rl/picard/http/HttpParser.rl"
	{
            callback.body(this, null);
        }
	break;
	case 112:
// line 474 "src/rl/picard/http/HttpParser.rl"
	{
            contentLength = 0;
        }
	break;
	case 113:
// line 478 "src/rl/picard/http/HttpParser.rl"
	{
            if (contentLength >= ALMOST_MAX_LONG_HEX) {
                throw new HttpParserException("The content-length is WAY too big");
            }

            contentLength *= 16;
            contentLength += HEX_MAP[( buf.get(p))];
        }
	break;
	case 114:
// line 487 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 116:
// line 497 "src/rl/picard/http/HttpParser.rl"
	{
            if (++hread > MAX_HEADER_SIZE) {
                throw new HttpParserException("The HTTP message head is too large");
            }
        }
	break;
	case 117:
// line 503 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3650 "src/java/picard/http/HttpParser.java"
			}
		}
	}

case 2:
	_acts = _http_to_state_actions[cs];
	_nacts = (int) _http_actions[_acts++];
	while ( _nacts-- > 0 ) {
		switch ( _http_actions[_acts++] ) {
	case 115:
// line 493 "src/rl/picard/http/HttpParser.rl"
	{
            cs = 1;
        }
	break;
// line 3666 "src/java/picard/http/HttpParser.java"
		}
	}

	if ( cs == 0 ) {
		_goto_targ = 5;
		continue _goto;
	}
	if ( ++p != pe ) {
		_goto_targ = 1;
		continue _goto;
	}
case 4:
	if ( p == eof )
	{
	int __acts = _http_eof_actions[cs];
	int __nacts = (int) _http_actions[__acts++];
	while ( __nacts-- > 0 ) {
		switch ( _http_actions[__acts++] ) {
	case 100:
// line 334 "src/rl/picard/http/HttpParser.rl"
	{
            // Hack to get Java to compile
            if (true) {
                throw new HttpParserException("The content-length is in an invalid format");
            }
        }
	break;
	case 114:
// line 487 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                throw new HttpParserException("Invalid chunk size");
            }
        }
	break;
	case 117:
// line 503 "src/rl/picard/http/HttpParser.rl"
	{
            if (true) {
                String msg = parseErrorMsg(buf, p);
                throw new HttpParserException("Something went wrong:\n" + msg);
            }
        }
	break;
// line 3711 "src/java/picard/http/HttpParser.java"
		}
	}
	}

case 5:
	}
	break; }
	}

// line 702 "src/rl/picard/http/HttpParser.rl"
            }
        }
        catch (RuntimeException e) {
            flags |= ERROR;
            throw e;
        }

        return p;
    }

    private void setHeaderName(String name) {
        headerName     = name;
        headerNameMark = null;
    }

    private Mark bridge(ByteBuffer buf, Mark mark) {
        if (mark == null) {
            return null;
        }

        return mark.bridge(buf);
    }

    private void reset() {
        flags         = 0;
        hread         = 0;
        status        = 0;
        httpMajor     = 0;
        httpMinor     = 9;
        contentLength = 0;
    }

    private void resetHeadState() {
        headers         = null;
        method          = null;
        uri             = null;
        uriMark         = null;
        headerName      = null;
        headerNameMark  = null;
        headerValue     = null;
    }

    private ByteBuffer slice(ByteBuffer buf, int from, int to) {
        ByteBuffer retval = buf.asReadOnlyBuffer();

        retval.position(from);
        retval.limit(to);

        return retval;
    }

    private int min(long a, int b) {
        long cappedA = Math.min((long) Integer.MAX_VALUE, a);
        return Math.min((int) cappedA, b);
    }

    private String parseErrorMsg(ByteBuffer buf, int fpc) {
        int from = Math.max(0, fpc - 35);
        int to   = Math.min(fpc + 35, buf.limit());

        ByteBuffer before = slice(buf, from, fpc);
        ByteBuffer after  = slice(buf, fpc, to);

        byte[] beforeBytes = new byte[before.remaining()];
        byte[] afterBytes  = new byte[after.remaining()];

        before.get(beforeBytes);
        after.get(afterBytes);

        return new String(beforeBytes) + "|" + new String(afterBytes);
    }
}
